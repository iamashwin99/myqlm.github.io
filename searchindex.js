Search.setIndex({"docnames": ["advanced_combinatorial_optimization", "advanced_programming", "aqasm", "batch_generators", "circuit", "circuit-inliner", "combinatorial_optimization_generators_utils", "combinatorial_optimization_intro", "combinatorial_optimization_intro_qa", "combinatorial_optimization_intro_qaoa", "combinatorial_optimization_intro_sa", "combinatorial_optimization_intro_sqa", "commands", "cost_function_plugin", "display-plugin", "getting_started", "graph_colouring_generator", "graph_partitioning_generator", "index", "introduction", "kclique_generator", "manipulating", "max_cut_generator", "myqlm_specific/cirq", "myqlm_specific/compatibility_matrix", "myqlm_specific/contrib", "myqlm_specific/install", "myqlm_specific/interoperability", "myqlm_specific/license", "myqlm_specific/macos", "myqlm_specific/notebooks", "myqlm_specific/openqasm", "myqlm_specific/projectq", "myqlm_specific/pyquil", "myqlm_specific/qat-clinalg", "myqlm_specific/qat-pylinalg", "myqlm_specific/qat-simulated_annealing", "myqlm_specific/qiskit", "myqlm_specific/release-note", "myqlm_specific/release-notes/1.4.0", "myqlm_specific/release-notes/1.5.1", "myqlm_specific/release-notes/1.6.0", "myqlm_specific/release-notes/1.7.1", "myqlm_specific/release-notes/1.7.2", "myqlm_specific/release-notes/1.7.3", "myqlm_specific/support", "notebooks", "observable-splitter", "plugin_adaptvqe", "plugin_gradient_descent", "plugin_multiplelaunches", "plugin_seqoptim", "plugin_zeronoise", "programming", "qat-core", "qat-devices", "qat-fermion", "qat-fermion_advanced", "qat-fermion_basic", "qat-fermion_compatibility_guide", "qat-fermion_plugins", "qat-fermion_source", "qat-lang", "qat-lang-arith", "qat-lang-other", "qat-opt", "quameleon", "remap-plugin", "running_variational", "simulating", "source_doc", "variational-plugin", "vertex_cover_generator"], "filenames": ["advanced_combinatorial_optimization.rst", "advanced_programming.rst", "aqasm.rst", "batch_generators.rst", "circuit.rst", "circuit-inliner.rst", "combinatorial_optimization_generators_utils.rst", "combinatorial_optimization_intro.rst", "combinatorial_optimization_intro_qa.rst", "combinatorial_optimization_intro_qaoa.rst", "combinatorial_optimization_intro_sa.rst", "combinatorial_optimization_intro_sqa.rst", "commands.rst", "cost_function_plugin.rst", "display-plugin.rst", "getting_started.rst", "graph_colouring_generator.rst", "graph_partitioning_generator.rst", "index.rst", "introduction.rst", "kclique_generator.rst", "manipulating.rst", "max_cut_generator.rst", "myqlm_specific/cirq.rst", "myqlm_specific/compatibility_matrix.rst", "myqlm_specific/contrib.rst", "myqlm_specific/install.rst", "myqlm_specific/interoperability.rst", "myqlm_specific/license.rst", "myqlm_specific/macos.rst", "myqlm_specific/notebooks.rst", "myqlm_specific/openqasm.rst", "myqlm_specific/projectq.rst", "myqlm_specific/pyquil.rst", "myqlm_specific/qat-clinalg.rst", "myqlm_specific/qat-pylinalg.rst", "myqlm_specific/qat-simulated_annealing.rst", "myqlm_specific/qiskit.rst", "myqlm_specific/release-note.rst", "myqlm_specific/release-notes/1.4.0.rst", "myqlm_specific/release-notes/1.5.1.rst", "myqlm_specific/release-notes/1.6.0.rst", "myqlm_specific/release-notes/1.7.1.rst", "myqlm_specific/release-notes/1.7.2.rst", "myqlm_specific/release-notes/1.7.3.rst", "myqlm_specific/support.rst", "notebooks.rst", "observable-splitter.rst", "plugin_adaptvqe.rst", "plugin_gradient_descent.rst", "plugin_multiplelaunches.rst", "plugin_seqoptim.rst", "plugin_zeronoise.rst", "programming.rst", "qat-core.rst", "qat-devices.rst", "qat-fermion.rst", "qat-fermion_advanced.rst", "qat-fermion_basic.rst", "qat-fermion_compatibility_guide.rst", "qat-fermion_plugins.rst", "qat-fermion_source.rst", "qat-lang.rst", "qat-lang-arith.rst", "qat-lang-other.rst", "qat-opt.rst", "quameleon.rst", "remap-plugin.rst", "running_variational.rst", "simulating.rst", "source_doc.rst", "variational-plugin.rst", "vertex_cover_generator.rst"], "titles": ["Advanced combinatorial optimization", "Advanced programming using pyAQASM", "The AQASM format", "Building advanced computation stacks", "The high-level wrapper", "CircuitInliner : inlining circuit inside a stack", "Combinatorial Optimization Generators tools", "Combinatorial optimization", "Quantum Annealing (QA)", "Quantum Approximate Optimization Algorithm (QAOA)", "Simulated annealing (SA)", "Simulated Quantum Annealing (SQA)", "Command-line tools", "CostFunctionPlugin: variational optimization without observable", "Display : a console displayer plugin", "Getting started", "Graph Colouring Generator", "Graph Partitioning Generator", "Quantum Application Toolset", "Main objects: Jobs, Observables, Circuits\u2026", "KClique Generator", "Building custom execution stacks", "Max Cut Generator", "Cirq interoperability", "&lt;no title&gt;", "Contributing to myQLM", "Installing myQLM", "Interoperability with myQLM", "myQLM license", "myQLM Installation on MacOS", "Notebooks", "OpenQASM Compiler", "ProjectQ interoperability", "PyQuil interoperability", "qat.clinalg: C++ Linear-algebra simulator", "qat.pylinalg: Python Linear-algebra simulator", "qat.simulated_annealing: Simulated Annealing", "Qiskit interoperability", "Release notes", "myQLM Power Access", "New features", "New features", "A new simulated QPU in myQLM", "Main Fixes", "Main Fixes", "Support", "List of notebooks", "ObservableSplitter : turning observable sampling into qubit sampling", "ADAPT-VQE: building iteratively efficient ansatze", "GradientDescentOptimizer: Natural gradient descent optimizer", "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one", "SeqOptim: optimizing circuits with the sequential optimization algorithm", "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation", "Writing quantum circuits", "qat-core: Core data structures and Abstract classes", "qat.devices: The device library", "Digital quantum simulation for spin and fermionic systems", "Advanced usage", "Basic usage", "Changelog", "Plugins", "Digital quantum simulation for spin and fermionic systems", "qat.lang : Programming tools", "Arithmetic routines", "State preparation and QRAM circuits", "qat-opt: representation and encoding of combinatorial problems, QAOA", "QuameleonPlugin : emulating hardware constraints via a plugin", "Remap: unused qubits remover", "Running variational algorithms", "Executing quantum circuits", "Source code documentation", "Plugins for variational algorithms", "Vertex Cover Generator"], "terms": {"among": [0, 7, 38, 42, 49, 54, 56, 65], "all": [0, 1, 3, 4, 5, 14, 15, 19, 21, 22, 23, 26, 28, 30, 32, 34, 38, 39, 46, 47, 51, 53, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 71], "ones": [0, 7, 61], "highest": [0, 37], "practic": [0, 1, 7, 8, 9, 10, 15, 35, 65, 69], "import": [0, 1, 2, 3, 4, 7, 8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 29, 31, 32, 33, 34, 37, 38, 39, 43, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "repeat": [0, 15, 21, 63, 69], "appear": [0, 19, 28, 54, 62, 69], "ar": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 42, 49, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "machin": [0, 7, 11, 26, 28, 38, 39, 58], "have": [0, 1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 19, 21, 25, 26, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 51, 54, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71], "been": [0, 3, 7, 10, 13, 21, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 56, 59, 60, 62, 65, 69], "dedic": [0, 15, 28, 54, 68], "tackl": [0, 7], "when": [0, 1, 7, 8, 10, 19, 21, 23, 35, 38, 39, 40, 41, 42, 43, 44, 47, 48, 51, 53, 54, 57, 58, 60, 61, 62, 63, 65, 68, 71], "repres": [0, 1, 4, 7, 11, 19, 28, 35, 36, 54, 60, 61, 62, 64, 65], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "Ising": [0, 7, 9, 10, 11, 36, 38, 39, 54], "qubo": [0, 7, 9, 11, 36, 38, 39], "form": [0, 1, 4, 6, 7, 19, 21, 28, 35, 36, 51, 52, 60, 61, 62, 65, 71, 72], "see": [0, 2, 3, 4, 7, 9, 15, 19, 21, 28, 35, 36, 38, 39, 43, 47, 53, 54, 57, 58, 60, 61, 62, 64, 65, 69, 71], "section": [0, 2, 4, 7, 9, 11, 12, 15, 19, 21, 28, 33, 38, 42, 53, 54, 57, 65], "some": [0, 1, 2, 4, 5, 7, 8, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 35, 36, 38, 39, 53, 54, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72], "them": [0, 1, 7, 15, 21, 28, 34, 51, 53, 54, 57, 61, 62, 63, 65, 70, 71], "like": [0, 1, 4, 7, 19, 21, 28, 37, 38, 39, 43, 53, 54, 61], "etc": [0, 2, 4, 7, 11, 15, 18, 19, 21, 28, 29, 38, 42, 54, 56, 62, 65], "could": [0, 1, 3, 6, 7, 12, 19, 21, 26, 37, 38, 42, 54, 57, 58, 65, 67], "easili": [0, 13, 35, 54, 58, 62], "formul": [0, 11, 58, 65], "wai": [0, 1, 4, 7, 19, 21, 28, 29, 34, 36, 53, 54, 57, 60, 62, 63, 65, 67, 68, 71], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72], "myqlm": [0, 7, 11, 12, 13, 19, 21, 23, 30, 31, 32, 33, 35, 36, 40, 41, 43, 44, 45, 53, 56, 59, 65, 70], "tool": [0, 1, 7, 14, 15, 18, 37, 53, 56, 61, 65, 68], "A": [0, 1, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 28, 32, 35, 36, 37, 46, 47, 50, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 71, 72], "descript": [0, 2, 7, 8, 15, 28, 34, 54, 55], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 47, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "found": [0, 3, 4, 6, 15, 19, 38, 42, 45, 54, 56, 59, 61, 65], "below": [0, 1, 4, 15, 16, 17, 19, 20, 21, 22, 26, 28, 34, 36, 38, 43, 47, 54, 58, 59, 61, 62, 64, 65, 69, 71, 72], "respect": [0, 7, 11, 36, 54, 60, 61, 65, 69], "helper": [0, 7, 36, 54, 57, 61], "class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72], "each": [0, 1, 3, 14, 19, 21, 28, 35, 36, 47, 50, 51, 52, 54, 55, 60, 61, 62, 65, 67, 69, 71], "given": [0, 3, 4, 7, 10, 11, 13, 15, 19, 21, 28, 34, 36, 48, 53, 54, 57, 60, 61, 62, 63, 65, 68, 69], "sourc": [0, 2, 19, 21, 27, 29, 35, 38, 42, 53, 56, 57, 69], "code": [0, 1, 2, 3, 7, 8, 10, 11, 12, 13, 14, 15, 19, 21, 25, 27, 28, 29, 35, 45, 53, 54, 56, 57, 59, 62, 65, 66, 69], "exampl": [0, 3, 7, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 28, 29, 36, 46, 53, 54, 57, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72], "notebook": [0, 7, 10, 14, 26, 38, 39, 44, 48, 49, 50, 51, 52, 54, 56, 57, 58, 60, 68], "relat": [0, 7, 62, 63], "batch": [0, 3, 5, 12, 14, 16, 17, 20, 21, 22, 33, 34, 35, 37, 40, 41, 47, 50, 51, 52, 62, 70, 71, 72], "gener": [0, 2, 3, 4, 7, 8, 9, 12, 15, 18, 19, 23, 28, 31, 32, 33, 34, 37, 39, 40, 41, 44, 54, 57, 59, 60, 63, 64, 68, 69, 71], "provid": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 21, 23, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 42, 45, 51, 53, 54, 55, 56, 57, 61, 62, 63, 65, 66, 68, 69, 70, 71], "both": [0, 1, 7, 9, 28, 29, 37, 54, 58, 60, 65], "job": [0, 1, 3, 4, 7, 8, 9, 12, 13, 15, 18, 21, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 50, 52, 57, 60, 61, 62, 66, 67, 70, 71], "solv": [0, 6, 10, 11, 15, 16, 17, 20, 22, 36, 46, 56, 60, 61, 65, 70, 72], "combintori": 0, "pars": [0, 3, 6, 12, 16, 17, 20, 22, 31, 54, 70, 72], "result": [0, 1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 50, 53, 57, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72], "return": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 53, 54, 59, 61, 62, 63, 64, 65, 67, 69, 70, 72], "user": [0, 3, 14, 19, 21, 23, 26, 28, 29, 32, 33, 35, 37, 51, 54, 57, 71], "firendli": 0, "data": [0, 3, 4, 15, 19, 21, 32, 34, 35, 38, 40, 41, 42, 47, 61, 62, 64, 68, 70], "structur": [0, 2, 3, 4, 5, 15, 19, 34, 35, 53, 57, 58, 61, 64, 65, 70], "These": [0, 1, 4, 15, 19, 26, 27, 29, 37, 38, 39, 43, 53, 54, 57, 58, 60, 62, 63, 64, 65, 71], "design": [0, 1, 3, 4, 7, 9, 13, 19, 21, 26, 28, 37, 38, 42, 53, 54, 62, 65, 70], "differ": [0, 1, 4, 7, 9, 16, 17, 19, 20, 22, 28, 29, 35, 38, 43, 47, 50, 52, 53, 54, 57, 58, 60, 61, 63, 65, 69, 71, 72], "type": [0, 2, 3, 4, 7, 8, 13, 16, 17, 19, 20, 21, 22, 23, 26, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 46, 47, 51, 54, 55, 58, 61, 63, 64, 65, 66, 69, 71, 72], "compat": [0, 19, 21, 29, 58, 59, 62], "qpu": [0, 1, 3, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 27, 34, 35, 36, 39, 46, 47, 53, 54, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72], "The": [0, 1, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 63, 64, 65, 66, 68, 69, 71, 72], "qaoa": [0, 7, 11, 18], "pass": [0, 1, 5, 6, 13, 16, 17, 20, 21, 22, 54, 61, 62, 65, 71, 72], "job_typ": [0, 16, 17, 20, 22, 54, 60, 72], "constructor": [0, 2, 54, 56, 57, 61, 62, 65], "execut": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 30, 33, 34, 35, 36, 37, 46, 54, 60, 61, 62, 66, 70, 72], "digit": [0, 7, 9, 18, 38, 42, 60, 65], "two": [0, 1, 2, 4, 7, 12, 13, 15, 19, 21, 28, 29, 35, 36, 37, 38, 39, 46, 47, 53, 54, 57, 60, 61, 62, 63, 64, 65, 67, 69, 71], "submit": [0, 1, 3, 13, 15, 19, 21, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 54, 57, 60, 61, 62, 66, 67, 68, 69, 71], "variat": [0, 3, 7, 9, 15, 18, 21, 38, 42, 43, 44, 49, 51, 54, 56, 60, 61, 65, 70], "determin": [0, 4, 19, 28, 60], "best": [0, 3, 6, 21, 35, 46, 54, 60, 65, 68, 70, 71], "paramet": [0, 1, 2, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 67, 69, 71, 72], "sampl": [0, 1, 3, 6, 7, 11, 13, 15, 19, 21, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 54, 62, 65, 67, 68, 70], "find": [0, 3, 7, 8, 10, 15, 21, 47, 51, 54, 57, 61, 65, 69, 71], "actual": [0, 7, 35, 69], "solut": [0, 3, 6, 7, 8, 9, 11, 36, 61, 65], "method": [0, 1, 2, 3, 4, 6, 7, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 47, 48, 49, 51, 53, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72], "qaoa_ansatz": [0, 7, 11, 65], "circuitgener": [0, 7, 9, 65], "For": [0, 1, 2, 3, 7, 8, 12, 13, 14, 21, 28, 29, 31, 34, 49, 54, 55, 57, 58, 60, 61, 62, 65, 67, 68, 69], "instanc": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 19, 21, 31, 33, 34, 35, 37, 47, 53, 54, 55, 62, 63, 65, 67, 69, 71], "follow": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 26, 28, 29, 31, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71], "exempl": 0, "maxcutgener": [0, 22], "maxcut": [0, 7, 8, 22, 65], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "networkx": [0, 1, 6, 7, 8, 16, 17, 20, 22, 54, 65, 72], "nx": [0, 1, 7, 8, 16, 17, 20, 22, 54, 65, 72], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 48, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "qat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 32, 33, 37, 38, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72], "full_rary_tre": [0, 17, 22, 65, 72], "3": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 34, 36, 37, 39, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72], "6": [0, 1, 6, 7, 13, 15, 17, 20, 21, 22, 24, 26, 27, 28, 33, 40, 42, 43, 44, 48, 55, 57, 58, 61, 65, 68, 72], "here": [0, 1, 2, 4, 7, 8, 15, 16, 17, 19, 20, 21, 22, 26, 35, 38, 42, 47, 53, 54, 56, 57, 58, 60, 61, 62, 64, 65, 66, 69, 72], "also": [0, 1, 2, 4, 7, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 35, 36, 38, 39, 42, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 71, 72], "schedul": [0, 7, 10, 36, 46, 65], "none": [0, 2, 4, 16, 17, 19, 20, 21, 22, 33, 34, 35, 36, 37, 47, 49, 51, 52, 54, 61, 62, 65, 66, 69, 71, 72], "pipe": [0, 21, 37, 38, 42, 54, 70], "comput": [0, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 34, 35, 37, 47, 48, 53, 54, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 72], "stack": [0, 12, 13, 15, 16, 17, 18, 20, 22, 38, 42, 50, 52, 53, 54, 57, 60, 61, 62, 67, 68, 70, 71, 72], "plugin": [0, 3, 5, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 33, 35, 37, 38, 39, 40, 41, 42, 47, 48, 49, 50, 51, 52, 56, 57, 59, 65, 67, 68, 69, 72], "creat": [0, 3, 4, 15, 16, 17, 19, 20, 21, 22, 25, 28, 32, 36, 37, 38, 39, 45, 46, 54, 57, 61, 62, 65, 67, 69, 72], "applic": [0, 1, 2, 3, 4, 7, 8, 18, 19, 21, 28, 35, 51, 53, 54, 62, 64, 65, 71], "call": [0, 1, 2, 5, 7, 11, 12, 15, 19, 21, 32, 34, 35, 38, 42, 53, 54, 59, 60, 61, 62, 63, 64, 65, 69], "scipyminimizeplugin": [0, 3, 13, 15, 16, 17, 20, 22, 57, 60, 65, 68, 71, 72], "get_default_qpu": [0, 1, 3, 13, 15, 16, 17, 20, 21, 22, 54, 57, 60, 61, 62, 67, 68, 69, 71, 72], "max_cut_appl": [0, 22], "cobyla": [0, 15, 16, 17, 20, 22, 57, 60, 68, 71, 72], "tol": [0, 15, 16, 17, 20, 22, 49, 60, 68, 71, 72], "1e": [0, 3, 13, 15, 16, 17, 20, 22, 48, 49, 60, 61, 62, 68, 71, 72], "5": [0, 1, 3, 7, 8, 16, 17, 19, 20, 21, 22, 28, 44, 50, 52, 54, 55, 57, 58, 60, 61, 62, 65, 68, 71, 72], "option": [0, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72], "maxit": [0, 15, 16, 17, 20, 22, 49, 60, 68, 71, 72], "200": [0, 15, 16, 17, 20, 22, 49, 72], "combinatorial_result": [0, 16, 17, 20, 22, 72], "print": [0, 1, 3, 4, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 31, 32, 34, 50, 51, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72], "subset": [0, 16, 17, 22, 34, 35, 46, 47, 65, 69], "cost": [0, 1, 7, 8, 9, 10, 13, 22, 28, 51, 57, 58, 61, 62, 65, 68, 71], "0": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 47, 49, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "4": [0, 1, 2, 3, 4, 6, 7, 15, 16, 17, 19, 20, 21, 22, 28, 42, 43, 44, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 68, 71], "1": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 42, 43, 44, 47, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72], "2": [0, 1, 2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 32, 34, 35, 37, 42, 43, 44, 47, 49, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72], "stdin": [0, 7, 8, 16, 17, 20, 21, 22, 32, 65, 69, 72], "13": [0, 1, 13, 16, 17, 19, 20, 21, 22, 54, 55, 65], "futurewarn": [0, 7, 8, 16, 17, 20, 22, 38, 43, 65, 72], "adjacency_matrix": [0, 7, 8, 16, 17, 20, 22, 65, 72], "scipi": [0, 7, 8, 16, 17, 20, 22, 46, 65, 68, 71, 72], "spars": [0, 7, 8, 16, 17, 20, 22, 34, 61, 65, 72], "arrai": [0, 1, 7, 8, 16, 17, 19, 20, 22, 34, 35, 36, 53, 54, 57, 58, 61, 62, 64, 65, 71, 72], "instead": [0, 7, 8, 11, 12, 16, 17, 20, 21, 22, 38, 40, 41, 42, 43, 53, 54, 58, 59, 62, 63, 65, 72], "matrix": [0, 2, 4, 7, 8, 16, 17, 19, 20, 22, 29, 34, 35, 36, 38, 40, 41, 42, 53, 54, 57, 58, 59, 60, 61, 62, 65, 72], "displai": [0, 3, 6, 12, 16, 17, 20, 21, 22, 26, 28, 34, 38, 39, 43, 44, 46, 57, 62, 65, 67, 70, 72], "simulatedann": [0, 16, 17, 20, 22, 36, 38, 39, 72], "to_job": [0, 1, 3, 4, 12, 13, 15, 19, 21, 36, 38, 39, 54, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71], "traceback": [0, 21, 32, 69], "most": [0, 1, 2, 4, 7, 19, 21, 32, 34, 38, 44, 53, 54, 60, 62, 63, 65, 68, 69], "recent": [0, 21, 32, 69], "last": [0, 1, 3, 7, 19, 21, 32, 61, 62, 69], "file": [0, 12, 19, 21, 28, 30, 31, 32, 37, 38, 43, 44, 53, 54, 62, 69], "line": [0, 1, 2, 15, 18, 19, 21, 23, 28, 29, 32, 53, 69], "9": [0, 1, 2, 7, 17, 22, 24, 26, 28, 29, 38, 39, 53, 54, 55, 62, 65, 68], "modul": [0, 4, 14, 19, 21, 28, 32, 33, 35, 37, 38, 42, 43, 45, 54, 55, 56, 57, 58, 59, 61, 62, 63, 69], "typeerror": [0, 21, 54], "__init__": [0, 3, 21], "miss": [0, 65], "requir": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 17, 19, 20, 21, 22, 28, 29, 38, 42, 43, 44, 47, 51, 54, 62, 63, 65, 68, 69, 71, 72], "posit": [0, 4, 17, 19, 20, 54, 61, 65, 71, 72], "argument": [0, 2, 3, 5, 12, 13, 19, 21, 37, 38, 40, 41, 42, 47, 53, 54, 61, 62, 63, 64, 65, 67, 71], "temp_t": [0, 16, 17, 20, 22, 36, 72], "n_step": [0, 16, 17, 20, 22, 36, 61, 72], "analog": [0, 7, 9, 16, 17, 20, 22, 38, 39, 60, 65, 72], "current": [0, 1, 4, 5, 16, 17, 19, 20, 21, 22, 35, 51, 54, 58, 61, 62, 65, 71, 72], "avail": [0, 3, 7, 11, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 30, 34, 35, 37, 38, 42, 53, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 72], "thei": [0, 1, 7, 15, 19, 21, 28, 31, 35, 38, 39, 54, 57, 58, 61, 62, 65], "full": [0, 1, 7, 28, 35, 36, 38, 42, 54, 60, 61, 63, 64, 70], "qlm": [0, 7, 8, 9, 12, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 53, 54, 57, 60, 65, 68, 69, 71, 72], "applianc": [0, 35, 36, 38, 39], "kcliqu": [0, 6, 65, 70], "concern": [0, 45, 54], "which": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 28, 29, 30, 32, 34, 35, 36, 37, 47, 48, 51, 52, 54, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72], "ani": [0, 1, 2, 3, 4, 7, 8, 12, 18, 19, 21, 28, 32, 35, 37, 45, 50, 54, 57, 59, 62, 63, 65, 67, 69, 71], "output": [0, 1, 3, 4, 12, 14, 15, 19, 21, 31, 34, 35, 37, 46, 54, 61, 62, 63], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "valid": [0, 21, 62], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 15, 19, 21, 24, 26, 28, 33, 35, 37, 51, 52, 54, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71], "word": [0, 7, 37, 52, 62], "obei": [0, 65], "criteria": 0, "right": [0, 1, 3, 7, 11, 28, 35, 49, 52, 53, 54, 61, 62, 63, 65], "howev": [0, 1, 2, 7, 28, 34, 51, 54, 60, 61, 62, 65, 71], "mai": [0, 4, 7, 8, 11, 19, 26, 27, 28, 29, 34, 38, 39, 43, 47, 50, 54, 58, 61, 62, 65, 69, 71], "undirect": [0, 54], "set": [0, 2, 3, 4, 5, 7, 11, 12, 14, 15, 18, 19, 21, 23, 28, 29, 32, 33, 34, 35, 37, 38, 40, 41, 42, 46, 47, 51, 53, 59, 60, 61, 63, 65, 66, 67, 68, 69, 71], "v": [0, 1, 3, 7, 13, 28, 58, 61, 65, 68], "edg": [0, 1, 22], "e": [0, 1, 2, 3, 4, 7, 9, 10, 12, 13, 15, 18, 19, 21, 24, 26, 28, 29, 35, 37, 38, 40, 41, 42, 49, 51, 52, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71], "consist": [0, 3, 7, 10, 15, 28, 35, 36, 47, 51, 53, 54, 61, 62, 65, 69, 71], "subgraph": [0, 17, 20, 22, 72], "connect": [0, 18, 27, 28, 35, 54, 55, 66], "maximum": [0, 7, 11, 28, 35, 48, 49, 52, 54, 62, 65, 71], "need": [0, 1, 3, 5, 7, 8, 9, 10, 15, 21, 22, 26, 28, 35, 36, 37, 38, 42, 45, 47, 53, 54, 57, 58, 60, 61, 62, 63, 65, 69], "spin": [0, 7, 10, 11, 18, 36, 38, 42, 57, 59, 65, 70], "one": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 19, 21, 24, 26, 28, 29, 31, 34, 35, 38, 39, 42, 46, 51, 52, 53, 54, 57, 60, 61, 62, 64, 65, 70, 71], "per": [0, 13, 35], "take": [0, 1, 3, 7, 8, 9, 12, 13, 19, 21, 35, 54, 57, 61, 62, 64, 68, 69], "look": [0, 1, 7, 8, 11, 15, 26, 35, 38, 39, 52, 53, 54, 65, 69], "sa": [0, 7, 26, 28, 36, 65], "equal": [0, 1, 28, 38, 42, 43, 44, 58, 62, 63, 71], "size": [0, 4, 6, 7, 11, 19, 20, 21, 34, 49, 61, 62, 63, 64, 65, 71], "minim": [0, 3, 7, 9, 11, 13, 15, 22, 46, 54, 57, 59, 60, 65, 68, 71], "graphpartit": [0, 17, 65], "graphpartitioninggener": [0, 17], "individu": [0, 26, 28, 47, 63], "condit": [0, 2, 26, 28, 53, 54, 62], "order": [0, 1, 2, 4, 7, 9, 19, 21, 23, 28, 34, 38, 39, 42, 47, 54, 57, 58, 59, 61, 62, 63, 65, 66, 69], "everi": [0, 58, 61], "node": [0, 1, 6, 17, 20, 22, 54, 65, 72], "so": [0, 1, 4, 7, 10, 15, 19, 21, 22, 28, 34, 35, 51, 54, 57, 58, 60, 61, 62, 71], "doe": [0, 3, 7, 10, 21, 28, 34, 35, 47, 54, 62, 63, 69], "properti": [0, 6, 28, 34, 54], "therefor": [0, 1, 16, 17, 20, 21, 22, 28, 36, 53, 61, 65, 72], "we": [0, 1, 2, 4, 5, 7, 8, 11, 15, 19, 21, 28, 32, 33, 35, 36, 47, 49, 51, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 71], "correct": [0, 60, 62, 65], "n": [0, 1, 2, 3, 7, 8, 10, 11, 12, 34, 35, 52, 54, 58, 60, 61, 62, 63, 65, 67], "whether": [0, 7, 11, 28, 31, 34, 37, 49, 51, 54, 61, 71], "same": [0, 1, 3, 4, 7, 19, 24, 26, 28, 29, 37, 38, 40, 41, 42, 49, 51, 54, 60, 61, 62, 63, 64, 65, 69, 71], "nn": 0, "our": [0, 1, 3, 7, 9, 11, 12, 13, 15, 21, 25, 26, 30, 35, 45, 57, 60, 62, 63, 65, 69], "graphcolour": [0, 16, 65], "graphcolouringgener": [0, 16], "where": [0, 2, 7, 9, 10, 15, 21, 28, 34, 35, 47, 51, 54, 61, 62, 63, 64, 65, 68, 71], "vertic": 0, "classic": [0, 4, 7, 9, 10, 11, 15, 19, 21, 34, 35, 38, 42, 46, 49, 54, 56, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71], "complex": [0, 4, 7, 8, 19, 34, 35, 54, 62, 65], "known": [0, 3, 7, 10, 28, 35, 51, 54, 71], "approxim": [0, 7, 15, 46, 54, 60, 61, 65, 71], "algorithm": [0, 1, 7, 10, 11, 15, 16, 17, 18, 20, 22, 28, 36, 47, 48, 53, 57, 59, 60, 63, 65, 69, 70, 72], "o": [0, 7, 12, 24, 26, 33, 47, 52, 54, 60, 61, 65, 69], "log": [0, 1, 7, 11, 29, 54, 64], "out": [0, 2, 18, 21, 28, 29, 34, 35, 50, 54, 61, 63, 68, 69], "exist": [0, 21, 28, 62], "complet": [0, 20, 21, 28, 29, 61, 69], "help": [0, 1, 3, 15, 38, 42, 45, 54, 56, 58, 59, 60, 61, 65], "kcliquegener": [0, 6, 20], "smallest": 0, "ha": [0, 1, 3, 4, 7, 13, 19, 21, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 53, 54, 59, 60, 61, 62, 63, 65, 67, 69], "As": [0, 1, 7, 9, 15, 19, 21, 28, 47, 54, 61, 62, 69], "addit": [0, 1, 4, 19, 21, 28, 38, 39, 54, 57, 58, 61, 62, 63, 67], "want": [0, 3, 7, 8, 15, 19, 21, 25, 26, 51, 53, 54, 60, 61, 62, 65, 71], "know": [0, 28, 35, 53, 57, 61, 62], "To": [0, 1, 2, 7, 8, 13, 14, 15, 19, 25, 28, 29, 37, 50, 54, 56, 57, 58, 60, 61, 62, 63, 65], "would": [0, 3, 7, 19, 21, 23, 32, 33, 37, 38, 39, 53, 54, 60, 61, 62, 65], "vertexcov": [0, 6, 65, 72], "vertexcovergener": [0, 6, 72], "more": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 28, 32, 33, 34, 35, 36, 37, 38, 42, 43, 52, 54, 57, 58, 60, 61, 62, 64, 65, 68, 71], "orient": [0, 18], "belong": [0, 51, 71], "first": [0, 1, 3, 4, 7, 10, 15, 17, 19, 21, 22, 23, 33, 34, 35, 37, 53, 54, 55, 57, 60, 61, 62, 63, 64, 65, 69], "well": [0, 2, 7, 9, 10, 15, 18, 19, 21, 28, 38, 39, 54, 57, 58, 59, 65], "via": [0, 1, 2, 4, 7, 9, 11, 12, 19, 21, 38, 39, 49, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68, 70], "real": [0, 7, 33, 38, 39, 54, 64, 65, 70], "potenti": [0, 2, 61, 62], "sum": [0, 2, 3, 7, 8, 13, 21, 38, 39, 54, 61, 63, 64, 65], "close": [0, 1, 21, 57, 62, 65], "possibl": [0, 1, 2, 7, 8, 9, 12, 19, 21, 28, 36, 38, 39, 45, 49, 53, 54, 59, 61, 62, 65, 68, 69], "obtain": [0, 28, 49, 54, 59, 60, 61], "answer": 0, "numberpartit": [0, 65], "vector": [0, 7, 15, 19, 35, 53, 54, 61, 65], "c": [0, 2, 4, 5, 7, 8, 9, 12, 14, 19, 28, 29, 31, 35, 38, 42, 47, 51, 52, 53, 54, 58, 60, 61, 62, 63, 65, 69, 70, 71], "b": [0, 1, 7, 12, 17, 20, 28, 52, 54, 60, 61, 63, 65, 72], "m": [0, 7, 26, 37, 61, 65], "": [0, 1, 2, 3, 7, 15, 21, 28, 33, 34, 36, 37, 51, 52, 53, 54, 55, 57, 60, 61, 62, 63, 65, 68, 69, 71], "time": [0, 1, 4, 7, 8, 11, 15, 19, 21, 28, 29, 35, 36, 37, 46, 51, 60, 61, 62, 63, 65, 68, 69, 71], "x": [0, 1, 2, 7, 8, 11, 12, 14, 15, 19, 32, 34, 35, 37, 47, 53, 54, 55, 58, 60, 61, 63, 65, 68], "compos": [0, 1, 3, 4, 13, 14, 15, 19, 21, 23, 31, 32, 33, 35, 37, 38, 42, 54, 61, 62, 64, 67, 70], "maxim": [0, 7, 13, 54, 62, 65, 71], "dot": [0, 35, 63], "product": [0, 1, 4, 7, 8, 19, 28, 51, 54, 60, 61, 62, 65, 71], "bilp": [0, 65], "valu": [0, 2, 4, 7, 8, 10, 11, 15, 19, 21, 28, 33, 34, 35, 36, 37, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 63, 65, 68, 69, 71], "although": 0, "sqa": [0, 7, 36, 65], "onli": [0, 1, 2, 6, 7, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 38, 44, 47, 51, 53, 54, 57, 59, 60, 62, 63, 65, 68, 71, 72], "present": [0, 7, 10, 11, 13, 21, 28, 35, 36, 54, 57, 61, 62, 65], "its": [0, 1, 3, 7, 15, 28, 34, 36, 38, 42, 47, 54, 57, 58, 59, 60, 61, 62, 65, 68, 69], "hint": 0, "capabl": [0, 37], "shown": [0, 16, 17, 20, 22, 36, 52, 72], "rang": [0, 2, 3, 7, 15, 21, 54, 61, 62, 65, 68], "togeth": [0, 21, 28, 54], "averag": [0, 69], "wa": [0, 1, 7, 11, 28, 35, 37, 52, 54, 61, 62], "defin": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 19, 21, 22, 27, 28, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 46, 54, 56, 57, 59, 60, 61, 62, 63, 65, 71], "frac": [0, 2, 7, 8, 11, 15, 49, 54, 58, 61, 63, 64, 65], "text": [0, 28, 31, 35, 53, 62], "planar": 0, "random": [0, 7, 10, 15, 21, 36, 50, 51, 54, 59, 60, 61, 64, 65, 68, 71], "gset": 0, "dataset": 0, "20": [0, 1, 7, 8, 16, 17, 22, 35, 55, 62, 65], "tree": [0, 1, 62, 64, 65], "count": [0, 1, 13, 38, 39, 46, 54, 62, 65], "10": [0, 1, 7, 8, 13, 17, 19, 22, 24, 26, 35, 38, 43, 49, 51, 53, 54, 55, 61, 62, 63, 65, 68, 69, 71, 72], "000": [0, 3, 21, 67], "98": [0, 36], "mostli": [0, 54], "sec": 0, "up": [0, 1, 2, 4, 7, 11, 19, 21, 47, 58, 60, 61, 62, 63, 68], "second": [0, 1, 3, 15, 17, 22, 35, 54, 55, 61, 62, 63, 65, 69], "leighton": 0, "dimac": 0, "60": [0, 28, 55], "24": [0, 17, 22, 55, 65], "88": 0, "95": 0, "99": 0, "few": [0, 1, 7, 8, 15, 62], "case": [0, 4, 7, 9, 10, 19, 21, 28, 35, 38, 44, 51, 52, 54, 58, 61, 62, 64, 65, 69, 71], "27": [0, 17, 22, 55], "bhoslib": 0, "450": 0, "4000": 0, "dure": [0, 2, 7, 8, 21, 28, 36, 53, 54, 60, 61, 62, 63], "21": [0, 17, 22, 55], "oei": 0, "smaller": [0, 62], "larger": [0, 7, 9, 61, 62], "30": [0, 17, 22, 35, 38, 39, 55], "non": [0, 2, 4, 5, 7, 8, 10, 19, 28, 38, 40, 41, 42, 44, 47, 54, 62, 64], "40": [0, 54, 55], "instantli": 0, "15": [0, 7, 11, 17, 22, 37, 54, 55, 61, 63], "describ": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 19, 21, 28, 35, 38, 40, 41, 42, 46, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 68, 71], "either": [0, 1, 2, 16, 17, 20, 21, 22, 28, 34, 37, 52, 54, 60, 61, 64, 65, 72], "q": [0, 1, 2, 7, 12, 14, 31, 32, 35, 37, 61, 62, 63, 65], "j": [0, 1, 7, 10, 11, 36, 38, 39, 58, 60, 61, 65, 67], "h": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 31, 32, 34, 36, 37, 47, 49, 53, 54, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 72], "One": [0, 7, 8, 35, 38, 39, 53, 54, 61], "alwai": [0, 3, 7, 10, 13, 14, 19, 53, 54, 61, 62, 64, 65], "extract": [0, 4, 6, 7, 19, 21, 35, 36, 58, 62, 63, 65], "numpi": [0, 1, 3, 7, 8, 15, 16, 20, 21, 34, 35, 36, 38, 43, 54, 57, 58, 60, 61, 64, 65, 68, 71], "fed": [0, 53, 54, 65, 69], "object": [0, 1, 2, 3, 4, 18, 21, 23, 28, 34, 37, 38, 39, 40, 41, 42, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 69, 70], "nativ": [0, 1, 47, 54, 69], "python": [0, 2, 5, 12, 13, 15, 18, 19, 24, 26, 27, 29, 31, 33, 34, 38, 39, 42, 53, 54, 62], "librari": [0, 1, 12, 18, 19, 25, 26, 29, 35, 46, 53, 57], "ocean": 0, "snippet": [0, 1, 15], "opt": [0, 6, 7, 8, 16, 17, 20, 22, 29, 36, 70, 72], "specifi": [0, 1, 2, 7, 8, 9, 10, 13, 15, 29, 35, 36, 37, 47, 54, 61, 62, 63, 64, 65], "add_nodes_from": [0, 16, 20, 65], "arang": [0, 16, 20, 65], "add_edges_from": [0, 16, 20, 65], "impos": 0, "constraint": [0, 54, 62, 65, 70], "encod": [0, 7, 8, 9, 11, 13, 35, 36, 54, 62, 70], "01": [0, 13, 38, 43, 54, 69, 71], "vertex_cover_problem": [0, 65], "offset": [0, 7, 36, 38, 39, 54, 62, 65], "get_q_and_offset": [0, 65], "dimod": 0, "binaryquadraticmodel": 0, "bqm": 0, "pip": [0, 26], "instal": [0, 18, 24, 27, 28, 30, 61], "from_numpy_matrix": 0, "offer": [1, 19, 21, 28, 53], "allow": [1, 2, 5, 6, 7, 9, 10, 19, 21, 28, 37, 51, 54, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69], "veri": [1, 3, 16, 17, 20, 21, 22, 38, 42, 44, 46, 50, 54, 57, 58, 60, 61, 62, 65, 71, 72], "effici": [1, 2, 7, 9, 11, 38, 40, 41, 42, 54, 57, 59, 60, 68, 70], "synthesi": [1, 7, 9, 65], "larg": [1, 7, 8, 10, 19, 47, 54, 61, 65], "you": [1, 7, 8, 9, 14, 15, 19, 21, 23, 25, 26, 28, 29, 30, 32, 33, 34, 37, 38, 39, 42, 43, 45, 51, 53, 54, 56, 57, 58, 59, 62, 63, 65, 68, 69], "parameter": [1, 51, 60, 71], "think": [1, 53, 61], "quit": [1, 14, 21, 65], "conveni": 1, "hardwar": [1, 3, 14, 46, 57, 62, 70], "depend": [1, 2, 3, 7, 8, 9, 11, 26, 27, 35, 36, 46, 51, 53, 54, 60, 61, 62, 64, 65, 71], "wrap": [1, 6, 33, 34, 35, 36, 37, 54, 62, 63, 68], "routin": [1, 2, 4, 15, 19, 21, 47, 54, 61, 62, 64], "insid": [1, 17, 19, 20, 21, 26, 35, 37, 46, 47, 53, 54, 61, 62, 63, 65, 68, 70, 71, 72], "black": 1, "box": [1, 62, 63], "come": [1, 2, 7, 8, 12, 15, 17, 19, 20, 21, 26, 30, 35, 36, 60, 61, 63, 64, 65, 66, 68, 72], "simul": [1, 5, 7, 15, 18, 19, 28, 33, 37, 40, 41, 43, 44, 53, 54, 62, 63, 65, 66, 69], "properli": 1, "might": [1, 4, 5, 7, 8, 19, 21, 31, 47, 53, 54, 58, 60, 62, 63, 65], "inform": [1, 4, 15, 16, 17, 19, 20, 22, 28, 29, 35, 37, 38, 42, 46, 53, 54, 57, 58, 60, 61, 62, 64, 72], "abl": [1, 3, 5, 54, 62, 65], "g": [1, 2, 4, 7, 15, 18, 19, 21, 24, 26, 28, 29, 37, 38, 40, 41, 42, 49, 51, 52, 54, 60, 61, 62, 63, 65, 66, 71], "attach": [1, 5, 19, 28, 54, 62, 68], "sub": [1, 4, 19, 28, 54, 63], "simplic": [1, 57, 60], "input": [1, 7, 12, 14, 16, 17, 20, 21, 22, 23, 31, 35, 37, 38, 40, 41, 42, 54, 57, 58, 61, 62, 63, 64, 65, 71, 72], "signatur": [1, 2, 62], "np": [1, 3, 7, 8, 10, 11, 15, 16, 20, 21, 35, 36, 51, 53, 54, 57, 58, 60, 61, 62, 64, 68, 71], "lang": [1, 2, 3, 4, 5, 13, 14, 15, 19, 21, 38, 42, 43, 44, 53, 54, 57, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71], "aqasm": [1, 3, 4, 12, 13, 14, 15, 18, 19, 21, 32, 35, 46, 53, 54, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71], "def": [1, 2, 3, 13, 15, 21, 53, 62, 65], "phase_matrix": 1, "theta": [1, 2, 15, 49, 51, 53, 54, 57, 60, 61, 62, 68, 71], "diag": 1, "exp": [1, 51, 54, 62, 71], "1j": [1, 53, 62], "phase_g": 1, "float": [1, 2, 3, 13, 15, 16, 17, 19, 20, 21, 22, 34, 35, 48, 49, 51, 53, 54, 57, 60, 61, 62, 65, 68, 71, 72], "matrix_gener": [1, 53, 54, 62], "Or": [1, 23, 33, 37, 62], "altern": [1, 7, 9, 15, 34, 38, 42, 58, 61, 65, 68], "set_matrix_gener": [1, 54], "similarli": [1, 2, 16, 17, 20, 22, 53, 54, 58, 62, 65, 72], "qroutin": [1, 2, 15, 47, 53, 57, 61, 62, 63, 64], "cnot": [1, 2, 3, 14, 15, 21, 31, 32, 34, 37, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 69], "ph": [1, 2, 4, 19, 34, 47, 53, 54, 63], "c_phase": 1, "wire": [1, 15, 53, 62], "new_wir": [1, 15, 53, 62], "c_phase_g": 1, "circuit_gener": [1, 54, 65], "set_circuit_gener": [1, 54], "final": [1, 3, 7, 8, 13, 15, 19, 21, 35, 47, 53, 54, 57, 60, 62, 63, 65, 68, 69, 71], "abstract": [1, 2, 4, 7, 18, 19, 21, 62, 63, 65, 70, 71], "variabl": [1, 4, 7, 16, 17, 19, 20, 21, 22, 36, 37, 49, 60, 62, 65, 71, 72], "qft": [1, 2, 4, 19, 53, 62], "sole": [1, 28], "int": [1, 2, 4, 6, 15, 16, 19, 20, 34, 35, 36, 37, 48, 49, 50, 51, 52, 54, 55, 61, 62, 63, 64, 65, 71], "lambda": [1, 2, 49, 54, 61, 62], "static": [1, 54, 65], "check": [1, 3, 14, 21, 38, 40, 41, 42, 51, 54, 71], "appli": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 19, 28, 34, 35, 38, 39, 53, 54, 57, 60, 61, 62, 63, 66, 67], "number": [1, 3, 4, 7, 9, 11, 13, 15, 16, 19, 21, 22, 29, 34, 35, 36, 38, 39, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 71, 72], "qubit": [1, 2, 3, 7, 12, 13, 14, 15, 21, 23, 31, 32, 33, 34, 35, 37, 46, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 70], "even": [1, 28, 36, 38, 39, 53, 61, 62, 67, 68], "though": [1, 34], "abov": [1, 7, 15, 19, 28, 35, 38, 42, 43, 44, 51, 54, 62, 64, 69, 71], "mechan": [1, 28, 54, 68, 69], "still": [1, 4, 7, 11, 19, 34, 53, 59, 61, 62, 65, 66, 67], "seem": 1, "bit": [1, 2, 4, 7, 8, 15, 19, 21, 24, 26, 34, 35, 53, 54, 61, 63, 65, 67], "clunki": 1, "separ": [1, 23, 28, 32, 33, 37, 59, 63], "build_gat": [1, 2, 62, 63], "decor": [1, 2, 62, 63], "remov": [1, 38, 43, 54, 62, 65, 70], "lot": [1, 7, 15, 21, 62, 65], "clunky": 1, "turn": [1, 21, 54, 62, 63, 65, 69, 70], "walsh_hadamard": 1, "wht": 1, "nbqbit": [1, 3, 4, 15, 19, 21, 47, 54, 55, 57, 60, 61, 62, 63], "prog": [1, 3, 4, 13, 14, 15, 19, 21, 38, 40, 41, 42, 54, 57, 60, 61, 62, 63, 64, 66, 67, 68, 71], "qbit": [1, 2, 3, 4, 13, 15, 19, 21, 47, 53, 54, 57, 62, 63, 64, 65, 66, 67, 68, 69, 71], "qalloc": [1, 3, 4, 13, 14, 15, 19, 21, 53, 54, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71], "contain": [1, 2, 3, 4, 6, 7, 9, 12, 16, 17, 19, 20, 21, 22, 26, 28, 30, 31, 35, 36, 37, 47, 53, 54, 55, 58, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72], "length": [1, 3, 4, 19, 21, 35, 54, 55, 62, 65], "to_circ": [1, 3, 4, 5, 13, 14, 15, 19, 21, 23, 32, 33, 37, 38, 40, 41, 42, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71], "construct": [1, 2, 7, 9, 11, 15, 19, 21, 38, 42, 48, 54, 56, 57, 61, 62, 64, 65, 66], "subroutin": [1, 4, 5, 19], "without": [1, 4, 14, 19, 28, 30, 35, 50, 60, 62, 65, 70], "underli": [1, 2, 28, 54, 58, 59, 62, 63, 66], "consid": [1, 2, 12, 15, 34, 37, 47, 53, 54, 58, 60, 62, 63, 64, 65, 67], "adder": [1, 62, 63], "add": [1, 3, 5, 6, 25, 28, 47, 54, 57, 62, 63, 65, 66], "n1": 1, "n2": 1, "run": [1, 7, 9, 12, 15, 16, 17, 18, 20, 21, 22, 28, 29, 30, 33, 35, 37, 38, 39, 44, 48, 54, 60, 65, 66, 69, 70, 71, 72], "error": [1, 18, 19, 21, 28, 38, 44, 54, 60, 69], "singl": [1, 2, 3, 4, 7, 10, 14, 19, 21, 33, 34, 35, 37, 47, 54, 58, 62, 64, 65], "attempt": [1, 37], "fail": [1, 26, 28, 38, 40, 41, 42, 54, 66], "now": [1, 15, 21, 26, 38, 39, 40, 41, 42, 54, 56, 57, 58, 59, 60, 61, 65, 69], "let": [1, 2, 15, 21, 38, 39, 52, 57, 58, 60, 61, 63, 69], "imagin": [1, 2], "own": [1, 3, 4, 15, 19, 28, 46, 53, 54, 65], "ly": 1, "namespac": [1, 2, 12, 19, 63], "foo": [1, 54, 62], "Its": [1, 7, 8, 54, 56, 60, 61, 62, 65], "my_add": 1, "length1": 1, "length2": 1, "proper": [1, 7, 9, 21, 54, 62], "what": [1, 7, 19, 35, 62, 63], "u": [1, 2, 21, 37, 57, 58, 60, 61, 62, 63, 69], "do": [1, 5, 7, 8, 13, 15, 21, 26, 28, 29, 34, 35, 54, 57, 58, 60, 61, 62, 65], "done": [1, 2, 3, 37, 53, 54, 58, 60, 61, 62, 63, 65], "keyword": [1, 2, 37, 38, 40, 41, 42, 54, 62], "updat": [1, 2, 7, 10, 28, 33, 35, 39, 43, 44, 49, 53, 54, 56, 57, 60, 61, 62, 63, 65], "piec": [1, 4, 7, 8, 19, 54, 62, 64, 65, 69], "part": [1, 7, 14, 21, 38, 42, 54, 56, 61, 62], "stai": 1, "probabl": [1, 3, 7, 8, 10, 13, 15, 19, 21, 34, 35, 54, 61, 62, 67, 69], "your": [1, 4, 14, 19, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 45, 53, 54, 56, 58, 59, 65, 71], "equival": [1, 7, 9, 11, 12, 28, 35, 54, 60, 62, 69], "had": [1, 35], "mani": [1, 3, 7, 11, 38, 42, 54, 57, 58, 59, 60, 64, 65, 68, 69], "common": [1, 7, 11, 19, 28, 65], "scheme": [1, 68], "revers": [1, 15, 21, 28, 29, 34, 54, 57, 62, 63, 65], "particular": [1, 16, 17, 19, 20, 21, 22, 28, 35, 51, 54, 62, 63, 65, 66, 68, 71, 72], "usual": [1, 7, 8, 9, 19, 38, 39, 53, 54, 60, 61, 65, 70], "free": [1, 28, 52, 54, 57, 60, 62], "resourc": [1, 54], "support": [1, 18, 19, 24, 26, 28, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 53, 54, 64, 65, 68, 69], "open": [1, 21, 29, 30, 38, 42, 54, 56, 62, 68], "store": [1, 2, 4, 19, 21, 35, 37, 38, 40, 41, 42, 47, 53, 54, 61, 62, 63, 65], "intern": [1, 5, 28, 48, 54, 61, 62, 65], "pop": [1, 21, 62], "dagger": [1, 4, 7, 9, 19, 52, 54, 58, 60, 61, 62], "Of": [1, 15, 21, 53, 69], "cours": [1, 7, 8, 11, 15, 21, 53, 69], "nest": 1, "system": [1, 7, 8, 10, 11, 18, 21, 28, 38, 42, 57, 58, 59, 60, 64, 65, 70], "fresh": [1, 21, 47, 54, 62, 65], "declar": [1, 2, 4, 7, 19, 28, 37, 54, 62], "set_ancilla": [1, 62], "being": [1, 7, 10, 24, 26, 34, 35, 62, 69], "upon": [1, 19, 21, 28, 54, 59, 61, 65, 69], "dynam": [1, 4, 7, 8, 19, 53, 59, 62, 71], "made": [1, 28, 36, 59, 61, 62, 69], "recurs": [1, 62, 65], "accro": 1, "thing": [1, 7, 15, 38, 42, 63], "ensur": [1, 26, 65], "freed": [1, 62], "befor": [1, 3, 5, 7, 8, 24, 26, 28, 29, 47, 61, 62, 67, 68], "leav": [1, 4, 14, 19, 37, 65], "rangl": [1, 3, 7, 8, 9, 13, 15, 34, 35, 49, 52, 54, 61, 62, 63, 64, 65, 67, 68, 69], "state": [1, 3, 7, 8, 9, 10, 11, 13, 15, 19, 21, 28, 34, 35, 36, 38, 39, 52, 53, 54, 57, 59, 60, 61, 62, 63, 65, 67, 68], "consequ": [1, 7, 54, 62, 65], "qftarith": [1, 2, 4, 19, 53, 54, 63], "classarith": [1, 53, 63], "No": [1, 14, 27, 32, 35, 37, 38, 43], "write": [1, 2, 7, 13, 15, 18, 28, 46, 57, 58, 61, 62, 63, 68], "base": [1, 3, 5, 7, 11, 27, 28, 34, 35, 38, 42, 46, 48, 49, 53, 56, 57, 59, 60, 61, 62, 68, 71], "aglorithm": 1, "sometim": [1, 7, 66], "hard": [1, 7, 10, 11, 13, 35], "translat": [1, 7, 27, 28, 36, 38, 42, 65], "temporari": [1, 28, 46, 62], "intermedi": [1, 3, 15, 19, 35, 54], "quickli": [1, 21], "becom": [1, 21, 28, 29, 54, 68], "overwhelm": 1, "fair": 1, "necessarili": [1, 15, 28, 69], "interest": [1, 7, 11, 52, 58, 60, 61, 68], "nice": [1, 35, 68], "featur": [1, 7, 21, 25, 26, 28, 53, 56, 59, 60, 61, 65, 68], "complic": [1, 15, 62], "high": [1, 7, 10, 11, 15, 16, 17, 20, 22, 35, 53, 54, 61, 62, 65, 68, 72], "er": 1, "level": [1, 7, 9, 15, 21, 35, 38, 42, 53, 54, 57, 58, 59, 60, 61, 68], "It": [1, 2, 7, 8, 9, 10, 12, 21, 34, 35, 36, 38, 39, 40, 41, 42, 51, 54, 57, 59, 60, 61, 62, 64, 65, 66, 69, 71], "regist": [1, 4, 19, 54, 62, 63, 64, 69], "qint": [1, 62], "directli": [1, 2, 7, 9, 13, 27, 34, 35, 53, 54, 57, 59, 60, 62, 65, 68, 69], "perform": [1, 5, 7, 11, 15, 19, 21, 28, 34, 35, 36, 47, 48, 49, 52, 54, 60, 61, 62, 63, 64, 65, 68, 69], "oper": [1, 2, 3, 4, 7, 15, 19, 21, 35, 38, 39, 42, 48, 54, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69], "comparison": [1, 62], "qint1": [1, 62], "qint2": [1, 62], "unimpl": 1, "circuit_ab": 1, "circuit_qft": [1, 63], "carri": [1, 18, 28, 35, 50, 53, 61, 62, 64, 69], "circuit_class": [1, 63], "subsect": 1, "detail": [1, 4, 7, 8, 9, 15, 19, 21, 35, 36, 47, 54, 56, 57, 58, 60, 61, 62, 64, 65, 71], "qbool": [1, 62], "simplest": [1, 54, 68], "qboolarrai": [1, 62], "other": [1, 7, 18, 26, 27, 28, 29, 31, 35, 37, 39, 51, 52, 54, 56, 60, 61, 71], "ad": [1, 19, 23, 32, 33, 37, 38, 39, 40, 41, 42, 43, 59, 62, 63], "correspond": [1, 2, 4, 7, 9, 19, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 52, 53, 54, 60, 61, 62, 64, 65, 69, 70], "sinc": [1, 7, 8, 19, 21, 22, 37, 53, 59, 60, 62, 63, 65, 69], "rout": [1, 62], "xor": [1, 15, 62, 65], "and_expr": [1, 62], "expr1": 1, "expr2": 1, "how": [1, 2, 7, 9, 10, 11, 15, 21, 28, 54, 57, 58, 60, 61, 62, 64, 65, 69], "good": [1, 15, 28, 60, 61], "t": [1, 2, 4, 7, 8, 10, 11, 16, 17, 19, 20, 21, 22, 23, 28, 31, 32, 33, 34, 35, 36, 37, 53, 54, 57, 60, 61, 62, 65, 68, 72], "append": [1, 12, 21, 54, 65], "sequenc": [1, 2, 54, 62, 64], "were": [1, 7, 11, 35], "produc": [1, 7, 8, 9, 19, 36, 61, 62, 64, 65, 66], "q_4": 1, "term": [1, 7, 15, 17, 19, 20, 26, 28, 47, 54, 57, 58, 59, 60, 61, 62, 65, 68, 69, 72], "anoth": [1, 4, 14, 19, 21, 27, 28, 38, 39, 54, 57, 62, 63, 67], "q_5": 1, "toffoli": [1, 2, 62, 63], "OR": [1, 4, 19, 28], "q_3": 1, "de": [1, 54], "morgan": 1, "law": [1, 28], "NOTS": 1, "AND": [1, 2, 4, 19, 28, 62, 65], "notic": [1, 2, 21, 28, 54, 63, 69], "inde": [1, 7], "automat": [1, 7, 8, 26, 38, 42, 47, 54, 59, 60, 61, 62, 63, 65, 68], "flag": 1, "keep": [1, 3, 15, 46, 62, 67, 68, 70], "mind": [1, 58], "procedur": [1, 2, 21, 61], "combin": [1, 7, 28, 61, 62, 65, 69], "context": [1, 7, 57], "copi": [1, 26, 28, 34, 54, 61, 62], "exit": 1, "block": [1, 15], "fact": [1, 4, 19, 28, 69], "just": [1, 7, 8, 53], "syntact": 1, "sugar": 1, "start": [1, 2, 4, 7, 9, 11, 18, 19, 21, 26, 30, 35, 46, 50, 54, 57, 61, 62, 65, 68, 69], "releas": [1, 7, 8, 18, 39, 40, 41, 42, 43, 44, 54, 62, 65], "later": [1, 21, 37, 62, 63], "free_ancilla": [1, 62], "cannot": [1, 28, 34], "whose": [1, 4, 7, 8, 9, 15, 19, 35, 38, 39, 47, 57, 62, 65], "should": [1, 3, 4, 5, 7, 13, 19, 21, 23, 28, 32, 33, 36, 37, 38, 40, 41, 42, 43, 51, 54, 57, 58, 59, 61, 62, 63, 65, 67, 68, 71], "least": [1, 7, 9, 19, 21, 28, 34, 38, 42, 54], "flip": [1, 7, 10, 15, 53, 54, 57, 62, 65], "basi": [1, 7, 8, 15, 19, 28, 35, 38, 42, 47, 54, 56, 57, 58, 59, 62, 63, 69], "verifi": [1, 29], "expr": [1, 54], "amplitud": [1, 15, 19, 34, 35, 46, 54, 63, 69], "fals": [1, 4, 5, 6, 13, 14, 19, 21, 23, 31, 32, 33, 34, 37, 49, 50, 51, 54, 61, 62, 63, 65, 67, 71], "49999999999999994": 1, "0j": [1, 15, 58, 61, 69], "true": [1, 4, 5, 6, 7, 8, 13, 14, 19, 21, 23, 32, 33, 34, 35, 37, 38, 40, 41, 42, 47, 49, 54, 60, 61, 62, 65, 67], "11": [1, 3, 13, 15, 17, 19, 21, 22, 28, 55, 57, 62, 65, 68, 69], "set_valu": [1, 62], "content": [1, 4, 7, 19, 26, 28, 30, 38, 43, 54, 62, 63], "multipl": [1, 4, 19, 28, 38, 39, 54, 59, 60, 61, 62, 63], "trigger": [1, 19, 28, 62], "circuit1": [1, 54], "circuit2": [1, 54], "op": [1, 4, 15, 19, 21, 32, 35, 38, 39, 54, 61, 62, 64, 65, 68], "iterate_simpl": [1, 4, 19, 21, 31, 32, 54, 62, 64, 65, 68], "8": [1, 6, 7, 8, 13, 17, 20, 21, 22, 24, 26, 28, 29, 55, 57, 63, 64, 65, 68], "7": [1, 17, 19, 20, 21, 22, 24, 26, 28, 42, 43, 44, 54, 55, 57, 58, 60, 61, 65, 68], "empti": [1, 2, 54, 57, 62], "did": [1, 2, 54], "hold": [1, 28, 47, 53, 63, 69], "qint3": [1, 62], "depth": [1, 7, 9, 54, 57, 62, 65], "mult": [1, 54, 62, 63], "14": [1, 7, 11, 13, 17, 19, 22, 55, 62], "12": [1, 6, 17, 19, 22, 55, 61, 62, 65], "compar": [1, 34, 54, 63], "thu": [1, 5, 7, 8, 15, 19, 53, 58, 60, 61, 62, 64, 65, 66, 69], "increment": 1, "cast_to": [1, 62], "usag": [1, 4, 19, 46, 54, 56, 62, 64, 66, 68], "cast": [1, 6, 37, 54, 59, 62], "new": [1, 4, 19, 21, 25, 35, 37, 54, 57, 59, 61, 62, 65, 70, 71], "re": [1, 4, 12, 19, 21, 28, 49, 54, 57], "constant": [1, 2, 7, 8, 17, 20, 52, 53, 54, 57, 60, 61, 63, 65, 71, 72], "sai": [1, 61], "anc": 1, "35355339059327334": 1, "323307507451124e": 1, "17j": 1, "3535533905932733": 1, "034254676965732e": 1, "3535533905932734": 1, "0884348908992939e": 1, "16j": 1, "54030915644243e": 1, "3535533905932735": 1, "703410071228764e": 1, "353553390593273": 1, "2696513998078917e": 1, "35355339059327306": 1, "0509864824017613e": 1, "3535533905932732": 1, "6183876264232977e": 1, "straightforward": [1, 7, 12, 21, 54, 65, 69], "simpl": [1, 2, 3, 5, 7, 8, 9, 15, 16, 17, 20, 21, 22, 35, 38, 44, 46, 50, 54, 57, 60, 62, 65, 69, 71, 72], "act": [1, 2, 4, 13, 19, 28, 36, 54, 58, 60, 64, 65], "problem": [1, 3, 6, 8, 9, 10, 11, 15, 16, 17, 20, 22, 36, 51, 54, 56, 58, 60, 61, 68, 70, 71, 72], "clean": 1, "functool": [1, 3], "reduc": [1, 3, 28, 57, 61, 62, 65], "coloring_oracl": 1, "bitlength": [1, 63], "_": [1, 15, 21, 49, 52, 58, 61, 62, 63, 67], "path_graph": 1, "format": [1, 4, 12, 18, 19, 21, 26, 27, 28, 32, 33, 35, 53, 54, 60, 61, 62, 65, 68], "len": [1, 3, 4, 19, 21, 35, 38, 40, 41, 42, 62, 65, 72], "19": [1, 17, 22, 55, 63], "vertex": [1, 46, 65, 70], "formula": [1, 2, 4, 7, 19, 35, 54, 61, 65, 69], "compute\u0441": 1, "c_i": [1, 47], "neq": [1, 7, 8], "c_j": [1, 61], "loop": [1, 35], "Then": [1, 13, 15, 30, 32, 35, 52, 61, 62, 64], "control": [1, 2, 4, 15, 19, 21, 28, 34, 35, 38, 40, 41, 42, 46, 54, 61, 62, 64], "z": [1, 2, 3, 7, 11, 15, 34, 37, 47, 53, 54, 58, 61, 62, 65, 69], "asymptot": [1, 52], "save": [1, 19, 21, 37, 54, 62], "increas": [1, 7, 8, 9, 10, 21, 52, 54, 60, 61, 62], "counter": 1, "enough": [1, 7, 10, 19, 47, 57], "exactli": [1, 15, 62, 65], "number_of_edg": [1, 55], "bit_length": 1, "far": [1, 28, 57], "frugal": 1, "didn": [1, 4, 19], "mention": [1, 19, 51, 69, 71], "everyth": [1, 15, 60], "handl": [1, 4, 7, 9, 15, 18, 19, 58, 61, 62, 65, 66], "circuit": [2, 3, 4, 7, 9, 12, 13, 14, 15, 18, 21, 26, 27, 28, 34, 35, 38, 39, 40, 41, 42, 43, 44, 47, 52, 56, 59, 60, 63, 65, 67, 68, 70, 71], "languag": [2, 12, 15, 28, 46], "command": [2, 18, 26, 29, 31, 32, 46, 53], "purpos": [2, 5, 19, 28, 47, 54, 60, 61, 62, 65, 66], "serial": [2, 4, 12, 19, 35, 38, 39, 53, 54], "quantum": [2, 3, 5, 7, 12, 14, 15, 18, 21, 26, 27, 28, 36, 38, 39, 40, 41, 42, 47, 54, 55, 58, 59, 60, 63, 64, 65, 68, 71], "strongli": [2, 51, 71], "advis": [2, 28, 34], "binari": [2, 7, 12, 35, 36, 37, 54, 60, 65], "dump": [2, 4, 12, 19, 37, 38, 39, 54, 68], "rather": [2, 3, 21, 53, 58, 61, 62], "matric": [2, 35, 51, 54, 60, 61, 62, 65, 71], "similar": [2, 7, 17, 20, 28, 38, 42, 61, 65, 72], "abstractg": [2, 4, 19, 53, 54, 62, 63, 68], "bodi": [2, 4, 5, 19, 57, 58, 62], "ressourc": 2, "constitu": [2, 54], "begin": [2, 3, 7, 10, 12, 38, 42], "cbit": [2, 12, 31, 35, 54, 62], "end": [2, 4, 7, 11, 12, 19, 26, 28, 29, 35, 47, 50, 54, 61, 62, 65, 68], "syntax": [2, 4, 19, 28, 54, 62], "straightfoward": 2, "name": [2, 4, 19, 28, 32, 37, 38, 40, 41, 42, 43, 53, 54, 58, 62, 63, 65, 69], "my_z": 2, "pyaqasm": [2, 4, 18, 19, 23, 33, 37, 46, 53, 54, 62, 63, 64, 68], "parametr": [2, 7, 9, 15, 35, 51, 54, 57, 61, 62, 65, 68, 71], "collect": [2, 7, 9, 15, 28, 38, 39, 47, 49, 51, 54, 57, 62, 65, 68, 71], "involv": [2, 7, 8, 10, 65], "param": [2, 21, 54, 62, 71], "ariti": [2, 4, 19, 35, 47, 53, 54, 61, 62, 63, 65, 68], "string": [2, 4, 7, 8, 15, 19, 31, 49, 54, 61, 62, 65], "my_rxrz": 2, "my_qft": 2, "after": [2, 19, 21, 28, 29, 34, 36, 37, 51, 52, 54, 62, 65, 67, 71], "qbit_list": [2, 62], "referenc": 2, "predefin": 2, "head": [2, 29], "my_cz": 2, "ctrl": [2, 3, 4, 14, 15, 19, 37, 53, 54, 62], "dag": [2, 37, 38, 39, 53, 54, 61, 62], "conj": [2, 62], "tran": [2, 62], "y": [2, 34, 37, 47, 53, 54, 58, 60, 61, 62], "rx": [2, 3, 13, 21, 34, 37, 51, 53, 54, 57, 60, 62, 71], "ry": [2, 15, 21, 34, 37, 47, 51, 53, 54, 57, 60, 61, 62, 64, 68, 71], "rz": [2, 4, 19, 34, 37, 51, 53, 60, 61, 62, 68, 71], "pi": [2, 15, 21, 47, 53, 54, 60, 61, 62, 63], "measur": [2, 4, 7, 8, 19, 23, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 46, 47, 51, 52, 53, 54, 57, 60, 61, 62, 63, 67, 69, 71], "mea": [2, 12, 35], "If": [2, 4, 7, 8, 9, 12, 14, 15, 19, 21, 23, 25, 26, 28, 32, 33, 34, 35, 37, 38, 39, 45, 49, 53, 54, 58, 61, 62, 63, 64, 65, 67, 71], "index": [2, 3, 4, 19, 21, 35, 49, 54, 61, 62, 65, 67], "indic": [2, 4, 19, 28, 35, 37, 57, 61, 62, 63], "reset": [2, 4, 19, 34, 35, 38, 44, 53, 54, 62, 63], "manipul": [2, 4, 7, 11, 15, 18, 19, 35, 38, 42, 46, 58, 70], "chang": [2, 7, 8, 10, 13, 15, 21, 28, 29, 34, 38, 42, 47, 54, 57, 59, 60, 61, 63, 71], "boolean": [2, 4, 7, 19, 35, 37, 54, 65, 67], "logic": [2, 35, 54, 60, 62, 63, 65], "stand": [2, 61, 68], "express": [2, 7, 28, 63, 65], "break": [2, 4, 19, 35, 62, 63, 65], "build": [2, 4, 15, 18, 19, 53, 57, 59, 60, 61, 62, 63, 65, 67, 68, 70, 71], "note": [2, 7, 8, 18, 21, 42, 43, 44, 47, 54, 60, 61, 65, 69], "hadamard": [2, 38, 39, 54], "vmatrix": 2, "sqrt": [2, 15, 54, 63, 69], "pauli": [2, 51, 54, 60, 61, 65, 71], "ident": [2, 52, 60, 62], "phase": [2, 38, 42, 46, 53, 56, 62], "shift": [2, 38, 39, 51, 53, 54, 60, 71], "foral": [2, 7, 61], "rm": 2, "r": [2, 7, 21, 37, 54, 58, 61], "rotat": [2, 7, 9, 51, 54, 61, 62, 65, 71], "co": [2, 47, 53, 54], "sin": [2, 53, 54], "NOT": [2, 19, 28, 53], "csign": [2, 34, 37, 53, 62], "swap": [2, 34, 37, 53, 63], "iswap": [2, 34, 53], "sqrtswap": [2, 34, 53], "ccnot": [2, 34, 37, 53], "through": [2, 18, 21, 28, 29, 32, 34, 37, 46, 51, 53, 54, 61, 62, 64, 65, 71], "aqasm2circ": [2, 53], "infil": 2, "outfil": 2, "version": [2, 4, 6, 7, 19, 24, 26, 28, 29, 31, 34, 38, 42, 43, 44, 54, 56, 57, 59, 61, 62], "implement": [2, 4, 5, 7, 9, 10, 11, 13, 15, 19, 21, 36, 37, 38, 39, 40, 41, 42, 47, 48, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71], "wrote": 2, "my_lib": 2, "py": [2, 19, 31, 38, 43, 46, 69], "misc": [2, 62], "function": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 32, 33, 36, 37, 38, 39, 51, 54, 57, 58, 59, 60, 62, 65, 68, 71, 72], "qb": [2, 3, 13, 21, 54, 65], "inlin": [2, 4, 19, 38, 44, 46, 54, 62, 63, 70], "subcircuit": [2, 4, 19, 53, 54, 62], "place": [2, 5, 7, 8, 15, 28, 54, 62, 63, 65], "l": [2, 7, 11, 58, 60, 61, 64], "my_aqasm": 2, "circ": [2, 3, 4, 12, 13, 14, 15, 19, 21, 23, 31, 32, 53, 54, 57, 60, 61, 62], "arithmet": [2, 38, 39, 53, 54, 62], "sever": [3, 7, 11, 19, 28, 30, 35, 37, 46, 51, 54, 58, 60, 70, 71], "moreov": [3, 12, 21, 54, 62, 65], "perfectli": 3, "friendli": [3, 28, 54], "concept": [3, 54, 65], "while": [3, 7, 19, 24, 26, 28, 37, 54, 57, 58, 60, 66, 69], "flexibl": [3, 23, 32, 33, 37], "servic": [3, 19, 21, 28, 36, 37, 38, 42, 53], "insert": [3, 52, 54, 67, 68], "my_stack": [3, 21], "batchgener": [3, 37, 38, 42, 54], "post_process": [3, 5, 14, 21, 47, 54], "rest": [3, 15, 21, 36, 69], "mandatori": [3, 53], "spec": [3, 14, 16, 17, 20, 21, 22, 54, 62, 66, 72], "specif": [3, 7, 8, 9, 14, 28, 35, 38, 44, 52, 63, 65], "link": [3, 5, 12, 18, 21, 28, 37, 38, 39, 46, 54, 62, 63, 65], "basic": [3, 7, 10, 13, 15, 19, 21, 35, 37, 38, 42, 43, 46, 53, 54, 56, 57, 63, 65, 68, 70], "cat": 3, "abstractgener": [3, 38, 42, 54], "program": [3, 4, 7, 8, 12, 13, 14, 15, 18, 19, 21, 23, 26, 33, 37, 53, 54, 57, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71], "catstategener": 3, "self": [3, 21, 34, 47, 53, 54, 62, 65], "target": [3, 4, 7, 8, 9, 19, 54, 61, 65, 70], "zip": [3, 15, 30], "f": [3, 4, 7, 13, 15, 19, 52, 54, 57, 58, 60, 61, 67, 69], "2f": 3, "50": [3, 21, 28, 55, 60, 65, 69], "111": [3, 21], "iter": [3, 4, 5, 15, 19, 21, 38, 42, 49, 54, 60, 62, 69, 70, 71], "yield": [3, 7, 9, 34, 54, 69], "submiss": [3, 28, 38, 39], "advantag": 3, "than": [3, 7, 11, 14, 15, 28, 34, 54, 58, 60, 61, 62, 65, 71], "previou": [3, 12, 37, 53, 58, 61, 68], "tri": [3, 7, 10], "energi": [3, 7, 9, 10, 13, 15, 21, 36, 38, 39, 48, 54, 57, 60, 61, 65, 68, 71], "observ": [3, 15, 18, 21, 34, 35, 36, 37, 38, 40, 41, 42, 46, 48, 50, 52, 57, 58, 60, 61, 65, 68, 70, 71], "dummi": [3, 54], "ansatz": [3, 7, 9, 15, 38, 42, 50, 51, 52, 56, 59, 60, 70, 71], "ground": [3, 7, 8, 9, 11, 15, 57, 60, 61, 65], "prod": 3, "rx_i": 3, "alpha_i": 3, "mode": [3, 13, 14, 37, 38, 42, 54, 61, 67], "angl": [3, 7, 9, 13, 21, 34, 50, 51, 53, 54, 60, 61, 71], "fix": [3, 7, 8, 50, 54, 65, 67], "ansarz": 3, "core": [3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 35, 36, 38, 42, 43, 44, 53, 55, 58, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72], "ob": [3, 19, 36, 54, 60, 65, 68, 69], "dummyenergyminim": 3, "wall": [3, 15], "gate": [3, 13, 15, 18, 21, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 46, 47, 51, 52, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 71], "practis": 3, "better": [3, 7, 9, 57, 59, 61], "must": [3, 13, 28, 37, 38, 42, 43, 44, 47, 49, 50, 51, 54, 61, 71], "enumer": [3, 13, 19, 21, 54, 60, 65], "new_var": [3, 13, 15, 21, 54, 57, 60, 61, 62, 65, 68, 71], "parameter_map": [3, 13, 54, 61, 68], "best_angles_circ": 3, "optim": [3, 5, 8, 10, 12, 15, 16, 17, 18, 20, 21, 22, 28, 36, 37, 38, 42, 53, 54, 56, 57, 59, 60, 61, 62, 68, 71, 72], "z_i": 3, "\u03c3": 3, "sigma_z": [3, 21, 54, 65, 71], "idx": [3, 13], "isclos": 3, "atol": 3, "continu": [3, 7, 8, 28, 65], "11111": 3, "00": [3, 15, 34, 54, 69], "item": [3, 19, 54], "neither": [3, 28, 67], "nor": 3, "batchresult": [3, 14, 21, 33, 34, 35, 37, 38, 40, 41, 42, 47, 54, 65], "catstateresult": 3, "assert": [3, 28, 55], "invalid": [3, 19], "bitstr": [3, 13, 54, 65, 69], "expect": [3, 13, 34, 47, 52, 54, 57, 60, 61, 63, 69], "list": [3, 18, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 47, 48, 49, 52, 54, 57, 58, 59, 60, 61, 62, 65, 69], "standard": [4, 7, 15, 19, 34, 37, 47, 54, 60, 62, 65, 69], "interfac": [4, 7, 9, 18, 19, 21, 26, 28, 36, 37, 38, 42, 53, 57, 62, 65, 68, 70], "over": [4, 7, 10, 15, 19, 21, 28, 32, 33, 34, 35, 52, 54, 62, 64, 65, 68, 69], "5707963267948966": [4, 19, 21], "7853981633974483": [4, 19], "39269908169872414": [4, 19], "raw": [4, 6, 19, 29, 54], "advanc": [4, 7, 8, 15, 19, 23, 26, 32, 33, 37, 46, 54, 56, 62, 68], "remap": [4, 19, 54, 63, 70], "_2": [4, 19], "_4": [4, 19], "_6": [4, 19], "concaten": [4, 19, 54], "overload": [4, 19, 21, 38, 42, 54, 62, 65, 68], "__add__": [4, 19], "tensor": [4, 19, 49, 51, 54, 60, 61, 64, 71], "__mult__": [4, 19, 54], "deseri": [4, 12, 19], "load": [4, 12, 19, 37, 38, 39, 54, 64], "bind": [4, 19, 21, 28, 54, 65, 71], "bind_vari": [4, 19, 54, 61], "easi": [4, 13, 18, 19, 29, 54, 71], "access": [4, 19, 26, 29, 34, 35, 54, 55, 57, 58, 60, 62, 63, 64, 65, 69], "nbcbit": [4, 19, 54], "At": [4, 7, 10, 19, 29, 62, 65], "convent": [4, 7, 12, 19, 34, 35, 53, 54, 61], "extend": [4, 19, 21, 28, 38, 39, 54, 62], "match": [4, 7, 19, 51, 62, 65, 67, 71], "zero": [4, 7, 19, 38, 42, 54, 56, 57, 58, 60, 61, 65, 67, 69, 70], "field": [4, 7, 19, 28, 36, 38, 39, 47, 51, 54, 65, 69, 71], "total": [4, 19, 52, 61, 62], "ancilla": [4, 19, 46, 62], "alloc": [4, 15, 19, 23, 31, 62, 63], "emul": [4, 5, 7, 11, 19, 46, 67, 69, 70], "extens": [4, 7, 19, 60], "flow": [4, 19, 54], "qreg": [4, 19, 21, 31, 54, 62], "pleas": [4, 12, 14, 19, 21, 24, 26, 27, 28, 30, 34, 37, 38, 39, 42, 45, 53, 54, 56, 60, 61], "refer": [4, 7, 12, 19, 27, 28, 29, 34, 37, 38, 42, 46, 53, 54, 56, 57, 60, 62, 65, 71], "get": [4, 18, 19, 21, 29, 37, 46, 54, 57, 59, 60, 61, 69], "main": [4, 5, 12, 18, 33, 35, 37, 53, 61, 62, 65, 66, 69], "formal": [4, 7, 11, 13, 19, 36, 69], "document": [4, 7, 11, 15, 19, 21, 27, 28, 34, 35, 38, 39, 42, 47, 53, 56, 57, 58, 61, 62, 65, 69, 71], "comm": [4, 19, 35, 38, 42, 43, 44, 54, 69], "datamodel": [4, 19, 35], "ttype": [4, 19, 35, 54, 69], "distinguish": [4, 19], "between": [4, 7, 9, 13, 19, 21, 26, 36, 38, 39, 52, 54, 59, 60, 61, 62, 63, 65, 67, 71], "attribut": [4, 6, 19, 21, 28, 35, 38, 40, 41, 42, 54, 57, 59, 62, 64, 67], "str": [4, 16, 17, 19, 20, 22, 35, 37, 47, 49, 52, 54, 60, 61, 62, 65, 71, 72], "uniqu": [4, 19, 65], "identify": [4, 19], "optyp": [4, 19], "rpf": [4, 19], "permut": [4, 19, 34], "precis": [4, 7, 19, 21, 34, 54, 57, 61, 71], "classicctrl": [4, 19, 35], "gatetyp": [4, 19, 35, 54], "onc": [4, 7, 9, 15, 19, 29, 37, 53, 54, 57, 59, 60, 64, 68], "variou": [4, 7, 11, 19, 28, 47, 53, 55, 57, 59, 61, 62, 63, 69, 70], "relev": [4, 19, 28, 47, 59], "exact": [4, 15, 19, 57, 61, 65, 69], "prefix": [4, 19, 54, 63], "evalu": [4, 15, 19, 21, 35, 38, 39, 52, 54, 61, 62, 65, 69], "abort": [4, 19], "formula_ev": [4, 19, 54], "cbit_valu": [4, 19], "rewir": [4, 19], "seen": [4, 7, 19, 21, 54, 57, 58, 60, 65], "integ": [4, 19, 35, 36, 53, 54, 61, 65, 67, 71], "receiv": [4, 19, 21, 28, 36, 51, 54, 71], "kei": [4, 19, 47, 54, 62, 65], "gated": [4, 19, 54], "entri": [4, 19, 21, 54, 65], "gatedefinit": [4, 19], "nrow": [4, 19], "ncol": [4, 19], "complexnumb": [4, 19, 21, 54], "7071067811865475": [4, 15, 19, 69], "im": [4, 19, 21], "is_ctrl": [4, 19], "is_dag": [4, 19], "is_tran": [4, 19], "is_conj": [4, 19], "subgat": [4, 19, 54], "gsyntax": [4, 19], "nbctrl": [4, 19, 62], "circuit_implement": [4, 19], "toggl": [4, 19], "instanti": [4, 15, 19, 21, 36, 37, 50, 54, 61, 62, 65, 68, 69], "manual": [4, 19, 33, 57], "writ": [4, 19], "definit": [4, 7, 19, 28, 46, 53, 54, 58, 61, 62, 65], "unitari": [4, 19, 35, 54, 57, 60, 62], "column": [4, 19], "row": [4, 19], "bool": [4, 5, 6, 13, 14, 19, 34, 37, 49, 50, 51, 54, 61, 62, 65, 71], "deprec": [4, 7, 8, 19, 26, 33, 53, 56, 59, 65], "conjug": [4, 19, 61, 62], "transpos": [4, 19, 61, 62], "signifi": [4, 19, 62], "strict": [4, 19], "There": [4, 5, 7, 11, 15, 19, 21, 29, 62], "three": [4, 7, 9, 19, 21, 37, 47, 51, 54, 56, 58, 62, 63, 65, 71], "id": [4, 19, 37], "transform": [4, 19, 21, 28, 38, 42, 46, 47, 56, 57, 58, 59, 60, 62, 63], "_0": [4, 19, 61, 65], "instruct": [5, 53, 54, 62, 65], "skip": [5, 21, 33, 37, 62, 63], "step": [5, 7, 11, 21, 36, 49, 53, 54, 57, 60, 61, 62, 63, 67], "default": [5, 7, 8, 13, 14, 15, 17, 20, 21, 23, 27, 29, 31, 32, 33, 34, 35, 37, 47, 48, 49, 50, 51, 52, 54, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72], "behavior": [5, 7, 8, 13, 19, 29, 35, 54, 63, 65, 66], "further": [5, 62], "pylinalg": [5, 12, 13, 19, 21, 34, 37, 38, 40, 41, 42, 62, 66, 70], "isinst": 5, "inplac": 5, "manag": [5, 28, 46], "make": [5, 7, 28, 29, 34, 36, 45, 61, 62, 63, 65], "qat_circ": 5, "fly": 5, "beforehand": [5, 54], "worst": [5, 62], "perfom": 5, "deepcopi": [5, 54, 61], "process": [5, 7, 14, 15, 18, 21, 28, 36, 37, 47, 53, 54, 60, 62, 67, 69, 70], "classmethod": [5, 47, 54], "addarg": [5, 47], "parser": [5, 31, 47], "compil": [5, 14, 18, 21, 27, 28, 32, 33, 47, 53, 54, 62, 67, 68], "_spec": [5, 47, 62], "do_post_process": [5, 14, 21, 47, 54], "post": [5, 14, 21, 28, 47, 54, 67, 70], "graphpartitioningresult": [6, 16, 17, 22, 65], "graph": [6, 7, 8, 20, 22, 46, 47, 54, 70, 72], "arg": [6, 32, 37, 54, 62, 65], "kwarg": [6, 16, 17, 20, 22, 23, 31, 32, 33, 37, 47, 54, 62, 65, 68, 71, 72], "partit": [6, 46, 65, 70], "represent": [6, 14, 17, 20, 28, 35, 36, 54, 56, 57, 59, 60, 61, 62, 70, 72], "under": [6, 28, 34, 38, 43, 46, 53, 54, 60], "visual": [6, 54], "with_figur": 6, "figsiz": 6, "node_s": 6, "300": [6, 48, 71], "font_siz": 6, "draw_networkx": 6, "matplotlib": 6, "pyplot": 6, "figur": [6, 53], "tupl": [6, 23, 32, 33, 35, 36, 37, 54, 61, 65], "diagram": [6, 63], "font": 6, "kcliqueresult": [6, 20], "subclass": 6, "vertexcoverresult": [6, 72], "life": [7, 59], "intrins": 7, "lowest": [7, 9, 50, 61, 65, 68], "physic": [7, 11, 28, 35, 58, 65], "hamiltonian": [7, 8, 9, 11, 15, 17, 20, 36, 38, 42, 54, 56, 57, 59, 60, 65, 72], "due": [7, 28, 61, 69], "intim": 7, "minimum": [7, 8, 10, 11, 15, 51, 65, 71], "claus": [7, 62, 65], "anneal": [7, 46, 65, 70], "challeng": [7, 61], "effort": 7, "put": [7, 15, 23, 29, 32, 33, 34, 37, 61], "year": 7, "luc14": 7, "direct": [7, 28, 54, 57, 58], "along": [7, 9, 11, 28, 29, 36, 65, 69], "regard": [7, 28, 29, 61, 65], "local": [7, 10, 19, 21, 33, 51, 54, 60, 71], "sum_": [7, 10, 11, 15, 35, 36, 58, 61, 63, 64, 65], "h_": [7, 8, 10, 11, 58, 61], "sigma_": [7, 11], "j_": [7, 10, 11, 36], "ij": [7, 10, 36, 49, 61], "pmatrix": 7, "coeffici": [7, 51, 52, 54, 60, 61, 68, 71], "magnet": [7, 36, 38, 39, 65], "symmetr": [7, 65], "diagon": [7, 9, 15, 47, 57, 61, 65], "coupl": [7, 36, 38, 39, 57, 65], "quantiz": [7, 61], "s_": [7, 10, 11, 61, 65], "interact": [7, 26, 30, 34, 54, 57, 58, 61, 65], "restrict": [7, 8, 28, 57, 59, 61, 65], "clariti": [7, 59], "readabl": [7, 28, 53], "includ": [7, 18, 23, 28, 32, 33, 34, 35, 36, 37, 38, 42, 50, 53, 54, 56, 58, 59, 61, 62, 63, 71], "Such": [7, 28, 51, 65, 71], "landscap": 7, "convert": [7, 12, 23, 32, 33, 35, 37, 57, 58, 61, 69], "vice": [7, 12, 23, 27, 33, 37], "versa": [7, 12, 23, 27, 37], "typic": [7, 11, 61], "try": [7, 13, 19, 21, 38, 40, 41, 42, 44, 45, 54, 57, 65, 68], "reach": [7, 21, 52, 57], "reli": [7, 15, 38, 39], "adiabat": [7, 8, 61], "theorem": [7, 8], "al18": 7, "configur": [7, 10, 11, 26, 28, 36, 37, 54, 61], "markov": [7, 10], "chain": [7, 10, 54], "space": [7, 15, 21, 38, 42, 54, 56, 57, 59, 60, 61, 62], "low": [7, 10, 16, 17, 20, 21, 22, 38, 42, 54, 57, 60, 63, 65, 72], "ferromagnet": 7, "align": 7, "onto": [7, 35, 67], "tend": [7, 68], "lower": [7, 9, 10, 34, 54, 57, 59, 61, 63, 65, 71], "closer": 7, "aim": [7, 10, 11, 38, 42, 56, 65], "min_": 7, "left": [7, 11, 35, 49, 52, 53, 54, 61, 62, 63, 65], "to_qubo": [7, 65], "combinatorialproblem": [7, 9, 65], "to_combinatorial_problem": [7, 65], "quadrat": [7, 15, 36], "unconstrain": [7, 36], "x_": [7, 58], "q_": 7, "written": [7, 28, 34, 35, 38, 42, 54, 58], "mean": [7, 19, 28, 37, 47, 54, 57, 60, 62, 63, 65, 69], "element": [7, 15, 36, 54, 61, 62, 65], "becaus": [7, 26, 69], "quad": 7, "effect": [7, 8, 28, 35, 54, 62, 63, 69], "linear": [7, 9, 38, 42, 52, 54, 55, 60, 65, 70], "2x_": 7, "to_is": [7, 65], "explicitli": [7, 28], "var": [7, 65], "achiev": 7, "accept": [7, 10, 28, 35, 54, 58, 61, 62], "desir": [7, 26, 27, 61], "weight": [7, 8, 13, 65, 71], "heurist": [7, 9, 10, 11, 34, 65], "ans\u00e4tz": [7, 9, 11, 65, 68], "inspir": [7, 9, 61, 63, 65], "evolut": [7, 9, 35, 36, 54, 61, 65], "ramp": [7, 9, 65], "initi": [7, 8, 9, 28, 35, 49, 50, 51, 53, 54, 57, 59, 60, 61, 62, 64, 65, 67, 69, 71], "h_0": [7, 8, 9, 65], "sum_i": [7, 9, 36, 54, 61, 64, 65, 68], "sigma_x": [7, 8, 9, 54, 65, 68], "shape": [7, 9, 19, 35, 57, 61, 64], "h_c": [7, 8, 9], "propag": [7, 9], "gamma": [7, 9, 11, 65, 71], "beta": [7, 9, 21, 61, 64], "simpli": [7, 9, 21, 54, 62, 65], "r_x": [7, 9, 65], "quantiti": [7, 9, 13, 54], "langl": [7, 9, 15, 49, 52, 54, 60, 61, 62, 68, 69], "overlap": [7, 8, 9, 61, 65], "d": [7, 9, 28, 54, 61, 65], "layer": [7, 9, 57, 61, 65, 66, 68], "theori": [7, 9, 28, 57, 59, 61], "greater": [7, 9, 38, 42, 43, 44], "slow": [7, 9], "down": [7, 9, 21, 47, 54, 56, 60, 61], "converg": [7, 9, 51, 71], "fulli": [7, 9, 31, 54, 55, 59], "fgg14": [7, 9], "readi": [7, 9, 38, 39, 65], "care": [7, 9, 28, 52, 57, 65, 68], "vsolv": [7, 9, 65], "ansatzfactori": [7, 9, 65], "recip": [7, 9, 62, 65], "factori": [7, 9, 15, 65], "pick": [7, 9, 26, 60, 65, 71], "strategi": [7, 9, 61, 63, 65], "histor": [7, 10], "decreas": [7, 10, 11, 28, 57, 60, 62, 65, 69], "stochast": [7, 10, 54, 60, 71], "temperatur": [7, 10, 11, 16, 17, 20, 22, 36, 65, 72], "jump": [7, 10], "barrier": [7, 10], "escap": [7, 10], "optima": [7, 10], "settl": [7, 10, 11, 28], "hopefulli": [7, 10], "global": [7, 8, 10, 60], "optimum": [7, 10], "mathemat": [7, 10, 53], "choos": [7, 10, 28, 34, 48, 49, 54, 57, 60, 65], "evolv": [7, 8, 10, 54], "p_": [7, 10, 54], "min": [7, 10, 21, 54, 57, 60, 65], "delta": [7, 10, 61], "incur": [7, 10, 28], "switch": [7, 10, 69], "wherea": [7, 10, 52, 54], "neglig": [7, 10, 28], "pictur": [7, 10, 11, 53], "explain": [7, 10, 21], "pseudo": [7, 10, 11, 60], "work": [7, 10, 11, 14, 21, 26, 28, 29, 31, 35, 38, 39, 44, 52, 60, 61, 63, 68], "antiferromagnet": [7, 10, 15], "model": [7, 10, 15, 54, 57, 58, 59, 60, 64], "question": [7, 11, 45], "those": [7, 11, 28, 54, 67, 69], "matter": [7, 11, 63], "hot": [7, 11], "scientif": [7, 11], "debat": [7, 11], "beyond": [7, 11, 28], "scope": [7, 11, 21, 46, 62], "reader": [7, 11], "ronnowwj": [7, 11], "dbi": [7, 11], "16": [7, 11, 17, 22, 55], "hja": [7, 11], "aa17": [7, 11], "discret": [7, 11], "path": [7, 11, 29, 30, 53], "integr": [7, 11, 57, 61], "mont": [7, 11, 65], "carlo": [7, 11, 65], "derivedf": [7, 11], "martovnakst02": [7, 11], "short": [7, 11, 35], "equilibrium": [7, 11], "distribut": [7, 11, 15, 24, 26, 28, 34, 35, 38, 39, 54, 60, 62, 64], "finit": [7, 11, 54], "k": [7, 11, 15, 20, 34, 35, 46, 49, 54, 58, 61, 62, 63, 64, 65], "n_": [7, 11, 21, 52, 60, 61, 69], "trotter": [7, 11, 38, 42, 56, 61, 65], "perp": [7, 11], "cdot": [7, 11], "tanh": [7, 11], "replac": [7, 11, 28, 37, 52, 54, 59, 60, 62], "gradual": [7, 11], "prepar": [7, 8, 11, 15, 19, 28, 38, 39, 53, 60, 61, 62, 65, 69], "transit": [7, 11], "idea": [7, 11, 60, 61], "point": [7, 11, 21, 35, 50, 52, 54], "gamma_": [7, 11], "kept": [7, 11], "memori": [7, 11, 19, 34, 35, 58, 62, 64], "polynomi": [7, 11, 65], "limit": [7, 11, 28, 35, 69], "techniqu": [7, 11, 51, 60, 65, 71], "sqaqpu": [7, 11], "qualiti": [7, 11, 28, 36, 59, 61], "fine": [7, 11, 21, 53, 65], "tune": [7, 11, 51, 53, 71], "solver": [7, 11, 21, 36, 59, 65], "test": [7, 11, 28, 31, 36, 38, 39, 54], "benchmark": [7, 11, 36, 65], "record": [7, 11], "qa": 7, "framework": [7, 8, 13, 18, 26, 27, 29, 65], "util": [7, 8, 59, 63], "often": [7, 8, 14, 58, 65], "independ": [7, 8, 28, 54, 62, 65], "mix": [7, 8, 23, 52, 65], "slowli": [7, 8], "accord": [7, 8, 28, 49, 54, 61, 62, 63], "descib": [7, 8], "earlier": [7, 8, 57, 60], "erdos_renyi_graph": [7, 8], "tmax": [7, 8, 54, 65], "annealing_job": [7, 8, 65], "47": [7, 8, 55, 69], "hamitonian": [7, 8], "otim": [7, 8, 65, 69], "alreadi": [7, 8, 26, 54, 57, 60, 61, 62, 64], "pre": [7, 8, 63], "mixingfactori": [7, 8, 65], "move": [7, 8, 65], "subspac": [7, 8, 46, 56], "ham": [7, 8, 13, 65], "search": [7, 8, 15, 21, 46, 61, 62], "bit_mov": [7, 8, 65], "deprecationwarn": [7, 8, 38, 43, 65], "alia": [7, 8, 54, 65], "builtin": [7, 8, 65], "silenc": [7, 8, 65], "warn": [7, 8, 33, 65], "itself": [7, 8, 53, 54, 57, 65, 68], "modifi": [7, 8, 28, 35, 54, 61, 62, 65], "safe": [7, 8, 62, 65], "scalar": [7, 8, 19, 54, 65], "complex128": [7, 8, 34, 65], "guidanc": [7, 8, 65], "http": [7, 8, 28, 29, 33, 65, 71], "org": [7, 8, 24, 26, 28, 29, 38, 39, 65, 71], "devdoc": [7, 8, 65], "html": [7, 8, 65], "lead": [7, 8, 19, 60, 65], "trivial": [7, 8, 21, 47, 62, 64], "tameem": 7, "albash": 7, "daniel": 7, "lidar": 7, "review": 7, "modern": 7, "90": 7, "015002": 7, "2018": 7, "url": [7, 35, 54], "journal": 7, "ap": 7, "rmp": 7, "1103": 7, "revmodphi": 7, "evgeni": 7, "andriyash": 7, "mohammad": 7, "amin": 7, "2017": [7, 64], "arxiv": [7, 51, 63, 71], "1703": 7, "09277": 7, "vasil": 7, "denchev": 7, "sergio": 7, "boixo": 7, "sergei": 7, "isakov": 7, "nan": 7, "ding": 7, "ryan": 7, "babbush": 7, "vadim": 7, "smelyanskii": 7, "john": 7, "martini": 7, "hartmut": 7, "neven": 7, "tunnel": [7, 61], "031015": 7, "2016": 7, "prx": 7, "physrevx": 7, "edward": 7, "farhi": 7, "jeffrei": 7, "goldston": 7, "sam": 7, "gutmann": 7, "2014": [7, 65], "1411": [7, 63], "4028": 7, "itai": 7, "hen": 7, "joshua": 7, "troel": 7, "\u00f8": 7, "nnow": 7, "matthia": 7, "troyer": 7, "probe": 7, "speedup": 7, "glass": 7, "plant": 7, "92": 7, "042325": 7, "2015": 7, "pra": 7, "physreva": 7, "andrew": 7, "luca": [7, 65], "frontier": 7, "www": [7, 28], "frontiersin": 7, "articl": [7, 48, 60, 61], "3389": 7, "fphy": 7, "00005": 7, "roman": 7, "marto": 7, "\u0148": 7, "\u00e1": 7, "giusepp": 7, "santoro": 7, "erio": 7, "tosatti": 7, "dimension": 7, "ising": [7, 54], "66": 7, "094203": 7, "2002": 7, "prb": 7, "physrevb": 7, "zhihui": 7, "wang": 7, "david": 7, "wecker": 7, "detect": [7, 54], "scienc": [7, 64], "345": 7, "6195": 7, "420": 7, "424": 7, "sciencemag": 7, "combinatori": [8, 9, 10, 16, 17, 18, 20, 22, 36, 68, 72], "script": [12, 31], "decompil": [12, 28], "ato": [12, 26, 28, 37, 38, 39, 46, 53], "assembli": [12, 46], "useabl": 12, "learn": [12, 15, 28, 38, 39, 60, 69], "about": [12, 15, 35, 38, 39, 53, 54, 57, 58, 62], "suppli": [12, 37], "assum": [12, 13, 21, 28, 33, 47, 51, 54, 57, 60, 62, 64, 71], "my_prog": 12, "my_prog_2": 12, "coulb": 12, "direclti": 12, "class_nam": [12, 62], "stdout": [12, 38, 39], "batchout": 12, "jobout": 12, "natur": [12, 28, 37, 38, 42, 46, 56, 57, 59, 60, 61, 69, 70], "batchr": 12, "statist": [12, 38, 39, 54, 63, 69], "interpret": [12, 16, 17, 20, 22, 28, 72], "weigth": 13, "maximim": 13, "easier": [13, 28, 59], "focu": 13, "chosen": [13, 49, 61, 63, 71], "illustr": [13, 15, 57, 61, 68, 69], "cost_funct": 13, "retriev": [13, 21, 32, 37, 38, 40, 41, 42, 47, 64], "higher": [13, 21, 34, 54, 61, 62, 63], "job_fixed_angl": 13, "result_fixed_angl": 13, "6e": 13, "5e": 13, "is_result_argu": 13, "3e": 13, "my_funct": 13, "callabl": [13, 47, 54], "use_result": 13, "graphic": 14, "explicit": [14, 54], "termin": [14, 28, 29, 54], "jupyt": [14, 26, 30, 38, 43, 44, 54, 56, 57, 58, 60], "qatdisplai": [14, 26], "magic": [14, 26], "bell": [14, 15, 31], "pair": [14, 15, 31, 46, 47, 52, 54, 60, 61, 65, 67], "press": 14, "too": [14, 58, 61], "big": [14, 58, 61], "entir": [14, 28, 35, 61], "arrow": [14, 63], "keyboard": 14, "batchmod": [14, 54, 67], "wait": [14, 37, 54], "next": [14, 19, 29], "stop": [14, 19, 48, 49, 62, 71], "hardwarespec": [14, 16, 17, 20, 21, 22, 38, 40, 41, 42, 54, 55, 66, 70, 72], "hello": 15, "world": 15, "qprog": [15, 69], "export": [15, 28, 32, 62], "processor": [15, 18, 19, 35, 46, 54, 55, 70], "unit": [15, 18, 36, 69], "compon": [15, 53, 69], "atom": [15, 38, 42, 56, 57, 59], "task": [15, 47, 69], "remain": [15, 28, 61, 62, 64], "power": [15, 18, 28, 36, 64], "literatur": 15, "grover": [15, 46, 62], "unstructur": 15, "faster": [15, 34, 38, 42, 65], "oracl": [15, 62], "mathcal": [15, 47, 52, 61, 69], "rightarrow": 15, "uniform": [15, 21, 62], "u_f": 15, "mapsto": [15, 63], "diffus": [15, 62], "u_d": 15, "dive": 15, "2k": [15, 54], "undo": 15, "revert": [15, 54], "simplifi": [15, 21, 57, 58, 59, 61], "uncomput": [15, 46, 62], "clearer": 15, "palindrom": 15, "mirror": 15, "rememb": 15, "sign": [15, 52, 54, 61, 65], "b_1": 15, "b_": [15, 63], "b_2": 15, "half": [15, 35], "origin": [15, 28, 60], "again": [15, 57, 62], "is_palindrom": 15, "first_half": 15, "second_half": 15, "w1": [15, 62], "w2": [15, 62], "And": [15, 19, 53], "henc": [15, 19, 47, 61, 62], "approx": [15, 61], "diff": [15, 54], "superposit": [15, 54, 62, 65], "nstep": [15, 21], "0000": 15, "24999999999999956": [15, 62], "0110": 15, "1001": 15, "1111": 15, "decent": 15, "particularli": [15, 19], "curiou": 15, "custom": [15, 18, 46, 54, 60, 63, 66, 68], "believ": 15, "suit": [15, 56], "noisi": [15, 28, 35, 52, 60, 61], "scale": 15, "nisq": [15, 18], "long": [15, 54, 62, 71], "nevertheless": 15, "heisenberg": 15, "theta_i": [15, 49], "go": [15, 16, 17, 20, 21, 22, 29, 51, 52, 61, 72], "nqbit": [15, 21, 54, 57, 58, 61], "pauli_term": [15, 19, 54, 60, 69], "xx": [15, 47, 61, 68], "yy": [15, 61], "zz": [15, 19, 47, 54, 58, 61, 65], "reg": [15, 21, 57, 60, 61], "theta_": [15, 60, 61], "optimizer_scipi": 15, "x0": [15, 49, 51, 57, 60, 61, 71], "vqe": [15, 18, 38, 42, 46, 50, 56, 59, 60, 61, 68, 70], "9999999999990212": 15, "scipy_arg": [16, 17, 20, 22, 72], "dict": [16, 17, 20, 22, 33, 34, 35, 37, 54, 61, 71, 72], "graph_colouring_appl": 16, "sqa_best_paramet": [16, 17, 20, 22, 72], "sqa_best_parameters_dict": [16, 17, 20, 22, 72], "temp_max": [16, 17, 20, 22, 65, 72], "temp_min": [16, 17, 20, 22, 65, 72], "5000": [16, 17, 20, 22, 72], "graph_colouring_gener": 16, "schedule_batch": [16, 17, 20, 22, 72], "special": [16, 17, 18, 20, 22, 28, 65, 72], "combinatorialoptimizergener": [16, 17, 20, 22, 72], "number_of_colour": [16, 65], "sent": [16, 17, 20, 21, 22, 28, 31, 32, 52, 53, 54, 72], "graph_partitioning_appl": 17, "17": [17, 22, 55, 72], "18": [17, 22, 55, 69], "28": [17, 22, 55], "29": [17, 22, 55], "22": [17, 22, 54, 55, 57, 65], "23": [17, 19, 20, 21, 22, 38, 44, 54, 55, 57, 60], "25": [17, 22, 38, 41, 55, 71], "26": [17, 22, 55], "graph_partitioning_gener": 17, "doubl": [17, 20, 34, 36, 54, 61, 65, 72], "h_a": [17, 20, 65, 72], "h_b": [17, 20, 65, 72], "multipli": [17, 19, 20, 60, 63, 65, 72], "equat": [17, 20, 54, 65, 72], "factor": [17, 20, 22, 61, 63, 65, 72], "softwar": [18, 28, 70], "semant": [18, 21, 54], "univers": [18, 46, 66], "versatil": 18, "api": [18, 21, 35, 37, 38, 42, 54], "mitig": [18, 28, 38, 42, 46, 56, 59, 60, 70], "seamless": 18, "major": [18, 24, 26], "interoper": 18, "fermion": [18, 43, 44, 54, 59, 60, 70], "toolchain": 18, "devic": [18, 38, 40, 41, 42, 43, 44, 54], "contribut": [18, 28], "seri": [19, 61, 69], "articul": 19, "around": [19, 35, 37, 61], "page": [19, 26, 27, 28, 34, 45, 61, 68, 69], "read": [19, 26, 28, 54, 61, 68], "view": [19, 34], "fit": [19, 21, 28, 52, 60], "shot": [19, 21, 35, 37, 54, 60, 61, 68], "send": [19, 21, 32, 38, 42, 54], "request": [19, 25, 54], "nbshot": [19, 21, 34, 35, 54, 61, 65, 69], "1024": [19, 54], "issu": [19, 28, 60], "my_observ": 19, "xz": [19, 58, 61, 69], "zxzx": 19, "constant_coeff": [19, 54, 57, 61], "obs1": 19, "obs2": 19, "__xor__": 19, "zzx": 19, "commut": [19, 47, 48, 58, 60], "__or__": 19, "2j": 19, "yz": [19, 61], "2048": 19, "encapsul": 19, "raw_data": [19, 21, 54], "cf": [19, 35], "value_data": [19, 21, 47, 54], "meta_data": [19, 21, 33, 34, 35, 37, 38, 40, 41, 42, 47, 54, 57, 61, 68, 71], "transmit": [19, 21, 54], "intermediate_measur": [19, 21, 54], "summar": 19, "err": [19, 21, 47, 54, 61, 69], "environ": [19, 26, 30, 33, 37, 54], "serializ": [19, 54], "activ": [19, 31, 38, 39, 42, 56, 57, 59, 61], "rais": [19, 35, 38, 40, 41, 42, 54, 62, 65], "thrift": [19, 54, 62], "useful": 19, "remot": [19, 28, 38, 39], "server": [19, 35, 54], "cleanli": [19, 62], "catch": 19, "client": [19, 54], "qpuexcept": [19, 38, 40, 41, 42, 69], "suppos": [19, 37], "modulenam": [19, 69], "messag": [19, 62, 69], "pluginexcept": 19, "clear": [19, 54], "understand": 19, "went": 19, "wrong": 19, "pack": 19, "errortyp": 19, "invalid_arg": 19, "nonresult": 19, "illegal_g": 19, "unknown": [19, 61], "not_simulat": 19, "simulat": [19, 38, 42], "abort_cod": 19, "addition": [19, 54, 55, 62, 68], "character": 19, "include_matric": [19, 62], "excp": 19, "103": 19, "encount": 19, "calloc": [19, 53, 54, 62], "cbreak": [19, 53, 62], "kclique_appl": 20, "cliqu": [20, 46, 65], "kclique_gener": 20, "deal": [21, 61, 62], "necessari": [21, 28, 29, 54, 62, 69], "back": [21, 29, 54, 60, 65, 69], "Their": [21, 53], "plugin1": 21, "plugin2": 21, "my_qpu": 21, "overal": [21, 60, 65], "wide": [21, 58], "But": [21, 35], "importantli": 21, "show": [21, 54, 57, 60, 61, 62], "rudimentari": 21, "mere": [21, 28, 69], "inherit": [21, 35, 38, 42, 54, 58, 59, 62, 65, 71], "qpuhandl": [21, 34, 35, 36, 37, 54, 61, 66], "submit_job": [21, 33, 35, 36, 54, 69], "wrapper": [21, 33, 34, 37, 38, 42, 54, 55, 61, 62, 69], "aggregate_data": [21, 54], "myqpu": 21, "gate_nam": 21, "els": [21, 35, 58, 65], "anyth": [21, 28, 30], "randint": [21, 65], "add_sampl": [21, 54], "001": [21, 49, 61], "011": 21, "010": [21, 67], "aggreg": [21, 47, 54, 62], "histogram": 21, "500": 21, "100": [21, 60, 61, 69, 71], "110": 21, "144": 21, "136": 21, "128": [21, 63], "101": [21, 71], "112": 21, "frequenc": [21, 54, 69], "mathrm": [21, 49, 52, 60, 61, 63, 69], "abstractplugin": [21, 54], "myplugin": 21, "third": [21, 28, 63], "discuss": [21, 28], "hardware_spec": [21, 55], "someth": [21, 38, 43], "_amplitud": 21, "3535533905932737": 21, "12499999999999994": 21, "_state": 21, "qregist": [21, 54, 62], "0x150526cf3cd0": 21, "msb": [21, 54], "_subtype_metadata": 21, "0x150526cfd100": 21, "0x150526cfd220": 21, "0x150526cfd340": 21, "incom": [21, 53], "batch_result": [21, 47], "need_flip": 21, "lsb_first": [21, 54], "has_statevector": [21, 54], "statevector": [21, 38, 42, 54, 67], "_valu": 21, "0x150431c8de20": 21, "0x150431c930d0": 21, "0x150431c931f0": 21, "0x150431c93310": 21, "error_data": 21, "in_memori": 21, "_parameter_map": 21, "values_data": 21, "0x150431c93af0": 21, "0x150431c93d60": 21, "0x150431c93e80": 21, "0x150431c93fa0": 21, "0x150431c967c0": 21, "0x150431c96a30": 21, "0x150431c96b50": 21, "0x150431c96c70": 21, "saw": 21, "0x147dded0bf70": 21, "0x147dded10220": 21, "0x147dded10340": 21, "0x147dded10460": 21, "0x147dded10c40": 21, "0x147dded10eb0": 21, "0x147dded10fd0": 21, "0x147dded0f130": 21, "0x147dded0f910": 21, "0x147dded0fb80": 21, "0x147dded0fca0": 21, "0x147dded0fdc0": 21, "outgo": [21, 53], "deloc": 21, "distant": 21, "otherwis": [21, 26, 28, 33, 37, 54, 67], "emb": [21, 61], "adapt": [21, 28, 38, 42, 54, 56, 59, 60, 68, 70], "middl": 21, "simpler": [21, 65], "eigensolv": [21, 38, 42, 46, 56], "give": [21, 28, 53, 54], "until": [21, 37, 61], "satfisfi": 21, "cous": 21, "outsid": [21, 61], "prevent": [21, 28], "workflow": [21, 69], "architectur": [21, 24, 26, 55], "enter": [21, 28, 51, 61, 71], "With": 21, "treatment": 21, "stage": [21, 61, 62], "naiv": [21, 47], "width": [21, 35, 65], "explor": [21, 54, 65], "ecount": 21, "iterativeexplor": 21, "super": [21, 70], "initial_job": 21, "get_vari": [21, 38, 40, 41, 42, 49, 54, 65, 68], "linspac": 21, "all_valu": 21, "val": [21, 62], "current_job": 21, "min_val": 21, "best_index": 21, "best_param": 21, "9979453927503363": 21, "077478517802246": 21, "recept": [21, 54], "associ": [21, 28, 50, 54, 57, 60, 61, 65], "meta": [21, 38, 40, 41, 42, 54, 68], "acc": [21, 63], "__call__": [21, 54, 68], "upper": [21, 61], "don": [21, 28, 35], "bother": 21, "administr": [21, 54, 62], "burden": [21, 54], "slightli": 21, "creation": [21, 46], "serv": [21, 35, 54], "observablesplitt": [21, 69, 70], "port": [21, 33, 35, 54], "ip": [21, 33, 54], "1234": 21, "remoteplugin": [21, 54], "listen": [21, 33, 35, 54], "127": [21, 33], "extra": 21, "synchron": [21, 37], "disconnect": 21, "lost": [21, 62], "launch": 21, "remoteqpu": [21, 54], "neg": [22, 62, 65], "max_cut_gener": 22, "binder": [23, 30, 32, 33, 37, 38, 42], "googl": [23, 55], "throught": [23, 33], "cirq_to_qlm": 23, "qlm_to_cirq": 23, "interop": [23, 26, 30, 31, 32, 33, 37, 38, 42, 43, 44], "qlm_circ": 23, "your_google_circ": 23, "google_circ": 23, "your_qlm_circ": 23, "linequbit": 23, "gridqubit": 23, "grid": [23, 55], "coordin": 23, "sep_measur": [23, 32, 33, 37], "won": [23, 32, 33, 37, 62], "measureless": [23, 32, 33, 37], "resulting_circuit": [23, 32, 33, 37], "list_qubit": [23, 32, 33, 37], "normal": [23, 28, 32, 33, 37, 38, 42, 59, 61, 64], "regular": [23, 32, 33, 37, 49, 55], "qlm_circuit": [23, 33, 37], "convers": [23, 28, 37], "linux": [24, 26, 38, 39], "window": [24, 26, 38, 39, 44, 61], "maco": [24, 26, 38, 39], "64": [24, 26, 55], "x86_64": [24, 26], "brew": [24, 26, 29, 38, 39], "caus": [24, 26, 28, 38, 44, 61], "segment": [24, 26, 29, 38, 43, 67], "fault": [24, 26, 28, 29, 38, 43], "situat": [24, 26], "uninstal": [24, 26], "minor": [24, 26], "share": [25, 28, 35, 54], "project": [25, 34, 35, 61, 69], "contributor": [25, 28], "contrib": [25, 38, 42, 43, 44], "fork": [25, 35, 54], "commit": 25, "push": 25, "pull": 25, "licenc": 26, "agreement": [26, 28], "eula": [26, 28], "carefulli": [26, 28], "permit": [26, 28], "pursuant": 26, "legal": [26, 28], "entiti": [26, 28], "bull": [26, 28], "By": [26, 27, 28, 37, 53, 54, 60, 62, 63, 71], "download": [26, 28, 29, 30, 37], "render": 26, "agre": [26, 28], "bound": [26, 28, 54, 61, 62], "licens": 26, "promptli": 26, "delet": [26, 59], "prompt": 26, "tutori": [26, 30, 60], "imagemagick": 26, "wand": 26, "guid": 26, "ghostscript": 26, "pdf": [26, 38, 44, 54], "overview": [26, 30, 46, 53, 62], "ipynb": [26, 30], "tabl": [26, 30, 31], "enabl": [26, 61], "qiskit": [26, 27, 30, 38, 42, 46], "projectq": [26, 27, 30, 46], "pyquil": [26, 27, 30, 46], "cirq": [26, 27, 30, 31, 46], "someon": 26, "who": [26, 28], "cherri": 26, "qiskit_bind": 26, "projectq_bind": 26, "cirq_bind": 26, "pyquil_bind": 26, "conflict": [26, 28], "ye": 27, "openqasm": [27, 46], "na": 27, "backend": [27, 34, 54], "FOR": 28, "hereinaft": 28, "recit": 28, "compani": 28, "person": 28, "oblig": 28, "identifi": [28, 61, 65], "footnot": 28, "media": 28, "materi": 28, "onlin": 28, "electron": [28, 57, 61], "primari": [28, 62], "student": 28, "research": 28, "develop": [28, 34, 70], "laptop": 28, "benefit": [28, 38, 39, 66], "accordingli": [28, 61], "runtim": [28, 37, 38, 42], "apach": 28, "v2": 28, "categori": [28, 38, 43], "root": [28, 63], "packag": [28, 57, 61, 62, 63, 70], "folder": 28, "compli": 28, "thereof": 28, "shall": 28, "THE": 28, "wish": [28, 63, 65], "OF": 28, "grant": 28, "author": [28, 54], "acknowledg": 28, "refrain": 28, "violat": 28, "whatsoev": 28, "thereund": 28, "confidenti": 28, "subject": [28, 65], "provis": 28, "nondisclosur": 28, "parti": 28, "reproduc": [28, 45], "disclos": 28, "exercis": 28, "extent": 28, "disclosur": 28, "employe": 28, "consult": [28, 58], "advisor": 28, "prior": [28, 62, 70], "approv": 28, "forego": 28, "satisfi": [28, 53, 65], "degre": [28, 65], "less": [28, 54, 62], "reason": [28, 54, 58], "whom": 28, "protect": 28, "notwithstand": 28, "breach": 28, "compel": 28, "judici": 28, "government": 28, "investig": [28, 50], "proceed": [28, 29], "assist": 28, "opportun": 28, "except": [28, 35, 38, 40, 41, 42, 44, 54, 61, 63, 65, 68, 69], "contrari": 28, "herein": 28, "liabl": 28, "prove": 28, "public": [28, 49, 60, 62, 63], "domain": 28, "ii": [28, 61], "demonstr": 28, "iii": 28, "iv": 28, "vi": 28, "remedi": 28, "immedi": 28, "irrepar": 28, "harm": 28, "monei": 28, "damag": 28, "alon": 28, "inadequ": 28, "compens": 28, "event": 28, "entitl": 28, "seek": 28, "equit": 28, "relief": 28, "restrain": 28, "injunct": 28, "perman": 28, "bond": 28, "secur": 28, "miscellan": [28, 35], "assign": [28, 35, 65, 67], "sublicens": 28, "deleg": [28, 54], "transfer": [28, 65], "consent": 28, "merg": [28, 54], "consolid": 28, "purchas": 28, "substanti": 28, "asset": 28, "stock": 28, "assigne": 28, "enforc": [28, 54], "against": [28, 62], "successor": 28, "unauthor": 28, "null": [28, 54], "void": 28, "constitut": 28, "regul": 28, "technologi": 28, "complianc": 28, "forc": [28, 65], "majeur": 28, "respons": [28, 37], "delai": [28, 54], "failur": 28, "payment": 28, "circumst": 28, "forese": 28, "god": 28, "earthquak": 28, "hurrican": 28, "volcan": 28, "erupt": 28, "strike": 28, "lockout": 28, "riot": 28, "civil": 28, "unrest": 28, "protest": 28, "war": 28, "epidem": 28, "communic": 28, "diseas": 28, "outbreak": 28, "health": 28, "emerg": 28, "superimpos": 28, "fire": 28, "commun": [28, 45], "disast": 28, "period": 28, "opinion": 28, "affect": [28, 61], "six": [28, 54], "month": 28, "date": 28, "virtu": 28, "aforesaid": 28, "endeavour": 28, "effecti": 28, "cooper": 28, "faith": 28, "adopt": [28, 65], "impact": 28, "off": [28, 29, 57], "nearshor": 28, "proportion": 28, "adequ": 28, "govern": 28, "disput": 28, "resolut": 28, "franc": 28, "rule": [28, 38, 39, 49, 51, 54, 60, 61, 71], "exclus": 28, "jurisdict": 28, "venu": 28, "compet": 28, "court": 28, "pari": 28, "manner": 28, "within": [28, 35, 37, 62], "sixti": 28, "dai": 28, "copyright": 28, "2021": [28, 38, 39, 40, 51, 60, 71], "reserv": 28, "worldwid": 28, "forth": [28, 60, 65], "locat": [28, 59, 64, 65], "premis": 28, "intend": [28, 38, 44], "network": 28, "deriv": [28, 37, 38, 39, 54, 68], "market": 28, "publish": [28, 35, 54], "rent": 28, "leas": 28, "loan": 28, "commerci": 28, "alter": 28, "engin": [28, 32], "disassembl": 28, "human": [28, 53], "perceiv": 28, "lend": 28, "sell": 28, "resel": 28, "intellectu": 28, "treati": 28, "sold": 28, "furthermor": [28, 65], "trademark": 28, "mark": 28, "pertain": 28, "NO": 28, "warranti": 28, "AS": 28, "ITS": 28, "supplier": 28, "licensor": 28, "TO": 28, "BY": 28, "disclaim": 28, "impli": [28, 35], "statutori": 28, "BUT": 28, "merchant": 28, "satisfactori": 28, "titl": 28, "infring": 28, "risk": 28, "aris": [28, 60], "WITH": 28, "liabil": 28, "IN": 28, "BE": 28, "substitut": 28, "incident": 28, "indirect": 28, "consequenti": [28, 29], "loss": [28, 48, 60], "busi": 28, "profit": 28, "interrupt": [28, 53], "inabl": 28, "IF": 28, "SUCH": 28, "amount": [28, 54], "paid": 28, "THAT": 28, "bear": 28, "technic": 28, "inaccuraci": 28, "typograph": 28, "januari": [28, 38, 43, 44], "2004": 28, "reproduct": 28, "owner": 28, "union": [28, 48, 54, 61], "contract": [28, 35, 54], "ownership": [28, 34], "fifti": 28, "percent": 28, "outstand": 28, "benefici": 28, "permiss": [28, 38, 44], "prefer": [28, 57, 58], "modif": [28, 69], "authorship": 28, "appendix": 28, "editori": 28, "revis": 28, "annot": [28, 62], "elabor": 28, "whole": [28, 38, 39, 61], "intention": 28, "inclus": [28, 54], "behalf": 28, "verbal": 28, "mail": 28, "track": 28, "improv": [28, 56, 59, 60, 61, 67], "exclud": 28, "conspicu": 28, "Not": [28, 54], "subsequ": [28, 58, 59], "incorpor": 28, "herebi": 28, "perpetu": 28, "charg": [28, 57, 61], "royalti": 28, "irrevoc": 28, "publicli": 28, "patent": 28, "claim": 28, "institut": 28, "litig": 28, "cross": 28, "counterclaim": 28, "lawsuit": 28, "alleg": 28, "contributori": 28, "redistribut": 28, "medium": 28, "meet": [28, 53], "recipi": 28, "promin": 28, "retain": 28, "wherev": 28, "alongsid": 28, "addendum": 28, "constru": 28, "statement": [28, 35, 62], "unless": [28, 63], "noth": [28, 62], "supersed": 28, "trade": 28, "customari": 28, "kind": [28, 54, 71], "appropri": [28, 47, 54, 64, 65], "tort": 28, "deliber": 28, "grossli": 28, "charact": [28, 54], "goodwil": 28, "stoppag": 28, "malfunct": 28, "fee": 28, "indemn": 28, "indemnifi": 28, "defend": 28, "harmless": 28, "boilerpl": 28, "enclos": [28, 61], "bracket": [28, 62], "comment": [28, 29, 62], "recommend": [28, 34, 61, 64], "identif": 28, "archiv": 28, "twice": [29, 54], "homebrew": 29, "sudo": 29, "taken": [29, 61], "sh": 29, "bin": 29, "bash": [29, 31], "curl": 29, "fssl": 29, "githubusercont": 29, "com": 29, "ask": [29, 35, 45], "screen": 29, "echo": 29, "manpath": 29, "johnsmith": 29, "bash_profil": 29, "eval": [29, 61], "shellenv": 29, "setup": [29, 65], "latest": 29, "python3": 29, "anaconda": 29, "unfortun": 29, "sure": [29, 65], "browser": 30, "web": 30, "mybind": 30, "clone": 30, "github": [30, 45], "repositori": 30, "qasm": [31, 53], "oqasm2circ": 31, "oqasmpars": 31, "bell_data": 31, "creg": 31, "cx": 31, "flawlessli": 31, "haven": 31, "write_t": 31, "debug": [31, 54, 62, 70], "tabmodul": 31, "oqasm_tab": 31, "chunk": 31, "tab": [31, 54], "aqasmprint": 32, "aqasmengin": 32, "cengin": 32, "mainengin": 32, "aq": 32, "eng": 32, "engine_list": 32, "allocate_qureg": 32, "recov": 32, "projectq_to_qlm": 32, "modulenotfounderror": [32, 38, 43], "stream": 32, "vers": 33, "pyquil_to_qlm": 33, "qlm_to_pyquil": 33, "your_pyquil_circuit": 33, "pyquil_circuit": 33, "your_qlm_circuit": [33, 37], "qvm": 33, "15011": 33, "get_qc": 33, "qcs_settings_applications_pyquil_qvm_url": 33, "9q": 33, "qlm_job": 33, "pyquil_prog": 33, "program_pragma": 33, "rigetti": [33, 55], "chip": [33, 37, 38, 40, 41, 42, 55], "tell": 33, "set_qpu": [33, 37], "embed": [33, 34, 35, 37, 54, 58, 61], "propos": [34, 61], "pybind11": 34, "use_gpu": 34, "use_nbthreads_heurist": 34, "light_circuit": 34, "tqdm": 34, "readonly_statevector": 34, "gpu": 34, "thread": [34, 35, 54], "omp_num_thread": 34, "progress": 34, "lsb": [34, 54], "sens": 34, "perfect": [34, 65], "hidden": [34, 54], "thought": 34, "resiz": 34, "intuit": 34, "i_0i_1i_2i_3": 34, "signific": [34, 54, 62, 63], "i_3i_2i_1i_0": 34, "influenc": [34, 60, 65], "clinalgstatevectorcpudoubl": 34, "apply_1qbit_ctrl_g": 34, "ctrl_qubit": 34, "apply_1qbit_g": 34, "apply_2qbit_ctrl_g": 34, "qubit1": 34, "qubit2": 34, "apply_2qbit_g": 34, "apply_ccnot": 34, "qubit3": 34, "apply_cnot": 34, "apply_csign": 34, "apply_h": 34, "qbits_c": 34, "apply_iswap": 34, "apply_ph": 34, "apply_rx": 34, "apply_ri": 34, "apply_rz": 34, "apply_": 34, "apply_sqrtswap": 34, "apply_swap": 34, "apply_t": 34, "apply_x": 34, "apply_i": 34, "apply_z": 34, "apply_nqbit_ctrl_g": 34, "apply_nqbit_g": 34, "edit": 34, "rightmost": 34, "array_readonli": 34, "readonli": 34, "expectation_valu": 34, "wobserv": 34, "get_distribut": 34, "amp_threshold": [34, 54, 69], "ndarrai": [34, 35, 51, 54, 61, 64, 65, 71], "float64": 34, "margin": 34, "valuabl": 34, "get_mapped_distribut": 34, "mapintdoubl": 34, "map": [34, 38, 40, 41, 42, 54, 61], "get_mapped_statevector": 34, "dictionari": [34, 47, 54, 61, 65, 68], "threshold": [34, 54, 59, 61, 62, 69], "get_permuted_statevector": 34, "project_then_reset": 34, "previous": [34, 57, 60], "psi_0_ptr": 34, "pure": [34, 53, 54, 62], "nbqubit": 34, "undefin": 34, "mapintint": 34, "occur": [34, 35, 38, 44, 54, 60], "sample_subset": 34, "set_num_thread": 34, "nbthread": 34, "simulate_circuit": 34, "wcircuit": 34, "clinalgwcircuit": 34, "lightweight": 34, "state_prob": 34, "vert": [35, 61], "psi": [35, 49, 54, 61, 65, 68, 69], "i_": [35, 58, 61, 64], "a_": [35, 58, 61, 63], "tensordot": 35, "remark": 35, "exponenti": [35, 52, 59, 60, 63], "ram": 35, "account": 35, "realist": 35, "nois": [35, 38, 42, 46, 56, 59, 60, 68, 69, 70], "linalg": [35, 38, 39, 54, 57, 60, 61, 71], "host_ip": [35, 54], "localhost": [35, 54], "server_typ": [35, 54], "multi": [35, 54, 57], "pool": [35, 48, 54, 59, 60, 62], "imbric": 35, "processingtyp": [35, 54], "intermediatemeasur": [35, 54], "descriptor": 35, "branch": 35, "mainli": [35, 54], "success": [35, 37, 71], "clasic": 35, "state_vec": 35, "nb_sampl": 35, "thank": [35, 61, 65], "absenc": [35, 69], "intprob_list": 35, "renorm": 35, "afterward": [35, 62], "prob": [35, 57], "intprob": 35, "undergo": 35, "intermediari": [35, 51, 71], "info": [35, 50, 57, 61], "ax": 35, "recomput": 35, "norm": [35, 54], "nd": 35, "raise_break": 35, "op_po": 35, "mat2nparrai": 35, "equip": 36, "varieti": 36, "albeit": 36, "resembl": 36, "seed": [36, 71], "arithexpress": [36, 38, 39, 54, 65], "temp": 36, "j_coupl": 36, "h_mag": 36, "temp_list": 36, "2d": [36, 61, 65], "1d": [36, 65], "extract_j_and_h_from_ob": 36, "e_i": [36, 65], "s_i": 36, "s_j": 36, "h_i": [36, 54], "offset_i": [36, 65], "integer_to_spin": 36, "n_spin": 36, "decim": [36, 57], "spins_to_integ": 36, "solution_configur": 36, "spins_arrai": 36, "qiskit_to_qlm": 37, "qlm_to_qiskit": 37, "your_qiskit_circuit": 37, "qiskit_circuit": 37, "qiskitruntimeqpu": [37, 38, 42], "sampler": 37, "estim": [37, 38, 42, 46, 47, 54, 56, 60, 62, 69], "primit": 37, "ibmq_qasm_simul": 37, "qiskitruntimeservic": 37, "credenti": 37, "save_account": 37, "qiskit_ibm_runtim": 37, "ibm": [37, 38, 42, 55], "token": [37, 54], "my_ibm_token": 37, "channel": [37, 60], "ibm_quantum": 37, "backendtoqpu": 37, "ibmq_backend": 37, "ibmq_armonk": 37, "ibmq": 37, "asyncbackendtoqpu": 37, "asynchron": 37, "qiskitjob": 37, "async_qpu": 37, "async_result": [37, 38, 39], "sleep": 37, "qputobackend": 37, "qiskit_result": 37, "rxx": 37, "rzz": 37, "quantumcircuit": 37, "old": 37, "futur": [37, 54], "skip_transpil": 37, "experi": [37, 38, 42, 61], "backend_nam": 37, "transpil": 37, "optimization_level": 37, "despit": 37, "aer_simul": 37, "argment": 37, "login": 37, "qiskit_token": 37, "light": 37, "heavi": 37, "promis": 37, "retrieve_job": 37, "file_nam": 37, "qlm_batch": 37, "jobv1": 37, "async_job": 37, "max_shot": 37, "cancel": 37, "job_id": 37, "statu": [37, 38, 43, 44], "connector": 37, "plugabl": 37, "backendconfigur": 37, "2023": [38, 43, 44], "mainten": [38, 43, 44, 59], "clinalg": [38, 42, 43, 44, 54, 69, 70], "unexpect": [38, 44], "behaviour": [38, 44, 60], "dist": [38, 42, 43, 44], "03": [38, 43], "jaxlib": [38, 43], "layout_bas": [38, 43], "pillow": [38, 43], "07": [38, 43], "layout": [38, 43], "getsiz": [38, 43], "getbbox": [38, 43], "getlength": [38, 43], "suppress": [38, 43], "nowarn": [38, 43], "ipython": [38, 43, 54], "directori": [38, 43], "mayb": [38, 43], "ipython_dir": [38, 43], "home": [38, 43], "profile_default": [38, 43], "startup": [38, 43], "simplefilt": [38, 43], "action": [38, 43], "ignor": [38, 43, 47, 54, 62, 65], "restart": [38, 43], "octob": [38, 42], "31": [38, 42, 55], "2022": [38, 41, 42], "algebra": [38, 42, 58, 59, 70], "jordan": [38, 42, 56, 58], "wigner": [38, 42, 56, 58], "bravyi": [38, 42, 56, 58], "kitaev": [38, 42, 56, 58], "pariti": [38, 42, 56, 58], "ucc": [38, 42, 46, 56, 57, 58, 59], "molecul": [38, 42, 46, 56, 57, 60, 61], "studi": [38, 42, 56, 57, 59, 60], "select": [38, 42, 48, 54, 56, 57, 59, 60, 61], "gradient": [38, 39, 42, 46, 48, 54, 56, 59, 60, 68, 70], "sequenti": [38, 42, 46, 56, 59, 60, 70, 71], "hybrid": [38, 42, 56, 59, 60, 61, 70, 71], "extrapol": [38, 42, 56, 60, 70], "multiqubit": [38, 42, 46, 56, 59, 60, 70], "submatrices_onli": [38, 40, 41, 42, 54, 62], "processing_typ": [38, 40, 41, 42, 54], "quameleonplugin": [38, 40, 41, 42, 54, 70], "zuchongzhi": [38, 40, 41, 42, 55], "chines": [38, 40, 41, 42], "qiksit": [38, 42], "throw": [38, 40, 41, 42], "cleaner": [38, 40, 41, 42], "sort": [38, 40, 41, 42, 54, 61], "junction": [38, 40, 41, 42, 46], "differenti": [38, 39, 40, 41, 42, 46, 54], "u2": [38, 42], "u3": [38, 42], "april": [38, 41], "decemb": [38, 40], "june": [38, 39], "qlmaa": [38, 39], "nnizer": [38, 39], "remote_stack": [38, 39], "join": [38, 39, 45], "occurr": [38, 39, 52], "gather": [38, 39, 62], "partial": [38, 39, 49, 54], "multivari": [38, 39], "kerenidi": [38, 39, 64], "prakashqram": [38, 39], "kptree": [38, 39, 62, 64], "substract": [38, 39, 62], "divis": [38, 39], "sigsegv": [38, 39], "bug": 45, "slack": 45, "group": [45, 47, 54, 61], "ticket": 45, "report": 45, "beginn": 46, "hubbard": [46, 57, 58], "chemistri": [46, 56, 58, 59, 61], "h2": 46, "lih": [46, 57], "expans": [46, 56], "multiplelaunchesplugin": 46, "fourier": [46, 63], "avala": 46, "quick": 46, "amplif": [46, 62], "splitter": 46, "epr": 46, "max": [46, 54, 61, 65, 70], "cut": [46, 65, 70], "cover": [46, 65, 70], "analyz": [46, 70], "x_0": [47, 69], "x_1": 47, "z_1z_2": 47, "boil": [47, 60], "z_1": [47, 69], "z_2": 47, "q_i": 47, "split": [47, 59], "splitting_method": 47, "x_basis_chang": 47, "y_basis_chang": 47, "approach": [47, 53, 61, 63], "color": [47, 65], "greedi": [47, 65], "clifford": 47, "entangl": [47, 61, 65], "todai": 47, "coincid": 47, "iff": [47, 54], "get_fresh_kei": 47, "adaptvqeplugin": [48, 59, 60, 61], "operator_pool": 48, "n_iter": [48, 60], "early_stopp": 48, "06": 48, "grimslei": 48, "et": [48, 51, 59, 60, 61, 65, 71], "al": [48, 51, 59, 60, 61, 65, 71], "spinhamiltonian": [48, 58, 59, 60], "lambda_step": 49, "natural_gradi": [49, 60], "stop_crit": 49, "grad_norm": 49, "user_custom_g": 49, "vec": [49, 54, 61, 68], "eta": [49, 60], "nabla": [49, 60], "_i": [49, 61, 64], "metric": [49, 60], "g_": 49, "bigg": 49, "theta_j": [49, 54], "1000": [49, 69], "criterion": 49, "energy_dist": 49, "toler": [49, 62], "randomli": [49, 71], "n_run": 50, "verbos": [50, 51, 61, 71], "duplic": 50, "upstream": 50, "familiar": 51, "yourself": 51, "ncycl": [51, 61, 71], "coeff": [51, 54, 71], "rotosolv": [51, 71], "nakanishi": [51, 60, 71], "1903": [51, 71], "12166": [51, 71], "2020": [51, 60, 71], "ostaszewski": [51, 60, 71], "1905": [51, 71], "09692": [51, 71], "cycl": [51, 61, 71], "leverag": [51, 60, 71], "p": [51, 60, 61, 63, 71], "rescal": [51, 71], "n_in": 52, "extrap_g": 52, "extrap_method": 52, "decomposit": 52, "gg": [52, 60, 65], "tr": 52, "rho_": 52, "hat": [52, 54, 60, 61], "strength": 52, "propto": 52, "ins": 52, "an_": [52, 60], "pm": [52, 54, 60], "infer": [52, 60, 62], "latter": [52, 60, 61], "Be": 52, "correctli": 52, "facilit": 53, "central": 53, "my_program": 53, "qbits_reg": [53, 62], "cbits_reg": 53, "explanatori": 53, "outermost": 53, "famili": [53, 62], "c_matrix": 53, "phi": [53, 57, 61], "customg": 53, "mat": 53, "my_minus_z": 53, "inexist": 53, "my_routin": 53, "outcom": [53, 54], "cc_appli": [53, 62], "condition": 53, "submodul": [53, 59, 62], "unifi": 53, "wrapper_post_process": 54, "postprocessresult": 54, "mininm": 54, "abctract": 54, "met": 54, "hostnam": 54, "hand": [54, 62], "commonqpu": [54, 69], "built": [54, 58, 61, 62, 64, 65, 68], "address": [54, 64], "behav": [54, 62], "handler": 54, "adjunct": 54, "goe": 54, "forward": 54, "remotebatchgener": 54, "unicod": 54, "remoteappl": 54, "psi_0": [54, 65], "vname": 54, "w": [54, 61], "psi_i": 54, "induc": 54, "fname": [54, 62], "from_byt": 54, "byte": 54, "from_thrift": 54, "tobject": 54, "shift_qbit": 54, "icreas": 54, "to_thrift": [54, 62], "enum": 54, "boson": 54, "do_clean_up": [54, 61], "hermitian": 54, "hilbert": 54, "span": 54, "pauli_op": 54, "do_validity_check": 54, "coeffcient": 54, "xxy": 54, "front": [54, 66], "check_valid": 54, "On": [54, 69], "drive": 54, "tname": 54, "gamma_t": [54, 65], "lambda_i": 54, "driven": 54, "halt": 54, "largest": 54, "possibli": 54, "infinit": [54, 61], "apparit": 54, "prune": 54, "unlik": 54, "t_variabl": 54, "tmax_vari": 54, "145": 54, "schedule1": 54, "schedule2": 54, "heavisid": 54, "ponder": 54, "signal": 54, "filter": [54, 69], "45": [54, 55], "past": 54, "bar": 54, "thriftresult": 54, "deviat": [54, 61], "dictionnari": 54, "wrap_sampl": 54, "qreg_list": 54, "varepsilon_": 54, "equiv": [54, 61, 63], "f_": [54, 61], "p_k": 54, "f_k": 54, "set_qreg": 54, "pretti": 54, "int_msb_valu": 54, "__str__": 54, "lsb_int": 54, "reprensent": 54, "gate_po": 54, "cat_circuit": 54, "tensori": 54, "kron_circuit": 54, "my_circuit": 54, "new_circuit": 54, "34": [54, 55], "_gate_set": 54, "has_matric": 54, "var_dic": 54, "ancilla_map": 54, "_serialized_gate_set": 54, "0x151a8db9acd0": 54, "v_name": 54, "v_valu": 54, "gate_set": [54, 62, 65, 66, 68], "regener": 54, "portion": 54, "side": [54, 66], "avoid": 54, "feel": 54, "gateset": [54, 62, 66], "freshli": 54, "v_dictionari": 54, "fill": 54, "dagger_from_param": 54, "crawl": [54, 62], "valueerror": 54, "linker": 54, "_10": 54, "_8": 54, "asbtract": 54, "invert": [54, 63], "334": 54, "smarter": 54, "smart_dagg": 54, "printer": 54, "plot_in_notebook": 54, "consol": [54, 70], "fill_matric": 54, "include_default_gate_set": 54, "insert_g": 54, "remove_lock": [54, 62], "lock": [54, 62], "placehold": 54, "094947017729282e": 54, "constain": 54, "max_depth": 54, "circuit_nam": 54, "renaming_dict": 54, "ascii": 54, "art": 54, "fmt": 54, "filenam": 54, "hardware_model": 54, "plot": 54, "cell": [54, 58], "shell": 54, "get_ipython": 54, "svg": 54, "timeplot": 54, "alias": 54, "topologi": [54, 55, 66, 67, 70], "as_graph": 54, "to_nx": [54, 55], "rigetti_aspen": [54, 55], "nx_graph": 54, "as_quameleon": 54, "quameleon": [54, 66], "is_direct": 54, "thrifttopologi": 54, "topologytyp": [54, 66], "lnn": [54, 55, 66], "add_edg": 54, "qb1": 54, "qb2": 54, "toplogi": 54, "from_nx": 54, "vmap": 54, "init_non": 54, "getter": 54, "set_nbqbit": 54, "all_to_al": 54, "consecut": [54, 71], "init": 54, "behind": 54, "gatesignatur": [54, 62], "arg_typ": 54, "func": [54, 62], "get_circuit": 54, "get_matrix": [54, 57, 59, 60, 61], "gen": 54, "fun": 54, "dictio": 54, "add_signatur": [54, 62], "signa": 54, "redefin": [54, 62], "gatesyntaxredefinit": 54, "new_gate_set": 54, "gatesyntax": 54, "var_typ": [54, 62], "numer": [54, 61], "forbidden": 54, "other_var": 54, "rpn": 54, "symbol": 54, "children": [54, 65], "arbitrari": [54, 64], "label": [54, 61, 65], "from_str": 54, "thrift_str": 54, "invers": [54, 60, 65], "pretty_print": 54, "infix": 54, "pretty_token": 54, "ast": 54, "omit": [54, 62], "wouldn": 54, "dx": 54, "all_symbol": 54, "cyfunct": 54, "0x152b42cd1860": 54, "0x152b42cd1a00": 54, "0x152b42cd1ba0": 54, "uminu": 54, "0x152b42cd1d40": 54, "0x152b42cd1ee0": 54, "0x152b42cc5110": 54, "ufunc": 54, "0x152b42cc55f0": 54, "ln": 54, "0x152b44981e50": 54, "imag": 54, "0x152b44984040": 54, "0x152b444ba700": 54, "ab": [54, 61], "absolut": 54, "atan2": 54, "my_min": 54, "awar": 54, "formula_str": 54, "circuit_build": [54, 62], "matrix_util": 54, "get_predef_gener": 54, "get_param_gener": 54, "default_gate_set": [54, 62], "saemlessli": 54, "qlm_object": 54, "initial_object": 54, "binding_kwarg": 54, "particul": 54, "variablenam": 54, "fetch": 54, "hood": 54, "var_nam": [54, 62], "triplet": 54, "optimizer_data": 54, "superconduct": 55, "agav": 55, "rigetti_agav": 55, "aspen": 55, "burlington": 55, "ibm_burlington": 55, "yorktown": 55, "ibm_yorktown": 55, "melbourn": 55, "ibm_melbourn": 55, "rueschlikon": 55, "ibm_rueschlikon": 55, "tokyo": 55, "ibm_tokyo": 55, "singapor": 55, "ibm_singapor": 55, "johannesburg": 55, "ibm_johannesburg": 55, "sycamor": 55, "google_sycamor": 55, "35": [55, 61], "44": 55, "49": 55, "36": [55, 65], "32": [55, 63], "41": 55, "37": 55, "46": 55, "33": [55, 62], "42": 55, "51": 55, "38": 55, "43": [55, 65], "52": 55, "39": 55, "48": 55, "53": [55, 69], "54": 55, "55": 55, "56": 55, "57": 55, "58": 55, "59": 55, "61": 55, "62": 55, "63": 55, "65": 55, "linedevic": 55, "nearest": [55, 61], "neighbor": 55, "griddevic": 55, "dimx": 55, "dimi": 55, "3x2": 55, "dimens": [55, 61, 64], "squaregriddevic": 55, "dim": 55, "squar": 55, "3x3": 55, "alltoal": 55, "revamp": 56, "dq": [56, 59], "changelog": 56, "broken": 56, "flagship": 57, "electronicstructurehamiltonian": [57, 58, 59], "hpq": [57, 61], "hpqr": [57, 61], "hamiltonian_sp": 57, "to_spin": [57, 58, 59, 61], "eigenenergi": [57, 61], "exact_energi": 57, "eigh": 57, "nenergi": 57, "ntheta": 57, "9999999974320526": 57, "1416940034276815": 57, "2147911128415545": 57, "chemist": 57, "molecular": [57, 59], "cluster": [57, 59], "guess": [57, 59, 61], "m\u00f8ller": [57, 61], "plesset": [57, 59, 61], "perturb": [57, 59, 61, 71], "h_2": 57, "introduc": [57, 59, 68], "meant": [57, 61, 65], "thorough": 57, "whatev": 57, "sake": [57, 60], "pyscf": [57, 59, 61], "perform_pyscf_comput": [57, 61], "geometri": [57, 61], "pyscf_tool": [57, 61], "li": 57, "75": 57, "31g": 57, "rdm1": [57, 61], "orbital_energi": [57, 61], "nuclear_repuls": [57, 61], "n_electron": [57, 61], "one_body_integr": [57, 61], "two_body_integr": [57, 61], "mol_h": [57, 61], "9071609330057144": 57, "get_electronic_hamiltonian": [57, 58, 59, 61], "transform_basi": [57, 61], "select_active_spac": [57, 61], "orbit": [57, 61], "occup": [57, 61], "noon": [57, 61], "basis_chang": 57, "axi": [57, 64, 69], "mol_h_new_basi": 57, "proce": 57, "mol_h_act": 57, "active_indic": [57, 61], "occupied_indic": [57, 61], "threshold_1": [57, 61], "02": [57, 61], "threshold_2": [57, 61], "002": 57, "nuclear": [57, 61], "repuls": [57, 61], "bring": 57, "occupi": [57, 61], "ldca": 57, "correl": [57, 58, 61], "mr": 57, "four": [57, 61], "excit": 57, "preserv": [57, 65, 67], "mrep": 57, "eight": 57, "compress": 57, "eigenvalu": [57, 59, 61], "eigenvector": 57, "make_hubbard_model": [57, 61], "t_mat": [57, 61], "mu": [57, 61], "eigval": [57, 61], "eigvalsh": [57, 60, 61], "round": 57, "1403": 57, "phase_estim": [57, 61, 62], "perform_phase_estim": [57, 61], "nqbits_phas": 57, "n_trotter_step": [57, 61], "guess_energi": 57, "size_interv": [57, 61], "e_target": [57, 61], "002343750000000089": 57, "trotteris": [57, 61], "make_trotterisation_routin": [57, 61], "qrout": 57, "final_tim": [57, 61], "apply_quantum_subspace_expans": [57, 61], "fermionhamiltonian": [58, 59], "z_": 58, "y_": 58, "zy": [58, 61], "c_": [58, 61, 65], "cc": [58, 61], "cccc": [58, 61], "to_electron": [58, 59, 61], "pq": [58, 61], "a_p": [58, 61], "a_q": [58, 61], "pqr": [58, 61], "a_r": [58, 61], "mathbb": [58, 61], "h_pq": [58, 61], "h_pqr": [58, 61], "h_elec": 58, "htype": 58, "to_fermion": [58, 59, 61], "uv": [58, 61], "sigma": [58, 61], "uvwx": [58, 61], "convert_to_h_integr": [58, 61], "molecularhamiltonian": [58, 59], "bare": 58, "much": 58, "5j": 58, "h_fermion": 58, "h_spin": 58, "825": 58, "175": 58, "h_fermion1": 58, "h_fermion2": 58, "h_spin1": 58, "h_spin2": 58, "fermion_comutator_matrix": 58, "spin_comutator_matrix": 58, "is_equal_sign": 58, "wick": [58, 59, 61], "speed": 58, "anderson": 58, "toi": 58, "strong": 58, "impur": [58, 59], "site": [58, 61], "bath": [58, 61], "bugfix": 59, "qchem": 59, "renam": 59, "rewritten": 59, "simplif": 59, "moleculeinfo": 59, "restrict_active_spac": [59, 61], "gradientdescentoptim": [59, 60, 61, 70], "descent": [59, 60, 70], "seqoptim": [59, 60, 61, 68, 70, 71], "nakanashi": 59, "zeronoiseextrapol": [59, 60, 61, 70], "multiplelaunchesanalyz": [59, 60, 61, 68, 70], "fermionic_util": 59, "exact_eigen_energi": 59, "fermionic_hamiltonian_exponenti": 59, "reloc": 59, "ansatz_circuit": 59, "build_ucc_ansatz": 59, "ucc_deprec": 59, "construct_ucc_ansatz": [59, 61], "clarifi": 59, "compute_active_space_integr": [59, 61], "_compute_active_space_const": 59, "build_cluster_op": 59, "privat": 59, "select_active_orbit": [59, 61], "init_uccsd": 59, "trial": [59, 61], "mollet": 59, "2nd": [59, 61], "get_initial_params_and_cluster_op": 59, "guess_init_param": [59, 61], "get_hf_ket": [59, 61], "hartre": [59, 60, 61], "fock": [59, 60, 61], "get_cluster_op": [59, 61], "select_excitation_oper": 59, "get_active_space_hamiltonian": 59, "said": 60, "slower": 60, "cluster_oper": 60, "harre": 60, "hf_init": 60, "char": 60, "adaptvqe_plugin": 60, "theta_init": 60, "1372701679264894": 60, "1372701679265027": 60, "sgd": 60, "adam": 60, "euclidean": 60, "distanc": 60, "baseless": 60, "assumpt": [60, 62], "rate": 60, "fisher": 60, "steepest": 60, "fubini": 60, "devis": 60, "theta_0": 60, "theta_1": 60, "theta_2": 60, "theta_3": 60, "theta_4": 60, "natgrad_opt": 60, "learning_paramet": 60, "8660254037652464": 60, "certain": [60, 68, 69], "ic": 60, "outperform": 60, "sensit": [60, 68], "whch": 60, "regim": 60, "vari": 60, "intens": [60, 61], "artifici": 60, "2n_": 60, "consider": [60, 61], "faulti": 60, "depolar": 60, "fold": [60, 62], "endo": 60, "calcul": [60, 61, 65], "rangle_": 60, "richardson": 60, "giurgica": 60, "tiron": 60, "unclear": 60, "varianc": 60, "essenti": 61, "4j": 61, "normal_ord": 61, "4d": 61, "dr": 61, "phi_": 61, "particl": [61, 71], "kin": 61, "pot": 61, "coulomb": 61, "randn": 61, "rand": 61, "4458217765541531": 61, "delta_": 61, "sigma_1": 61, "sigma_2": 61, "ux": 61, "vw": 61, "iint": 61, "r_": 61, "resp": 61, "phi_u": 61, "wavefunct": [61, 69], "freez": 61, "n_i": 61, "ca": 61, "divid": 61, "inact": 61, "unchang": 61, "varepsilon_2": 61, "varepsilon_1": 61, "cup": 61, "geq": [61, 65], "n_e": 61, "e_": 61, "ijji": 61, "ijij": 61, "descend": 61, "transformation_matrix": 61, "u_": [61, 63], "qi": 61, "jq": 61, "ijkl": 61, "qj": 61, "kr": 61, "molecular_hamiltonian": 61, "39602295629162243": 61, "186582129027263": 61, "6319046952566567": 61, "2045296799168843": 61, "3710105342909814": 61, "06325102218392561": 61, "9871636300821159": 61, "223023481244258": 61, "1106468318529636": 61, "6471906814774011": 61, "3262667857408898": 61, "7337245287275505": 61, "24174492479485374": 61, "4590523786306649": 61, "4280186393763065": 61, "925966057671262": 61, "12121361475661792": 61, "4346778898905092": 61, "4371028614926137": 61, "9183126448475859": 61, "6436276083065122": 61, "t_": 61, "dagger_i": 61, "uparrow": 61, "downarrow": 61, "hop": 61, "n_site": 61, "chemic": 61, "make_anderson_model": 61, "epsilon": 61, "canon": 61, "csq": 61, "f_p": 61, "f_q": 61, "f_r": 61, "n_b": 61, "siam": 61, "v_i": 61, "epsilon_i": 61, "2n_b": 61, "f_0": 61, "annihil": 61, "f_1": 61, "f_2": 61, "1st": 61, "f_3": 61, "make_embedded_model": 61, "lambda_c": 61, "t_loc": 61, "int_kernel": 61, "limits_": 61, "2m": 61, "f_j": 61, "_k": 61, "f_l": 61, "loc": 61, "d_": [61, 64], "imp": 61, "onsit": 61, "uncorrel": 61, "conv": 61, "2i": [61, 63], "_1": [61, 65], "transform_to_jw_basi": 61, "fermion_hamiltonian": 61, "jw": 61, "spin_hamiltonian": 61, "075j": 61, "yx": 61, "075": 61, "xy": 61, "transform_to_bk_basi": 61, "bk": 61, "transform_to_parity_basi": 61, "make_ldca_circ": 61, "nb_fermionic_mod": 61, "eigstate_ind": 61, "slater": 61, "dallair": 61, "demer": 61, "2019": 61, "matchgat": 61, "eigenst": [61, 65], "make_mr_circ": 61, "small": [61, 65], "sugisaki": 61, "make_mrep_circ": 61, "n_fsim_cycl": 61, "set_phi_to_0": 61, "fsim": 61, "neighbour": 61, "make_general_hwe_circ": 61, "n_cycl": 61, "rotation_g": 61, "entangling_g": 61, "predefg": 61, "thinli": 61, "dress": 61, "surround": 61, "odd": 61, "pattern": 61, "make_shallow_circ": 61, "keen": 61, "make_compressed_ldca_circ": 61, "synthoplin": 61, "h_el": 61, "n_phase_bit": 61, "init_vec": 61, "n_adiab_step": 61, "basis_transform": 61, "n_shot": 61, "qpe": 61, "apriori": 61, "preliminari": 61, "collaps": [61, 62], "linearli": [61, 65], "guarante": 61, "lie": 61, "adjust": 61, "suggest": 61, "interv": 61, "unbias": 61, "narrow": 61, "mislead": 61, "anymor": 61, "thumb": 61, "accur": [61, 69], "01101": 61, "straight": 61, "c_p": 61, "fast": 61, "Will": 61, "_interv": 61, "qse": 61, "state_prep_circ": 61, "expansion_oper": 61, "return_matric": 61, "star": 61, "_j": 61, "o_i": 61, "matrix_h": 61, "matrix_": 61, "e_qs": 61, "e_min": 61, "e_vq": 61, "opt_circ": 61, "transform_integrals_to_new_basi": 61, "u_mat": 61, "h_hat_ij": 61, "h_hat_ijkl": 61, "2i_": 61, "cluster_op": 61, "ket_hf": 61, "hf": 61, "iT": 61, "uccsd": 61, "active_so": 61, "spatial": 61, "inactive_occupied_so": 61, "mp2": 61, "theta_a": 61, "epsilon_j": 61, "epsilon_a": 61, "epsilon_b": 61, "degeneraci": 61, "theta_list": 61, "n_qbit": 61, "prod_": 61, "c_q": 61, "c_r": 61, "run_fci": 61, "kickstart": 61, "densiti": 61, "groundstat": 61, "m\u00f6ller": 61, "ci": 61, "fci": 61, "expens": 61, "atom1": 61, "atom2": 61, "atomn": 61, "alpha": [61, 64, 65, 71], "neutral": 61, "nel": 61, "cregist": 62, "boolformula": 62, "ctrlbit": 62, "gate1": 62, "gate2": 62, "get_free_ancilla": 62, "destroi": 62, "usabl": 62, "variablenamenotavail": 62, "class_typ": 62, "qblist": 62, "cblist": 62, "include_lock": 62, "do_link": 62, "comparison_ep": 62, "box_routin": 62, "untouch": 62, "demand": 62, "happen": 62, "indentif": 62, "correspondig": 62, "systemat": 62, "repetit": [62, 69], "submatric": 62, "parent": [62, 65], "littl": 62, "mother": 62, "never": 62, "admiss": 62, "r_z": 62, "my_rz": 62, "matrix_gen": 62, "set_dag": 62, "paramg": 62, "abstract_g": 62, "member": 62, "notion": 62, "routop_l": 62, "max_wir": 62, "inbound": 62, "repeatedli": 62, "bl": 62, "unus": [62, 70], "reus": 62, "freed_ancilla": 62, "additin": 62, "tag": 62, "contruct": 62, "qbool_arrai": 62, "qclaus": 62, "cl": 62, "qbits_list": 62, "operand": 62, "implicitli": 62, "toward": 62, "and_formula": 62, "got": 62, "reverse_bit_ord": 62, "qarithexp": 62, "qcompexp": 62, "uniti": 62, "xore": 62, "slice": [62, 65], "composit": 62, "cbits_list": 62, "seraliz": 62, "builder": [62, 65], "utilitari": 62, "suppr_ctrl": 62, "ancillari": 62, "toffoli_fold": 62, "nb_qbit": 62, "scenario": 62, "lift": 62, "tild": [62, 63], "my_gat": 62, "generate_gate_set": 62, "add_const": [62, 63], "mult_const": [62, 63], "cuccaro_add": [62, 63], "agnost": 62, "modular_exp": [62, 63], "mult_const_mod": [62, 63], "add_const_mod": [62, 63], "add_mod": [62, 63], "qram": 62, "get_routin": [62, 64], "skeleton": 62, "abtract": 62, "cz": 62, "my_cnot_implement": 62, "overrid": [62, 66], "footprint": 62, "gate_signatur": 62, "clear_gate_set": 62, "default_g": 62, "link_gat": 62, "link_matric": 62, "set_gate_set": 62, "amplification_step": 62, "state_prep": 62, "household": 62, "nbit": [62, 65], "reg1": 62, "reg2": 62, "quantum_count": 62, "uniform_distribut": 62, "grover_diffus": 62, "green": 63, "rippl": 63, "indep": 63, "indepent": 63, "distinct": 63, "notat": 63, "5949": 63, "reg_siz": 63, "psi_": 63, "xk": 63, "reg_size_2": 63, "modulo": 63, "res_reg_s": 63, "quant": 63, "9511018": 63, "0410184": 63, "0910": 63, "2530v1": 63, "6n": 63, "2n": 63, "4n": 63, "7n": 63, "5n": 63, "crash": 63, "acc_siz": 63, "modulu": 63, "textrm": 63, "mod": 63, "shor": 63, "phase_reg": 63, "3720": 63, "8988": 63, "1472": 63, "384": 63, "gate_s": 63, "14853": 63, "reg_control_s": 63, "expon": 63, "accumul": 63, "euclid": 63, "coprim": 63, "kp": 64, "multiplexor": 64, "prakash": 64, "kp17": 64, "k_1": 64, "k_n": 64, "k_i": 64, "pad": 64, "log_2": 64, "understood": 64, "i_1": 64, "i_k": 64, "alpha_": 64, "adress": 64, "i_l": 64, "beta_": 64, "flatten": 64, "rout_0": 64, "rout_1": 64, "rout_2": 64, "kerinidi": 64, "proport": 64, "routine_state_prep": 64, "routine_1": 64, "9599481358565838": 64, "164734201894148": 64, "24062886139716544": 64, "410368857987665": 64, "3567354116708534": 64, "18847912247571447": 64, "7177579394158706": 64, "addresses_count": 64, "mutliplexor": 64, "iordani": 64, "anupam": 64, "8th": 64, "innov": 64, "theoret": [64, 65], "confer": 64, "itc": 64, "schloss": 64, "dagstuhl": 64, "leibniz": 64, "zentrum": 64, "fuer": 64, "informatik": 64, "avaibl": 65, "to_xxx": 65, "add_claus": 65, "myproblem": 65, "var1": 65, "var2": 65, "get_observ": 65, "125": 65, "w_": 65, "nbvar": 65, "boolexpr": 65, "and_claus": 65, "or_claus": 65, "xor_claus": 65, "neg_claus": 65, "subclaus": 65, "induct": 65, "wedg": 65, "vee": 65, "oplu": 65, "singleton": 65, "offset_q": 65, "e_q": 65, "get_best_paramet": 65, "child": 65, "aneal": 65, "durat": 65, "get_j_h_and_offset": 65, "sperat": 65, "to_circ_arg": 65, "get_qaoa_gate_set": 65, "my_plugin": 65, "synthes": 65, "regroup": 65, "qaoa_circuit": 65, "line_ob": 65, "add_term": 65, "ansatz_with_cnot": 65, "ansatz_with_rzz": 65, "121": 65, "67": 65, "insert_in": 65, "slic": 65, "elif": 65, "ansatz_default": 65, "ansatz_color": 65, "gray_synth": 65, "cnot_count": 65, "zzz": 65, "ansatz_gray_synth": 65, "grai": 65, "synth": 65, "ami": 65, "graysynth": 65, "onlt": 65, "schedulegener": 65, "schedule_gener": 65, "interpol": 65, "initialstatebuild": 65, "bit_flip": 65, "restrict_to": 65, "simpleinitialst": 65, "hamming_weight": 65, "tmax_psi_0": 65, "sigma_i": 65, "equi": 65, "argu": 65, "gap": 65, "entail": 65, "scalabl": 65, "inexact": 65, "70": 65, "independentann": 65, "mixing_factori": 65, "inject": 65, "inject_initial_st": 65, "prepend": 65, "start_ham": 65, "end_ham": 65, "true_psi_0": 65, "famou": 65, "instrins": 65, "optimis": 65, "max_cut": 65, "produce_j_h_and_offset": 65, "wikipedia": [65, 71], "256": 65, "n_monte_carlo_upd": 65, "n_trotter": 65, "replica": 65, "gamma_max": 65, "gamma_min": 65, "parse_result": 65, "graph_partit": 65, "graph_partitioning_problem": 65, "balanc": 65, "colour": [65, 70], "graph_colour": 65, "produce_q_and_offset": 65, "graph_colouring_problem": 65, "thatrepres": 65, "k_cliqu": 65, "k_clique_problem": 65, "bigger": 65, "vertex_cov": 65, "number_partit": 65, "array_of_numb": 65, "array_of_numbers_s": 65, "10000": [65, 69], "number_partitioning_problem": 65, "5651": 65, "numbers_arrai": 65, "binary_linear_integer_program": 65, "maximis": 65, "bilp_problem": 65, "handi": 66, "compliant": 66, "lnn_topologi": 66, "usus": 67, "4999999999999999": [67, 69], "keep_topologi": 67, "q1": 67, "q2": 67, "tradeoff": 68, "ve": 68, "job_2": 68, "job_3": 68, "5933372004286858": 68, "14670404982545515": 68, "5868161993018206": 68, "circuit_2": 68, "caught": 68, "150": 68, "trace": [68, 71], "optimization_trac": [68, 71], "538034211301333": 68, "8403471236699436": 68, "914978420691307": 68, "4694382435759944": 68, "03069494183351828": 68, "3375791396169836": 68, "442440924437661": 68, "545035483419407": 68, "3380460879826705": 68, "8376011151951485": 68, "4278953742055993": 68, "6342479950782862": 68, "75315405221831": 68, "3126775375535416": 68, "5996767486533834": 68, "8207317579798934": 68, "1650041271665903": 68, "9888142898433907": 68, "1404176144780385": 68, "2250666029576633": 68, "222406465401906": 68, "156448129573384": 68, "2701497829832227": 68, "290723640332793": 68, "221239071542059": 68, "373571053071675": 68, "4351967275070345": 68, "500727331252657": 68, "559611902819612": 68, "540052144982611": 68, "6191028927542326": 68, "6368231243902933": 68, "5300022351302904": 68, "71683771421188": 68, "782215401168489": 68, "847248479976221": 68, "901164119298752": 68, "9704722573233844": 68, "030569377859154": 68, "099896342349473": 68, "166759952582065": 68, "235054231236957": 68, "3033610671848255": 68, "37155095914984": 68, "439695284482998": 68, "507843839186086": 68, "575995952701398": 68, "644147403503882": 68, "7122966220715075": 68, "780448174111959": 68, "848596657035541": 68, "916712359362586": 68, "984862941657386": 68, "052986606359525": 68, "1211328536527745": 68, "189265181612796": 68, "257405994469833": 68, "32554149443745": 68, "393607686465501": 68, "46169217939215": 68, "529754568068704": 68, "597468661473344": 68, "665212712552233": 68, "732886059279297": 68, "798861825914902": 68, "864961633775101": 68, "930548164382925": 68, "986576081200955": 68, "0530270455422635": 68, "104788648281648": 68, "025795311035868": 68, "156888110358059": 68, "211127948961556": 68, "229360277535831": 68, "324452222757477": 68, "351083665108649": 68, "430936359800044": 68, "49530719829507": 68, "563387977537905": 68, "631136153871751": 68, "697939474440229": 68, "753538976252937": 68, "81369211647033": 68, "862696066042437": 68, "79874464556193": 68, "915280936725773": 68, "958749142006125": 68, "892008688927157": 68, "999975963835746": 68, "028918126452696": 68, "002742738048656": 68, "061061247986058": 68, "075849606792783": 68, "114343566556165": 68, "146343752194669": 68, "179595832042453": 68, "211522364384832": 68, "230022317717286": 68, "269569364479372": 68, "299609838650503": 68, "333376635837311": 68, "366610548597418": 68, "398230939701014": 68, "400549698326205": 68, "445715681278956": 68, "47740395782389": 68, "5084581937483925": 68, "527818420406355": 68, "565828267214875": 68, "594980097163368": 68, "629541253027006": 68, "6638911807012144": 68, "698093165381047": 68, "7321687861973265": 68, "7659665872022945": 68, "792228850931125": 68, "828799525682698": 68, "860731650499157": 68, "894706833980128": 68, "9286440460119065": 68, "962510034413839": 68, "996140513829765": 68, "027682642746093": 68, "057457755215175": 68, "089160023338186": 68, "116410469104293": 68, "0900057804677": 68, "147616544256097": 68, "139685791758401": 68, "16293699840594": 68, "174232086615426": 68, "175941545945825": 68, "196884705067504": 68, "21496911804012": 68, "23164481144948": 68, "24869041502324": 68, "265411775442956": 68, "282478407310037": 68, "29952773146863": 68, "316569714032866": 68, "333609063589012": 68, "350647493050971": 68, "36768523342371": 68, "384720423824685": 68, "401726308026628": 68, "418764425619358": 68, "43580313172554": 68, "452842000238247": 68, "469880819981553": 68, "486919473803855": 68, "503957922813555": 68, "520996173323153": 68, "choic": 68, "json": 68, "optimizer_arg": 68, "02008471318012": 68, "863696063159893": 68, "07884861738211": 68, "21539899695217413": 68, "0429128872424327": 68, "00718949741122227": 68, "178139646285559": 68, "535957017450969": 68, "2066100664544828": 68, "4174035861874639": 68, "194082743001086": 68, "1574792257831223": 68, "0506031520986974": 68, "1570866710231553": 68, "339257082501774": 68, "4734541293762713": 68, "6013631154674206": 68, "5552791068622875": 68, "689821504250533": 68, "6054863391910414": 68, "760065666197796": 68, "7857256138891975": 68, "8580454176013776": 68, "9273446618722607": 68, "995774566605207": 68, "0639682923887666": 68, "1318485017368323": 68, "192650113647179": 68, "26276955360324": 68, "329968443229104": 68, "397704909567697": 68, "4646339765787784": 68, "5204094562069503": 68, "5920744312959227": 68, "656630382668329": 68, "724820130015453": 68, "7929290981911725": 68, "8609478474690726": 68, "9287609872445852": 68, "9954448829342457": 68, "063792533875341": 68, "130042519810176": 68, "1952820688780115": 68, "262913071177284": 68, "330406457847726": 68, "397398008668469": 68, "460254917510315": 68, "510386447482671": 68, "574328286456762": 68, "635479966917555": 68, "6838025432357355": 68, "570614317031751": 68, "755300431738068": 68, "800635855300843": 68, "704223875485113": 68, "865881030374414": 68, "925926252303258": 68, "941189400844634": 68, "030126554732805": 68, "079315619997668": 68, "1492827144838085": 68, "218931222600601": 68, "288039494458711": 68, "3565549054377914": 68, "424143683057856": 68, "480488777303381": 68, "552148416308411": 68, "608959848038298": 68, "679812665681946": 68, "743005987075404": 68, "812781466200175": 68, "879910995718946": 68, "9478925507376115": 68, "015786890488614": 68, "083327720422126": 68, "144974877128323": 68, "2135322752844": 68, "272441156932265": 68, "336795033556637": 68, "39635949413683": 68, "406404649168772": 68, "501617736854751": 68, "531523287849271": 68, "610928767785516": 68, "676538247541831": 68, "743902478536924": 68, "8087474039359055": 68, "8319546841791725": 68, "918774904504587": 68, "946755056237488": 68, "028353573572971": 68, "082875816584547": 68, "155248244463457": 68, "223041561745728": 68, "289685238216979": 68, "3577701183819055": 68, "423190630551048": 68, "485061731756764": 68, "5519979889507285": 68, "61958509560221": 68, "688705199190054": 68, "759362591718942": 68, "825678624904655": 68, "89434564954833": 68, "962740274681105": 68, "030859600275738": 68, "09891943690278": 68, "166363672312249": 68, "2347654633978": 68, "302802611265953": 68, "3708771268697": 68, "438701573103456": 68, "505736544205593": 68, "573771582891501": 68, "642018183663078": 68, "710549220516981": 68, "778650197499429": 68, "846727419065994": 68, "91448248890015": 68, "982781872359066": 68, "050885870942624": 68, "11905187625494": 68, "187195729336008": 68, "25521510282638": 68, "31976424172744": 68, "389527469561564": 68, "454623776942864": 68, "524152053530452": 68, "589379916441864": 68, "65882768908028": 68, "723650339484474": 68, "793099485456425": 68, "856491323661228": 68, "925506596686922": 68, "98544964457379": 68, "050094006945173": 68, "103852772710427": 68, "009174675247287": 68, "132562815741887": 68, "197426091095291": 68, "269662296804036": 68, "349136425565357": 68, "419448640815533": 68, "485333951816516": 68, "543203505825876": 68, "614082296575775": 68, "68448953218833": 68, "749318271853907": 68, "817801628156534": 68, "879734826922725": 68, "941135544205725": 68, "000657376848022": 68, "resili": 68, "autom": 68, "henceforth": 69, "primarili": 69, "commonli": 69, "speak": 69, "decid": 69, "subresult": 69, "emphas": 69, "enhanc": 69, "capac": 69, "uncertainti": 69, "exemplifi": 69, "examin": 69, "conduct": [69, 70], "stress": 69, "050161355804659184": 69, "ideal": 69, "took": 69, "goal": 69, "devoid": 69, "198": 69, "201": 69, "124": 69, "_submit_batch": 69, "240": 69, "246": 69, "278": 69, "_calculate_expectation_valu": 69, "platform": 70, "circuitinlin": 70, "display": 70, "costfunctionplugin": 70, "simulated_ann": 70, "favorit": 71, "9999999957096648": 71, "6781401351902188": 71, "2520237974059332": 71, "95047821293436": 71, "7750673428457935": 71, "9831243410666745": 71, "9073016531299735": 71, "9982614985175263": 71, "9978211191612134": 71, "9999937860065149": 71, "9993953989073746": 71, "9999267999687756": 71, "9999357274163913": 71, "9999999274525834": 71, "999990810130099": 71, "9999972761341723": 71, "9999998226009366": 71, "9999996222505634": 71, "999999990646637": 71, "9999999942360466": 71, "9999999784992375": 71, "9999999999728556": 71, "1416852854989563": 71, "binding_arg": 71, "initil": 71, "set_opt": 71, "my_job": 71, "simultan": 71, "spsaminimizeplugin": 71, "spsa": 71, "602": 71, "stop_condit": 71, "evalut": 71, "a_calibr": 71, "calibr": 71, "n_calibr": 71, "en": 71, "wiki": 71, "simultaneous_perturbation_stochastic_approxim": 71, "swarm": 71, "psominimizeplugin": 71, "pso": 71, "choose_inertia_funct": 71, "inertia": 71, "linearly_decreas": 71, "chaotic_random": 71, "name_method_us": 71, "clpso": 71, "fdr_pso": 71, "lip": 71, "hpso_tvac": 71, "max_it": 71, "swarm_numb": 71, "size_initial_vector_spac": 71, "hypercub": 71, "inertia_kwarg": 71, "inertia_funct": 71, "inertia_weight": 71, "vertex_cover_appl": 72, "vertex_cover_gener": 72}, "objects": {"": [[70, 0, 0, "-", "qat"]], "qat": [[34, 0, 0, "-", "clinalg"], [54, 0, 0, "-", "core"], [55, 0, 0, "-", "devices"], [56, 0, 0, "-", "fermion"], [62, 0, 0, "-", "lang"], [35, 0, 0, "-", "pylinalg"], [36, 0, 0, "-", "simulated_annealing"]], "qat.clinalg": [[34, 1, 1, "", "CLinalg"]], "qat.clinalg.CLinalg": [[34, 2, 1, "", "submit"]], "qat.clinalg.wrapper": [[34, 1, 1, "", "CLinalgStateVectorCPUDouble"]], "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble": [[34, 2, 1, "", "apply_1qbit_ctrl_gate"], [34, 2, 1, "", "apply_1qbit_gate"], [34, 2, 1, "", "apply_2qbit_ctrl_gate"], [34, 2, 1, "", "apply_2qbit_gate"], [34, 2, 1, "", "apply_CCNOT"], [34, 2, 1, "", "apply_CNOT"], [34, 2, 1, "", "apply_CSIGN"], [34, 2, 1, "", "apply_H"], [34, 2, 1, "", "apply_ISWAP"], [34, 2, 1, "", "apply_PH"], [34, 2, 1, "", "apply_RX"], [34, 2, 1, "", "apply_RY"], [34, 2, 1, "", "apply_RZ"], [34, 2, 1, "", "apply_S"], [34, 2, 1, "", "apply_SQRTSWAP"], [34, 2, 1, "", "apply_SWAP"], [34, 2, 1, "", "apply_T"], [34, 2, 1, "", "apply_X"], [34, 2, 1, "", "apply_Y"], [34, 2, 1, "", "apply_Z"], [34, 2, 1, "", "apply_nqbit_ctrl_gate"], [34, 2, 1, "", "apply_nqbit_gate"], [34, 3, 1, "", "array"], [34, 3, 1, "", "array_readonly"], [34, 2, 1, "", "expectation_value"], [34, 2, 1, "", "get_distribution"], [34, 2, 1, "", "get_mapped_distribution"], [34, 2, 1, "", "get_mapped_statevector"], [34, 2, 1, "", "get_permuted_statevector"], [34, 2, 1, "", "print"], [34, 2, 1, "", "project"], [34, 2, 1, "", "project_then_reset"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "resize"], [34, 2, 1, "", "sample"], [34, 2, 1, "", "sample_subset"], [34, 2, 1, "", "set_num_threads"], [34, 2, 1, "", "simulate_circuit"], [34, 2, 1, "", "state_probability"]], "qat.comm.datamodel.ttypes": [[19, 1, 1, "", "GateDefinition"], [19, 1, 1, "", "Op"]], "qat.comm.exceptions.ttypes": [[19, 1, 1, "", "ErrorType"], [19, 1, 1, "", "PluginException"], [19, 1, 1, "", "QPUException"]], "qat.comm.shared.ttypes": [[54, 1, 1, "", "IntermediateMeasurement"], [54, 1, 1, "", "ProcessingType"]], "qat.core": [[54, 1, 1, "", "Batch"], [54, 1, 1, "", "BatchResult"], [54, 1, 1, "", "Circuit"], [54, 1, 1, "", "HardwareSpecs"], [54, 1, 1, "", "Job"], [54, 1, 1, "", "Observable"], [54, 1, 1, "", "Result"], [54, 1, 1, "", "Schedule"], [54, 1, 1, "", "Term"], [54, 1, 1, "", "Topology"], [54, 1, 1, "", "TopologyType"], [54, 1, 1, "", "Variable"], [14, 0, 0, "-", "console"], [66, 0, 0, "-", "quameleon"]], "qat.core.Batch": [[54, 2, 1, "", "dump"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "load"], [54, 2, 1, "", "to_thrift"]], "qat.core.BatchResult": [[54, 2, 1, "", "append"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "extend"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "load"]], "qat.core.Circuit": [[54, 2, 1, "", "bind_variable"], [54, 2, 1, "", "bind_variables"], [54, 2, 1, "", "count"], [54, 2, 1, "", "dag"], [54, 2, 1, "", "display"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "empty"], [54, 2, 1, "", "fill_matrices"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_thrift"], [54, 3, 1, "", "gate_set"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "insert_gate"], [54, 2, 1, "", "iterate_simple"], [54, 2, 1, "", "load"], [54, 2, 1, "", "remove_locks"], [54, 2, 1, "", "shift_qbits"], [54, 2, 1, "", "statistics"], [54, 2, 1, "", "to_job"]], "qat.core.HardwareSpecs": [[54, 2, 1, "", "as_graph"], [54, 2, 1, "", "as_quameleon"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "load"], [54, 3, 1, "", "nbqbits"]], "qat.core.Job": [[54, 2, 1, "", "differentiate"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "gradient"], [54, 2, 1, "", "load"], [54, 3, 1, "", "parameter_map"], [54, 3, 1, "", "psi_0"], [54, 2, 1, "", "shift_qbits"], [54, 2, 1, "", "to_thrift"]], "qat.core.Observable": [[54, 4, 1, "", "constant_coeff"], [54, 4, 1, "", "ising"], [54, 4, 1, "", "nbqbits"], [54, 4, 1, "", "terms"]], "qat.core.Result": [[54, 2, 1, "", "add_sample"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "load"], [54, 3, 1, "", "parameter_map"], [54, 3, 1, "", "value"], [54, 3, 1, "", "values"], [54, 2, 1, "", "wrap_samples"]], "qat.core.Schedule": [[54, 2, 1, "", "dump"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "load"], [54, 2, 1, "", "to_job"]], "qat.core.Term": [[54, 4, 1, "", "coeff"], [54, 4, 1, "", "op"], [54, 4, 1, "", "qbits"]], "qat.core.Topology": [[54, 2, 1, "", "add_edge"], [54, 2, 1, "", "dump"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_nx"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "load"], [54, 3, 1, "", "nbqbits"], [54, 2, 1, "", "set_nbqbits"], [54, 2, 1, "", "to_nx"]], "qat.core.Variable": [[54, 2, 1, "", "differentiate"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "to_thrift"]], "qat.core.application": [[54, 1, 1, "", "Application"], [54, 1, 1, "", "RemoteApplication"]], "qat.core.application.Application": [[54, 2, 1, "", "execute"], [54, 2, 1, "", "serve"]], "qat.core.circuit_builder.builder": [[62, 1, 1, "", "VariableNameNotAvailable"]], "qat.core.circuit_builder.matrix_util": [[54, 5, 1, "", "default_gate_set"], [54, 5, 1, "", "get_param_generator"], [54, 5, 1, "", "get_predef_generator"]], "qat.core.console": [[14, 1, 1, "", "Display"], [54, 5, 1, "", "display"]], "qat.core.console.Display": [[14, 2, 1, "", "compile"], [14, 2, 1, "", "do_post_processing"], [14, 2, 1, "", "post_process"]], "qat.core.formula_eval": [[54, 5, 1, "", "evaluate"]], "qat.core.gate_set": [[54, 1, 1, "", "GateSet"], [54, 1, 1, "", "GateSignature"], [54, 1, 1, "", "GateSyntaxRedefinition"]], "qat.core.gate_set.GateSet": [[54, 2, 1, "", "add_signature"], [54, 2, 1, "", "union"]], "qat.core.gate_set.GateSignature": [[54, 2, 1, "", "get_circuit"], [54, 2, 1, "", "get_matrix"], [54, 2, 1, "", "set_circuit_generator"], [54, 2, 1, "", "set_matrix_generator"]], "qat.core.generator": [[54, 1, 1, "", "AbstractGenerator"], [54, 1, 1, "", "RemoteBatchGenerator"]], "qat.core.generator.AbstractGenerator": [[54, 2, 1, "", "generate"], [54, 2, 1, "", "serve"]], "qat.core.plugins": [[54, 1, 1, "", "RemotePlugin"]], "qat.core.printer": [[54, 5, 1, "", "plot_in_notebook"]], "qat.core.qpu": [[54, 1, 1, "", "QPUHandler"], [54, 1, 1, "", "RemoteQPU"]], "qat.core.qpu.QPUHandler": [[54, 2, 1, "", "serve"], [54, 2, 1, "", "submit"], [54, 2, 1, "", "submit_job"]], "qat.core.quameleon": [[66, 1, 1, "", "QuameleonPlugin"]], "qat.core.spins": [[36, 5, 1, "", "integer_to_spins"], [36, 5, 1, "", "spins_to_integer"]], "qat.core.variables": [[54, 1, 1, "", "ArithExpression"], [54, 1, 1, "", "Symbol"]], "qat.core.variables.ArithExpression": [[54, 2, 1, "", "differentiate"], [54, 2, 1, "", "from_string"], [54, 2, 1, "", "get_variables"], [54, 2, 1, "", "pretty_print"], [54, 2, 1, "", "to_thrift"]], "qat.core.wrappers": [[54, 0, 0, "-", "observable"]], "qat.core.wrappers.result": [[54, 1, 1, "", "Sample"], [54, 1, 1, "", "State"]], "qat.core.wrappers.result.Sample": [[54, 3, 1, "", "amplitude"], [54, 2, 1, "", "from_bytes"], [54, 2, 1, "", "from_thrift"], [54, 2, 1, "", "set_qreg"], [54, 3, 1, "", "state"]], "qat.core.wrappers.result.State": [[54, 3, 1, "", "bitstring"], [54, 3, 1, "", "int"], [54, 3, 1, "", "lsb_int"], [54, 3, 1, "", "value"]], "qat.devices": [[55, 1, 1, "", "AllToAll"], [55, 1, 1, "", "GridDevice"], [55, 1, 1, "", "LineDevice"], [55, 1, 1, "", "SquareGridDevice"]], "qat.fermion.chemistry.pyscf_tools": [[61, 5, 1, "", "perform_pyscf_computation"]], "qat.fermion.chemistry.qse": [[61, 5, 1, "", "apply_quantum_subspace_expansion"]], "qat.fermion.chemistry.ucc": [[61, 5, 1, "", "compute_active_space_integrals"], [61, 5, 1, "", "construct_ucc_ansatz"], [61, 5, 1, "", "convert_to_h_integrals"], [61, 5, 1, "", "get_cluster_ops"], [61, 5, 1, "", "get_hf_ket"], [61, 5, 1, "", "guess_init_params"], [61, 5, 1, "", "select_active_orbitals"], [61, 5, 1, "", "transform_integrals_to_new_basis"]], "qat.fermion.chemistry.wrapper": [[61, 1, 1, "", "MolecularHamiltonian"], [61, 1, 1, "", "MoleculeInfo"]], "qat.fermion.chemistry.wrapper.MolecularHamiltonian": [[61, 4, 1, "", "constant_coeff"], [61, 2, 1, "", "get_electronic_hamiltonian"], [61, 4, 1, "", "nqbits"], [61, 4, 1, "", "one_body_integrals"], [61, 2, 1, "", "select_active_space"], [61, 2, 1, "", "transform_basis"], [61, 4, 1, "", "two_body_integrals"]], "qat.fermion.chemistry.wrapper.MoleculeInfo": [[61, 4, 1, "", "constant_coeff"], [61, 4, 1, "", "hamiltonian"], [61, 4, 1, "", "n_electrons"], [61, 4, 1, "", "noons"], [61, 4, 1, "", "nqbits"], [61, 4, 1, "", "one_body_integrals"], [61, 4, 1, "", "orbital_energies"], [61, 2, 1, "", "restrict_active_space"], [61, 4, 1, "", "two_body_integrals"]], "qat.fermion.circuits": [[61, 5, 1, "", "make_compressed_ldca_circ"], [61, 5, 1, "", "make_general_hwe_circ"], [61, 5, 1, "", "make_ldca_circ"], [61, 5, 1, "", "make_mr_circ"], [61, 5, 1, "", "make_mrep_circ"], [61, 5, 1, "", "make_shallow_circ"]], "qat.fermion.hamiltonians": [[61, 1, 1, "", "ElectronicStructureHamiltonian"], [61, 1, 1, "", "FermionHamiltonian"], [61, 1, 1, "", "SpinHamiltonian"], [61, 5, 1, "", "make_anderson_model"], [61, 5, 1, "", "make_embedded_model"], [61, 5, 1, "", "make_hubbard_model"]], "qat.fermion.hamiltonians.ElectronicStructureHamiltonian": [[61, 4, 1, "", "constant_coeff"], [61, 2, 1, "", "copy"], [61, 2, 1, "", "dag"], [61, 2, 1, "", "get_matrix"], [61, 4, 1, "", "hpq"], [61, 4, 1, "", "hpqrs"], [61, 2, 1, "", "to_fermion"], [61, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.FermionHamiltonian": [[61, 4, 1, "", "constant_coeff"], [61, 2, 1, "", "copy"], [61, 2, 1, "", "dag"], [61, 2, 1, "", "get_matrix"], [61, 4, 1, "", "matrix"], [61, 4, 1, "", "nbqbits"], [61, 4, 1, "", "normal_order"], [61, 4, 1, "", "terms"], [61, 2, 1, "", "to_electronic"], [61, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.SpinHamiltonian": [[61, 4, 1, "", "constant_coeff"], [61, 2, 1, "", "copy"], [61, 2, 1, "", "dag"], [61, 2, 1, "", "get_matrix"], [61, 4, 1, "", "matrix"], [61, 4, 1, "", "nbqbits"], [61, 4, 1, "", "terms"]], "qat.fermion.phase_estimation": [[61, 5, 1, "", "perform_phase_estimation"]], "qat.fermion.transforms": [[61, 5, 1, "", "transform_to_bk_basis"], [61, 5, 1, "", "transform_to_jw_basis"], [61, 5, 1, "", "transform_to_parity_basis"]], "qat.fermion.trotterisation": [[61, 5, 1, "", "make_trotterisation_routine"]], "qat.interop.cirq": [[23, 5, 1, "", "cirq_to_qlm"], [23, 0, 0, "-", "converters"], [23, 5, 1, "", "qlm_to_cirq"]], "qat.interop.openqasm": [[31, 1, 1, "", "OqasmParser"]], "qat.interop.openqasm.OqasmParser": [[31, 2, 1, "", "compile"]], "qat.interop.projectq": [[32, 1, 1, "", "AqasmEngine"], [32, 1, 1, "", "AqasmPrinter"], [32, 0, 0, "-", "converters"]], "qat.interop.projectq.AqasmEngine": [[32, 2, 1, "", "projectq_to_qlm"]], "qat.interop.pyquil": [[33, 1, 1, "", "PyquilQPU"], [33, 0, 0, "-", "converters"], [33, 0, 0, "-", "providers"], [33, 5, 1, "", "pyquil_to_qlm"], [33, 5, 1, "", "qlm_to_pyquil"]], "qat.interop.pyquil.PyquilQPU": [[33, 2, 1, "", "set_qpu"], [33, 2, 1, "", "submit"], [33, 2, 1, "", "submit_job"]], "qat.interop.qiskit": [[37, 1, 1, "", "AsyncBackendToQPU"], [37, 1, 1, "", "BackendToQPU"], [37, 1, 1, "", "QPUToBackend"], [37, 1, 1, "", "QiskitJob"], [37, 0, 0, "-", "converters"], [37, 0, 0, "-", "providers"], [37, 5, 1, "", "qiskit_to_qlm"], [37, 5, 1, "", "qlm_to_qiskit"], [37, 0, 0, "-", "runtime"]], "qat.interop.qiskit.AsyncBackendToQPU": [[37, 2, 1, "", "retrieve_job"], [37, 2, 1, "", "submit"]], "qat.interop.qiskit.BackendToQPU": [[37, 2, 1, "", "submit"]], "qat.interop.qiskit.QPUToBackend": [[37, 2, 1, "", "set_qpu"]], "qat.interop.qiskit.QiskitJob": [[37, 2, 1, "", "cancel"], [37, 2, 1, "", "dump"], [37, 2, 1, "", "job_id"], [37, 2, 1, "", "result"], [37, 2, 1, "", "status"]], "qat.interop.qiskit.runtime": [[37, 1, 1, "", "QiskitRuntimeQPU"]], "qat.interop.qiskit.runtime.QiskitRuntimeQPU": [[37, 2, 1, "", "submit"]], "qat.lang": [[63, 0, 0, "-", "AQASM"]], "qat.lang.AQASM": [[62, 1, 1, "", "Program"], [63, 0, 0, "-", "arithmetic"], [63, 0, 0, "-", "classarith"], [62, 0, 0, "-", "misc"], [63, 0, 0, "-", "qftarith"], [62, 0, 0, "-", "util"]], "qat.lang.AQASM.Program": [[62, 2, 1, "", "apply"], [62, 2, 1, "", "calloc"], [62, 2, 1, "", "cbreak"], [62, 2, 1, "", "cc_apply"], [62, 2, 1, "", "comment"], [62, 2, 1, "", "conjugate"], [62, 2, 1, "", "display"], [62, 2, 1, "", "export"], [62, 2, 1, "", "free_ancillae"], [62, 2, 1, "", "get_free_ancillae"], [62, 2, 1, "", "logic"], [62, 2, 1, "", "measure"], [62, 2, 1, "", "new_var"], [62, 2, 1, "", "qalloc"], [62, 2, 1, "", "reset"], [62, 2, 1, "", "to_circ"]], "qat.lang.AQASM.arithmetic": [[63, 5, 1, "", "add_const_mod"], [63, 5, 1, "", "add_mod"], [63, 5, 1, "", "modular_exp"], [63, 5, 1, "", "mult_const"], [63, 5, 1, "", "mult_const_mod"]], "qat.lang.AQASM.bits": [[62, 1, 1, "", "BoolFormula"], [62, 1, 1, "", "CRegister"], [62, 1, 1, "", "Cbit"], [62, 1, 1, "", "QRegister"], [62, 1, 1, "", "Qbit"]], "qat.lang.AQASM.bits.BoolFormula": [[62, 2, 1, "", "cbits_list"], [62, 2, 1, "", "to_thrift"]], "qat.lang.AQASM.classarith": [[63, 5, 1, "", "add"], [63, 5, 1, "", "add_const"], [63, 5, 1, "", "cuccaro_add"]], "qat.lang.AQASM.gates": [[62, 1, 1, "", "AbstractGate"], [62, 1, 1, "", "Gate"], [62, 1, 1, "", "ParamGate"]], "qat.lang.AQASM.gates.AbstractGate": [[62, 2, 1, "", "set_dag"]], "qat.lang.AQASM.gates.Gate": [[62, 2, 1, "", "conj"], [62, 2, 1, "", "ctrl"], [62, 2, 1, "", "dag"], [62, 2, 1, "", "trans"]], "qat.lang.AQASM.gates.ParamGate": [[62, 2, 1, "", "dag"], [62, 2, 1, "", "display"]], "qat.lang.AQASM.misc": [[62, 1, 1, "", "build_gate"], [62, 5, 1, "", "generate_gate_set"]], "qat.lang.AQASM.qbool": [[62, 1, 1, "", "QBool"], [62, 1, 1, "", "QBoolArray"], [62, 1, 1, "", "QClause"]], "qat.lang.AQASM.qbool.QBool": [[62, 2, 1, "", "cast"], [62, 2, 1, "", "cast_to"], [62, 2, 1, "", "evaluate"], [62, 2, 1, "", "phase"], [62, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QBoolArray": [[62, 2, 1, "", "cast"], [62, 2, 1, "", "evaluate"], [62, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QClause": [[62, 2, 1, "", "evaluate"], [62, 2, 1, "", "phase"], [62, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qftarith": [[63, 5, 1, "", "QFT"], [63, 5, 1, "", "add"], [63, 5, 1, "", "add_const"], [63, 5, 1, "", "mult"], [63, 5, 1, "", "mult_const"]], "qat.lang.AQASM.qint": [[62, 1, 1, "", "QArithExp"], [62, 1, 1, "", "QCompExp"], [62, 1, 1, "", "QInt"]], "qat.lang.AQASM.qint.QArithExp": [[62, 2, 1, "", "evaluate"]], "qat.lang.AQASM.qint.QCompExp": [[62, 2, 1, "", "evaluate"], [62, 2, 1, "", "phase"], [62, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qint.QInt": [[62, 2, 1, "", "cast"], [62, 2, 1, "", "evaluate"], [62, 2, 1, "", "qbits_list"], [62, 2, 1, "", "set_value"]], "qat.lang.AQASM.routines": [[62, 1, 1, "", "QRoutine"]], "qat.lang.AQASM.routines.QRoutine": [[62, 2, 1, "", "apply"], [62, 2, 1, "", "compute"], [62, 2, 1, "", "free_ancillae"], [62, 2, 1, "", "get_free_ancillae"], [62, 2, 1, "", "new_wires"], [62, 2, 1, "", "set_ancillae"], [62, 2, 1, "", "uncompute"]], "qat.lang.AQASM.util": [[62, 5, 1, "", "suppr_ctrl"], [62, 5, 1, "", "toffoli_fold"]], "qat.lang.algorithms.amplification": [[62, 5, 1, "", "grover_diffusion"], [62, 5, 1, "", "householder"], [62, 5, 1, "", "uniform_distribution"]], "qat.lang.algorithms": [[62, 5, 1, "", "amplification_step"], [62, 5, 1, "", "phase_estimation"], [62, 5, 1, "", "quantum_counting"]], "qat.lang.linking.linker": [[62, 1, 1, "", "Linker"]], "qat.lang.linking.linker.Linker": [[62, 2, 1, "", "add_signature"], [62, 2, 1, "", "clear_gate_set"], [62, 2, 1, "", "compile"], [62, 2, 1, "", "link"], [62, 2, 1, "", "link_gates"], [62, 2, 1, "", "link_matrices"], [62, 2, 1, "", "set_gate_set"]], "qat.lang.linking": [[5, 0, 0, "-", "plugin"]], "qat.lang.linking.plugin": [[5, 1, 1, "", "CircuitInliner"]], "qat.lang.linking.plugin.CircuitInliner": [[5, 2, 1, "", "addargs"], [5, 2, 1, "", "compile"], [5, 2, 1, "", "do_post_processing"], [5, 2, 1, "", "post_process"]], "qat.lang.models": [[64, 1, 1, "", "KPTree"]], "qat.lang.models.KPTree": [[64, 2, 1, "", "get_routine"]], "qat.opt": [[65, 1, 1, "", "CombinatorialProblem"], [65, 1, 1, "", "Ising"], [65, 1, 1, "", "MixingFactory"], [65, 1, 1, "", "QUBO"], [0, 0, 0, "-", "generators"]], "qat.opt.CombinatorialProblem": [[65, 2, 1, "", "add_clause"], [65, 2, 1, "", "get_observable"], [65, 2, 1, "", "new_var"], [65, 2, 1, "", "new_vars"], [65, 2, 1, "", "to_ising"], [65, 2, 1, "", "to_qubo"]], "qat.opt.Ising": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "get_j_h_and_offset"], [65, 2, 1, "", "get_observable"], [65, 2, 1, "", "to_combinatorial_problem"], [65, 2, 1, "", "to_job"], [65, 2, 1, "", "to_qubo"]], "qat.opt.MixingFactory": [[65, 2, 1, "", "bit_flip"], [65, 2, 1, "", "bit_move"]], "qat.opt.QUBO": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "get_observable"], [65, 2, 1, "", "get_q_and_offset"], [65, 2, 1, "", "to_combinatorial_problem"], [65, 2, 1, "", "to_ising"], [65, 2, 1, "", "to_job"]], "qat.opt.binary_linear_integer_programming": [[65, 1, 1, "", "BILP"], [65, 5, 1, "", "produce_q_and_offset"]], "qat.opt.binary_linear_integer_programming.BILP": [[65, 2, 1, "", "get_best_parameters"]], "qat.opt.boolexpr": [[65, 1, 1, "", "Clause"], [65, 1, 1, "", "Var"]], "qat.opt.boolexpr.Clause": [[65, 2, 1, "", "get_observable"]], "qat.opt.boolexpr.Var": [[65, 2, 1, "", "evaluate"], [65, 2, 1, "", "get_observable"], [65, 2, 1, "", "get_variables"], [65, 4, 1, "", "index"]], "qat.opt.circuit_generator": [[65, 1, 1, "", "CircuitGenerator"]], "qat.opt.circuit_generator.CircuitGenerator": [[65, 2, 1, "", "qaoa_ansatz"]], "qat.opt.generators": [[16, 1, 1, "", "GraphColouringGenerator"], [17, 1, 1, "", "GraphPartitioningGenerator"], [20, 1, 1, "", "KCliqueGenerator"], [22, 1, 1, "", "MaxCutGenerator"], [72, 1, 1, "", "VertexCoverGenerator"]], "qat.opt.generators.GraphColouringGenerator": [[16, 2, 1, "", "generate"]], "qat.opt.generators.GraphPartitioningGenerator": [[17, 2, 1, "", "generate"]], "qat.opt.generators.KCliqueGenerator": [[20, 2, 1, "", "generate"]], "qat.opt.generators.MaxCutGenerator": [[22, 2, 1, "", "generate"]], "qat.opt.generators.VertexCoverGenerator": [[72, 2, 1, "", "generate"]], "qat.opt.graph_colouring": [[65, 1, 1, "", "GraphColouring"], [65, 5, 1, "", "produce_q_and_offset"]], "qat.opt.graph_colouring.GraphColouring": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "parse_result"]], "qat.opt.graph_partitioning": [[65, 1, 1, "", "GraphPartitioning"], [65, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.graph_partitioning.GraphPartitioning": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "parse_result"]], "qat.opt.k_clique": [[65, 1, 1, "", "KClique"], [65, 5, 1, "", "produce_q_and_offset"]], "qat.opt.k_clique.KClique": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "parse_result"]], "qat.opt.max_cut": [[65, 1, 1, "", "MaxCut"], [65, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.max_cut.MaxCut": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "parse_result"]], "qat.opt.mixing_factory": [[65, 1, 1, "", "IndependentAnnealing"], [65, 1, 1, "", "InitialStateBuilder"], [65, 1, 1, "", "SimpleInitialState"]], "qat.opt.mixing_factory.IndependentAnnealing": [[65, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.InitialStateBuilder": [[65, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.SimpleInitialState": [[65, 2, 1, "", "inject_initial_state"]], "qat.opt.number_partitioning": [[65, 1, 1, "", "NumberPartitioning"], [65, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.number_partitioning.NumberPartitioning": [[65, 2, 1, "", "get_best_parameters"]], "qat.opt.results": [[6, 1, 1, "", "GraphPartitioningResult"], [6, 1, 1, "", "KCliqueResult"], [6, 1, 1, "", "VertexCoverResult"]], "qat.opt.results.GraphPartitioningResult": [[6, 2, 1, "", "display"]], "qat.opt.results.KCliqueResult": [[6, 3, 1, "", "clique"]], "qat.opt.results.VertexCoverResult": [[6, 3, 1, "", "cover"]], "qat.opt.schedule_generator": [[65, 1, 1, "", "ScheduleGenerator"]], "qat.opt.schedule_generator.ScheduleGenerator": [[65, 2, 1, "", "annealing_job"]], "qat.opt.vertex_cover": [[65, 1, 1, "", "VertexCover"], [65, 5, 1, "", "produce_q_and_offset"]], "qat.opt.vertex_cover.VertexCover": [[65, 2, 1, "", "get_best_parameters"], [65, 2, 1, "", "parse_result"]], "qat.plugins": [[54, 1, 1, "", "AbstractPlugin"], [48, 1, 1, "", "AdaptVQEPlugin"], [13, 1, 1, "", "CostFunctionPlugin"], [49, 1, 1, "", "GradientDescentOptimizer"], [49, 0, 0, "-", "GradientDescentOptimizer"], [54, 1, 1, "", "Junction"], [50, 1, 1, "", "MultipleLaunchesAnalyzer"], [50, 0, 0, "-", "MultipleLaunchesAnalyzer"], [47, 1, 1, "", "ObservableSplitter"], [54, 1, 1, "", "Optimizer"], [71, 1, 1, "", "PSOMinimizePlugin"], [67, 1, 1, "", "Remap"], [71, 1, 1, "", "SPSAMinimizePlugin"], [71, 1, 1, "", "ScipyMinimizePlugin"], [71, 1, 1, "", "SeqOptim"], [51, 0, 0, "-", "SeqOptim"], [52, 1, 1, "", "ZeroNoiseExtrapolator"], [52, 0, 0, "-", "ZeroNoiseExtrapolator"], [47, 0, 0, "-", "observable_splitter"]], "qat.plugins.AbstractPlugin": [[54, 2, 1, "", "compile"], [54, 2, 1, "", "do_post_processing"], [54, 2, 1, "", "serve"], [54, 2, 1, "", "wrapper_post_process"]], "qat.plugins.Junction": [[54, 2, 1, "", "execute"], [54, 2, 1, "", "run"]], "qat.plugins.ObservableSplitter": [[47, 2, 1, "", "addargs"], [47, 2, 1, "", "compile"], [47, 2, 1, "", "do_post_processing"], [47, 2, 1, "", "get_fresh_key"], [47, 2, 1, "", "post_process"]], "qat.plugins.Optimizer": [[54, 2, 1, "", "evaluate"], [54, 2, 1, "", "optimize"]], "qat.plugins.ScipyMinimizePlugin": [[71, 2, 1, "", "set_options"]], "qat.pylinalg": [[35, 1, 1, "", "PyLinalg"], [35, 0, 0, "-", "simulator"]], "qat.pylinalg.PyLinalg": [[35, 2, 1, "", "serve"], [35, 2, 1, "", "submit"], [35, 2, 1, "", "submit_job"]], "qat.pylinalg.simulator": [[35, 5, 1, "", "mat2nparray"], [35, 5, 1, "", "measure"], [35, 5, 1, "", "project"], [35, 5, 1, "", "raise_break"], [35, 5, 1, "", "reset"], [35, 5, 1, "", "simulate"]], "qat.simulated_annealing": [[36, 1, 1, "", "SimulatedAnnealing"]], "qat.simulated_annealing.SimulatedAnnealing": [[36, 2, 1, "", "sa"], [36, 2, 1, "", "submit_job"]], "qat.simulated_annealing.service": [[36, 5, 1, "", "extract_j_and_h_from_obs"]], "qat.vsolve.ansatz": [[65, 1, 1, "", "AnsatzFactory"]], "qat.vsolve.ansatz.AnsatzFactory": [[65, 2, 1, "", "qaoa_circuit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 1, 3, 18, 53, 57], "combinatori": [0, 6, 7, 46, 65, 70], "optim": [0, 6, 7, 9, 13, 46, 49, 50, 51, 65, 70], "np": [0, 65], "hard": [0, 65], "problem": [0, 7, 38, 39, 46, 65], "unconstrain": [0, 65], "graph": [0, 1, 16, 17, 65], "max": [0, 22], "cut": [0, 22], "partit": [0, 17], "constrain": [0, 65], "colour": [0, 16], "k": [0, 6], "cliqu": [0, 6], "vertex": [0, 6, 72], "cover": [0, 6, 72], "other": [0, 38, 42, 43, 44, 53, 62, 65, 70], "number": [0, 69], "binari": 0, "integ": [0, 1, 62], "linear": [0, 34, 35], "program": [0, 1, 46, 62, 70], "simul": [0, 10, 11, 12, 34, 35, 36, 38, 42, 46, 56, 61, 70], "quantum": [0, 1, 4, 8, 9, 11, 19, 23, 31, 32, 33, 34, 35, 37, 46, 53, 56, 57, 61, 62, 69, 70], "anneal": [0, 8, 10, 11, 16, 17, 20, 22, 36, 72], "benchmark": 0, "perform": 0, "interfac": [0, 34, 54], "dwave": 0, "us": [1, 21, 37, 58], "pyaqasm": 1, "abstractg": 1, "circuit": [1, 5, 19, 23, 31, 32, 33, 37, 46, 51, 53, 54, 57, 61, 62, 64, 69], "matrix": [1, 26], "implement": 1, "definit": 1, "subcircuit": 1, "ariti": 1, "gener": [1, 6, 16, 17, 20, 22, 38, 42, 53, 55, 61, 62, 65, 70, 72], "lift": 1, "python": [1, 35, 70], "function": [1, 35, 61], "gate": [1, 2, 4, 19, 53, 54, 62], "link": [1, 2], "extract": 1, "comput": [1, 3, 38, 42, 46], "uncomput": 1, "scope": 1, "autom": 1, "ancilla": 1, "manag": [1, 62], "oracl": 1, "type": [1, 62], "boolean": [1, 62], "condit": 1, "alloc": [1, 53], "logic": 1, "express": [1, 21, 54, 62], "evalu": 1, "statement": 1, "build": [1, 3, 21, 48, 54], "phase": [1, 57, 61], "set": [1, 54, 62], "classic": [1, 53, 62], "valu": 1, "arithmet": [1, 63], "exampl": [1, 69], "grover": 1, "color": 1, "The": [2, 4, 19, 55, 58, 61, 62, 70], "aqasm": 2, "format": 2, "text": 2, "header": 2, "instruct": [2, 4, 19], "list": [2, 4, 19, 46], "compil": [2, 12, 31], "file": 2, "time": [2, 54], "stack": [3, 5, 21, 46], "high": [4, 19, 34, 63], "level": [4, 19, 34, 62, 63], "wrapper": [4, 19], "qubit": [4, 19, 47, 53, 67, 69], "cbit": [4, 19], "dictionari": [4, 19], "circuitinlin": 5, "inlin": 5, "insid": 5, "tool": [6, 12, 38, 42, 54, 57, 62, 70], "result": [6, 19, 54], "formul": 7, "solv": 7, "bibliographi": 7, "qa": [8, 65], "approxim": 9, "algorithm": [9, 46, 51, 62, 68, 71], "qaoa": [9, 16, 17, 20, 22, 65, 70, 72], "sa": 10, "sqa": 11, "command": 12, "line": 12, "aqasm2circ": 12, "circ2aqasm": 12, "execut": [12, 21, 69], "qat": [12, 34, 35, 36, 46, 54, 55, 62, 65, 70], "jobrun": 12, "batchrun": 12, "resprint": 12, "circstat": 12, "costfunctionplugin": 13, "variat": [13, 46, 57, 68, 71], "without": 13, "observ": [13, 19, 47, 54, 69], "displai": [14, 54], "consol": 14, "display": 14, "plugin": [14, 21, 46, 54, 60, 61, 66, 70, 71], "get": 15, "start": 15, "job": [16, 17, 19, 20, 22, 54, 65, 68, 69, 72], "schedul": [16, 17, 20, 22, 54, 72], "welcom": 18, "myqlm": [18, 25, 26, 27, 28, 29, 37, 38, 39, 42], "document": [18, 23, 31, 32, 33, 37, 70], "basic": [18, 58, 62], "usag": [18, 53, 57, 58], "notebook": [18, 30, 46], "sourc": [18, 23, 28, 31, 32, 33, 37, 70], "code": [18, 23, 31, 32, 33, 37, 70], "addit": 18, "inform": [18, 21, 69], "main": [19, 38, 43, 44, 59], "object": 19, "batch": [19, 38, 42, 54], "except": [19, 62], "kcliqu": 20, "custom": [21, 53], "flow": 21, "write": [21, 53], "your": [21, 46], "own": 21, "qpu": [21, 33, 37, 38, 42, 70], "junction": [21, 54], "connect": [21, 33, 37], "remot": [21, 54], "server": 21, "mode": [21, 69], "client": 21, "cirq": 23, "interoper": [23, 26, 27, 32, 33, 37, 46, 70], "translat": [23, 31, 32, 33, 37, 54], "contribut": 25, "how": 25, "instal": [26, 29], "prerequisit": 26, "compat": 26, "packag": [26, 38, 42, 43, 44], "avail": 27, "binder": 27, "licens": 28, "proprietari": 28, "part": 28, "open": 28, "maco": 29, "openqasm": 31, "projectq": 32, "pyquil": 33, "pyquilqpu": 33, "clinalg": 34, "c": 34, "algebra": [34, 35], "process": [34, 35], "unit": [34, 35], "low": [34, 61, 62], "statevector": 34, "pybind": 34, "pylinalg": 35, "intern": 35, "simulated_ann": 36, "qiskit": 37, "backend": 37, "releas": 38, "note": 38, "what": 38, "": 38, "new": [38, 39, 40, 41, 42, 53], "1": 38, "7": 38, "3": 38, "fix": [38, 40, 41, 42, 43, 44], "depend": [38, 42, 43, 44], "2": 38, "deprec": [38, 43], "warn": [38, 43], "A": [38, 42, 69], "fermion": [38, 42, 46, 56, 57, 58, 61], "featur": [38, 39, 40, 41, 42], "updat": [38, 40, 41, 42, 59], "6": 38, "0": 38, "5": 38, "4": 38, "power": [38, 39], "access": [38, 39], "known": [38, 39], "support": 45, "tutori": 46, "run": [46, 50, 68], "digit": [46, 56, 61, 70], "spin": [46, 56, 58, 61], "system": [46, 56, 61], "lang": [46, 62], "none": 46, "ad": 46, "design": 46, "qlm": [46, 61], "first": 46, "step": 46, "introduct": 46, "observablesplitt": 47, "turn": 47, "sampl": [47, 69], "adapt": 48, "vqe": [48, 57], "iter": 48, "effici": [48, 61], "ansatz": [48, 57, 61, 65], "gradientdescentoptim": 49, "natur": 49, "gradient": 49, "descent": 49, "multiplelaunchesanalyz": 50, "sever": [50, 68], "keep": 50, "best": 50, "one": [50, 58, 69], "seqoptim": 51, "sequenti": 51, "zeronoiseextrapol": 52, "zero": 52, "nois": 52, "extrapol": 52, "multiqubit": 52, "mitig": 52, "regist": 53, "nativ": 53, "control": 53, "dagger": 53, "defin": [53, 58], "parametr": 53, "abstract": [53, 54], "routin": [53, 63], "oper": [53, 58], "librairi": 53, "export": 53, "more": 53, "core": [54, 70], "data": 54, "structur": [54, 62], "class": [54, 61, 62], "manipul": [54, 62, 65], "tempor": 54, "composit": 54, "parallel": 54, "rescal": 54, "analog": 54, "hardwar": [54, 61, 66], "specif": 54, "signatur": 54, "variabl": [54, 68], "variou": 54, "method": [54, 58], "devic": [55, 70], "librari": [55, 62, 70], "predefin": 55, "tabl": [57, 61], "content": [57, 61], "eigensolv": 57, "chemistri": 57, "molecularhamiltonian": [57, 61], "moleculeinfo": [57, 61], "estim": [57, 61], "trotter": 57, "subspac": [57, 61], "expans": [57, 61], "hamiltonian": [58, 61], "two": 58, "electron": 58, "integr": 58, "get_matrix": 58, "represent": [58, 65], "some": 58, "constructor": 58, "changelog": 59, "miscellan": 59, "spinhamiltonian": 61, "fermionhamiltonian": 61, "electronicstructurehamiltonian": 61, "atom": 61, "molecular": 61, "studi": 61, "common": 61, "mani": 61, "bodi": 61, "hubbard": 61, "model": 61, "singl": 61, "impur": 61, "anderson": 61, "transform": 61, "jordan": 61, "wigner": 61, "bravyi": 61, "kitaev": 61, "pariti": 61, "basi": 61, "depth": 61, "ldca": 61, "multi": 61, "refer": [61, 64], "mr": 61, "excit": 61, "preserv": 61, "mrep": 61, "8": 61, "paramet": [61, 68], "compress": 61, "onli": [61, 69], "user": 61, "unitari": 61, "coupl": 61, "cluster": 61, "ucc": 61, "util": [61, 62], "bit": 62, "formula": 62, "linker": 62, "qft": 63, "base": 63, "overview": 63, "carri": 63, "agnost": 63, "state": [64, 69], "prepar": 64, "qram": 64, "opt": 65, "encod": 65, "declar": 65, "quadrat": 65, "qubo": 65, "Ising": 65, "quameleonplugin": 66, "emul": 66, "constraint": 66, "via": 66, "remap": 67, "unus": 67, "remov": 67, "bind": 68, "differenti": 68, "test": 68, "initi": 68, "describ": 69, "full": 69, "bell": 69, "infinit": 69, "shot": 69, "all": 69, "finit": 69, "further": 69, "applic": 70, "toolchain": 70, "framework": 70}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Advanced combinatorial optimization": [[0, "advanced-combinatorial-optimization"]], "NP-hard problems": [[0, "np-hard-problems"]], "Unconstrained Graph Problems": [[0, "unconstrained-graph-problems"], [65, "unconstrained-graph-problems"]], "Max cut": [[0, "max-cut"]], "Graph Partitioning": [[0, "graph-partitioning"]], "Constrained Graph Problems": [[0, "constrained-graph-problems"], [65, "constrained-graph-problems"]], "Graph Colouring": [[0, "graph-colouring"], [0, "id3"]], "K-Clique": [[0, "k-clique"], [0, "id4"]], "Vertex Cover": [[0, "vertex-cover"], [0, "id5"]], "Other problems": [[0, "other-problems"], [65, "other-problems"]], "Number Partitioning": [[0, "number-partitioning"], [0, "id7"]], "Binary Integer Linear Programming": [[0, "binary-integer-linear-programming"]], "Simulated Quantum Annealing Benchmarking and Performance": [[0, "simulated-quantum-annealing-benchmarking-and-performance"]], "Max Cut": [[0, "id2"]], "Interfacing with DWAVE": [[0, "interfacing-with-dwave"]], "Advanced programming using pyAQASM": [[1, "advanced-programming-using-pyaqasm"]], "AbstractGates, circuit and matrix implementation": [[1, "abstractgates-circuit-and-matrix-implementation"]], "Matrix definition": [[1, "matrix-definition"]], "Subcircuit definition": [[1, "subcircuit-definition"]], "Arity generator": [[1, "arity-generator"]], "Lifting Python functions into quantum gates": [[1, "lifting-python-functions-into-quantum-gates"]], "Linking at circuit extraction": [[1, "linking-at-circuit-extraction"]], "Compute/uncompute scopes": [[1, "compute-uncompute-scopes"]], "Automated ancillae management": [[1, "automated-ancillae-management"]], "Oracles and quantum types": [[1, "oracles-and-quantum-types"]], "Quantum booleans, quantum conditionals, and quantum oracles": [[1, "quantum-booleans-quantum-conditionals-and-quantum-oracles"]], "Allocation": [[1, "allocation"], [1, "id1"]], "Logical expressions": [[1, "logical-expressions"]], "Evaluating expressions": [[1, "evaluating-expressions"]], "Quantum conditionals and with statements": [[1, "quantum-conditionals-and-with-statements"]], "Building phase oracles": [[1, "building-phase-oracles"]], "Quantum integers": [[1, "quantum-integers"], [62, "quantum-integers"]], "Setting a classical value": [[1, "setting-a-classical-value"]], "Arithmetic expressions": [[1, "arithmetic-expressions"]], "Conditionals on quantum integers": [[1, "conditionals-on-quantum-integers"]], "Example: Grover oracle for graph coloring": [[1, "example-grover-oracle-for-graph-coloring"]], "The AQASM format": [[2, "the-aqasm-format"]], "The text format": [[2, "the-text-format"]], "Header": [[2, "header"]], "Instructions": [[2, "instructions"]], "List of gates": [[2, "list-of-gates"]], "Compiling .aqasm files": [[2, "compiling-aqasm-files"]], "Compilation time linking": [[2, "compilation-time-linking"]], "Building advanced computation stacks": [[3, "building-advanced-computation-stacks"]], "The high-level wrapper": [[4, "the-high-level-wrapper"], [19, "the-high-level-wrapper"]], "Qubits and cbits": [[4, "qubits-and-cbits"], [19, "qubits-and-cbits"]], "Instruction list": [[4, "instruction-list"], [19, "instruction-list"]], "Quantum gates and gate dictionary": [[4, "quantum-gates-and-gate-dictionary"], [19, "quantum-gates-and-gate-dictionary"]], "CircuitInliner : inlining circuit inside a stack": [[5, "module-qat.lang.linking.plugin"]], "Combinatorial Optimization Generators tools": [[6, "combinatorial-optimization-generators-tools"]], "K-Clique result": [[6, "k-clique-result"]], "Vertex cover result": [[6, "vertex-cover-result"]], "Combinatorial optimization": [[7, "combinatorial-optimization"]], "Formulating combinatorial problems": [[7, "formulating-combinatorial-problems"]], "Solving combinatorial problems": [[7, "solving-combinatorial-problems"]], "Bibliography": [[7, "bibliography"]], "Quantum Annealing (QA)": [[8, "quantum-annealing-qa"]], "Quantum Approximate Optimization Algorithm (QAOA)": [[9, "quantum-approximate-optimization-algorithm-qaoa"]], "Simulated annealing (SA)": [[10, "simulated-annealing-sa"]], "Simulated Quantum Annealing (SQA)": [[11, "simulated-quantum-annealing-sqa"]], "Command-line tools": [[12, "command-line-tools"]], "Compiler": [[12, "compiler"]], "aqasm2circ": [[12, "aqasm2circ"]], "circ2aqasm": [[12, "circ2aqasm"]], "Simulation / Execution commands": [[12, "simulation-execution-commands"]], "qat-jobrun and qat-batchrun": [[12, "qat-jobrun-and-qat-batchrun"]], "qat-resprint": [[12, "qat-resprint"]], "qat-circstat": [[12, "qat-circstat"]], "CostFunctionPlugin: variational optimization without observable": [[13, "costfunctionplugin-variational-optimization-without-observable"]], "Display : a console displayer plugin": [[14, "module-qat.core.console"]], "Getting started": [[15, "getting-started"]], "Graph Colouring Generator": [[16, "graph-colouring-generator"]], "QAOA job generation": [[16, "qaoa-job-generation"], [17, "qaoa-job-generation"], [20, "qaoa-job-generation"], [22, "qaoa-job-generation"], [72, "qaoa-job-generation"]], "Annealing job generation": [[16, "annealing-job-generation"], [17, "annealing-job-generation"], [20, "annealing-job-generation"], [22, "annealing-job-generation"], [72, "annealing-job-generation"]], "Scheduling job generation": [[16, "scheduling-job-generation"], [17, "scheduling-job-generation"], [20, "scheduling-job-generation"], [22, "scheduling-job-generation"], [72, "scheduling-job-generation"]], "Graph Partitioning Generator": [[17, "graph-partitioning-generator"]], "Welcome to the myQLM documentation": [[18, "welcome-to-the-myqlm-documentation"]], "Basic usage": [[18, null], [58, "basic-usage"]], "Notebooks": [[18, null], [30, "notebooks"]], "Advanced usage": [[18, null], [57, "advanced-usage"]], "Source code documentation": [[18, null], [23, "source-code-documentation"], [31, "source-code-documentation"], [32, "source-code-documentation"], [33, "source-code-documentation"], [37, "source-code-documentation"], [70, "module-qat"]], "Additional information": [[18, null]], "Main objects: Jobs, Observables, Circuits\u2026": [[19, "main-objects-jobs-observables-circuits"]], "Job and Batch": [[19, "job-and-batch"]], "Observables": [[19, "observables"], [54, "observables"]], "Results": [[19, "results"], [54, "results"]], "Circuits": [[19, "circuits"], [54, "circuits"]], "Exceptions": [[19, "exceptions"], [62, "exceptions"]], "KClique Generator": [[20, "kclique-generator"]], "Building custom execution stacks": [[21, "building-custom-execution-stacks"]], "Plugins & information flow": [[21, "plugins-information-flow"]], "Writing your own QPU": [[21, "writing-your-own-qpu"]], "Writing your own plugin": [[21, "writing-your-own-plugin"]], "Building expressive stacks using Junctions": [[21, "building-expressive-stacks-using-junctions"]], "Connecting to a remote Plugin": [[21, "connecting-to-a-remote-plugin"]], "Server mode": [[21, "server-mode"], [21, "id1"]], "Client mode": [[21, "client-mode"], [21, "id2"]], "Connecting to a remote QPU": [[21, "connecting-to-a-remote-qpu"]], "Max Cut Generator": [[22, "max-cut-generator"]], "Cirq interoperability": [[23, "cirq-interoperability"]], "Translating quantum circuits": [[23, "module-qat.interop.cirq.converters"], [31, "translating-quantum-circuits"], [32, "module-qat.interop.projectq.converters"], [33, "module-qat.interop.pyquil.converters"], [37, "module-qat.interop.qiskit.converters"]], "Circuit translation": [[23, "circuit-translation"], [33, "circuit-translation"], [37, "circuit-translation"]], "Contributing to myQLM": [[25, "contributing-to-myqlm"]], "How to contribute?": [[25, "how-to-contribute"]], "Installing myQLM": [[26, "installing-myqlm"]], "Prerequisites": [[26, "prerequisites"]], "Compatibility Matrix": [[26, "compatibility-matrix"]], "Install": [[26, "id8"]], "Install myQLM package": [[26, "install-myqlm-package"]], "Interoperability": [[26, "interoperability"]], "Interoperability with myQLM": [[27, "interoperability-with-myqlm"]], "Available binders": [[27, null]], "myQLM license": [[28, "myqlm-license"]], "Proprietary part": [[28, "proprietary-part"]], "Open source part": [[28, "open-source-part"]], "myQLM Installation on MacOS": [[29, "myqlm-installation-on-macos"]], "OpenQASM Compiler": [[31, "openqasm-compiler"]], "ProjectQ interoperability": [[32, "projectq-interoperability"]], "PyQuil interoperability": [[33, "pyquil-interoperability"]], "Connecting to a QPU": [[33, "module-qat.interop.pyquil.providers"]], "PyquilQPU": [[33, "pyquilqpu"]], "qat.clinalg: C++ Linear-algebra simulator": [[34, "qat-clinalg-c-linear-algebra-simulator"]], "High-level Quantum Processing Unit": [[34, "high-level-quantum-processing-unit"]], "C++ Low-level Statevector": [[34, "c-low-level-statevector"]], "Pybind interface": [[34, "pybind-interface"]], "qat.pylinalg: Python Linear-algebra simulator": [[35, "qat-pylinalg-python-linear-algebra-simulator"]], "Quantum Processing Unit": [[35, "quantum-processing-unit"]], "Simulator Internal Functions": [[35, "simulator-internal-functions"]], "qat.simulated_annealing: Simulated Annealing": [[36, "qat-simulated-annealing-simulated-annealing"]], "Qiskit interoperability": [[37, "qiskit-interoperability"]], "Connecting to a QPU/Backend": [[37, "connecting-to-a-qpu-backend"]], "Using a Qiskit QPU in myQLM": [[37, "using-a-qiskit-qpu-in-myqlm"]], "Using a myQLM QPU in Qiskit": [[37, "using-a-myqlm-qpu-in-qiskit"]], "Release notes": [[38, "release-notes"]], "What\u2019s new in myQLM 1.7.3": [[38, "what-s-new-in-myqlm-1-7-3"]], "Main Fixes": [[38, "main-fixes"], [38, "id1"], [43, "main-fixes"], [44, "main-fixes"]], "Dependant Packages": [[38, "dependant-packages"], [38, "id2"], [38, "id4"], [42, "dependant-packages"], [43, "dependant-packages"], [44, "dependant-packages"]], "Other Packages": [[38, "other-packages"], [38, "id3"], [38, "id5"], [42, "other-packages"], [43, "other-packages"], [44, "other-packages"]], "What\u2019s new in myQLM 1.7.2": [[38, "what-s-new-in-myqlm-1-7-2"]], "Deprecation warnings": [[38, "deprecation-warnings"], [43, "deprecation-warnings"]], "What\u2019s new in myQLM 1.7.1": [[38, "what-s-new-in-myqlm-1-7-1"]], "A new simulated QPU in myQLM": [[38, "a-new-simulated-qpu-in-myqlm"], [42, "a-new-simulated-qpu-in-myqlm"]], "Tools for fermionic computations (myQLM-fermion)": [[38, "tools-for-fermionic-computations-myqlm-fermion"], [42, "tools-for-fermionic-computations-myqlm-fermion"]], "Batch generators in myQLM": [[38, "batch-generators-in-myqlm"], [42, "batch-generators-in-myqlm"]], "New features": [[38, "new-features"], [38, "id6"], [38, "id9"], [38, "id12"], [39, "new-features"], [40, "new-features"], [41, "new-features"], [42, "new-features"]], "Updated features": [[38, "updated-features"], [38, "id7"], [38, "id10"], [40, "updated-features"], [41, "updated-features"], [42, "updated-features"]], "Fixes": [[38, "fixes"], [38, "id8"], [38, "id11"], [40, "fixes"], [41, "fixes"], [42, "fixes"]], "What\u2019s new in myQLM 1.6.0": [[38, "what-s-new-in-myqlm-1-6-0"]], "What\u2019s new in myQLM 1.5.1": [[38, "what-s-new-in-myqlm-1-5-1"]], "What\u2019s new in myQLM 1.4.0": [[38, "what-s-new-in-myqlm-1-4-0"]], "myQLM Power Access": [[38, "myqlm-power-access"], [39, "myqlm-power-access"]], "Known problems": [[38, "known-problems"], [39, "known-problems"]], "Support": [[45, "support"]], "List of notebooks": [[46, "list-of-notebooks"]], "Tutorials": [[46, "tutorials"]], "Running digital quantum simulations for spin and fermionic systems": [[46, "running-digital-quantum-simulations-for-spin-and-fermionic-systems"]], "Programming with qat.lang": [[46, "programming-with-qat-lang"]], "None": [[46, "none"]], "Adding plugins to your computation stack": [[46, "adding-plugins-to-your-computation-stack"]], "Designing and running variational algorithms in the QLM": [[46, "designing-and-running-variational-algorithms-in-the-qlm"]], "First steps with the QLM": [[46, "first-steps-with-the-qlm"]], "Combinatorial Optimization Problems": [[46, "combinatorial-optimization-problems"]], "interoperability": [[46, "interoperability"]], "Simulation of quantum circuits on the QLM: introduction": [[46, "simulation-of-quantum-circuits-on-the-qlm-introduction"]], "ObservableSplitter : turning observable sampling into qubit sampling": [[47, "module-qat.plugins.observable_splitter"]], "ADAPT-VQE: building iteratively efficient ansatze": [[48, "adapt-vqe-building-iteratively-efficient-ansatze"]], "GradientDescentOptimizer: Natural gradient descent optimizer": [[49, "gradientdescentoptimizer-natural-gradient-descent-optimizer"]], "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one": [[50, "multiplelaunchesanalyzer-running-several-optimizations-and-keeping-the-best-one"]], "SeqOptim: optimizing circuits with the sequential optimization algorithm": [[51, "seqoptim-optimizing-circuits-with-the-sequential-optimization-algorithm"]], "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation": [[52, "zeronoiseextrapolator-zero-noise-extrapolation-for-multiqubit-noise-mitigation"]], "Writing quantum circuits": [[53, "writing-quantum-circuits"]], "Allocating qubit and classical registers:": [[53, "allocating-qubit-and-classical-registers"]], "Quantum gates": [[53, "quantum-gates"]], "Native gates, controls and daggers": [[53, "native-gates-controls-and-daggers"]], "Defining new parametrized gates: Abstract Gates": [[53, "defining-new-parametrized-gates-abstract-gates"]], "Custom gates": [[53, "custom-gates"]], "Quantum routines": [[53, "quantum-routines"]], "Other operations": [[53, "other-operations"]], "Quantum routine librairies": [[53, "quantum-routine-librairies"]], "Generating the circuit": [[53, "generating-the-circuit"]], "Exporting the circuit": [[53, "exporting-the-circuit"]], "More advanced usage": [[53, "more-advanced-usage"]], "qat-core: Core data structures and Abstract classes": [[54, "qat-core-core-data-structures-and-abstract-classes"]], "Abstract classes": [[54, "abstract-classes"]], "Remote interfaces": [[54, "remote-interfaces"]], "Batch and Job": [[54, "batch-and-job"]], "Schedules": [[54, "schedules"]], "Building schedules": [[54, "building-schedules"]], "Manipulating schedules": [[54, "manipulating-schedules"]], "Temporal composition": [[54, "temporal-composition"]], "Parallel composition": [[54, "parallel-composition"]], "Rescaling a schedule": [[54, "rescaling-a-schedule"]], "Time translation of a schedule": [[54, "time-translation-of-a-schedule"]], "Analog Jobs": [[54, "analog-jobs"]], "Displaying circuits": [[54, "displaying-circuits"]], "Hardware specifications": [[54, "hardware-specifications"]], "Gate set and gate signatures": [[54, "gate-set-and-gate-signatures"]], "Variables and expressions": [[54, "variables-and-expressions"]], "Various methods and tools": [[54, "various-methods-and-tools"]], "Plugins & Junctions": [[54, "plugins-junctions"]], "qat.devices: The device library": [[55, "module-qat.devices"]], "Predefined devices": [[55, "predefined-devices"]], "Device generators": [[55, "device-generators"]], "Digital quantum simulation for spin and fermionic systems": [[56, "digital-quantum-simulation-for-spin-and-fermionic-systems"], [61, "digital-quantum-simulation-for-spin-and-fermionic-systems"]], "Table of Contents": [[57, "table-of-contents"], [61, "table-of-contents"]], "Variational Quantum Eigensolver (VQE)": [[57, "variational-quantum-eigensolver-vqe"]], "Quantum Chemistry tools for VQE": [[57, "quantum-chemistry-tools-for-vqe"]], "MolecularHamiltonian": [[57, "molecularhamiltonian"], [61, "molecularhamiltonian"]], "MoleculeInfo": [[57, "moleculeinfo"], [61, "moleculeinfo"]], "Fermionic ansatz circuits": [[57, "fermionic-ansatz-circuits"], [61, "fermionic-ansatz-circuits"]], "Quantum phase estimation": [[57, "quantum-phase-estimation"], [61, "quantum-phase-estimation"]], "Trotterization tools": [[57, "trotterization-tools"]], "Quantum subspace expansion": [[57, "quantum-subspace-expansion"], [61, "quantum-subspace-expansion"]], "Defining a Hamiltonian": [[58, "defining-a-hamiltonian"]], "Spin Hamiltonians": [[58, "spin-hamiltonians"]], "Fermionic Hamiltonians": [[58, "fermionic-hamiltonians"]], "Fermionic Hamiltonian using one and two-electrons integrals": [[58, "fermionic-hamiltonian-using-one-and-two-electrons-integrals"]], "The get_matrix() method": [[58, "the-get-matrix-method"]], "Fermionic to spin representation": [[58, "fermionic-to-spin-representation"]], "Spin and fermionic Hamiltonian operations": [[58, "spin-and-fermionic-hamiltonian-operations"]], "Some Hamiltonian constructors": [[58, "some-hamiltonian-constructors"]], "Changelog": [[59, "changelog"]], "Main updates": [[59, "main-updates"]], "Miscellanous": [[59, "miscellanous"]], "Plugins": [[60, "plugins"], [61, "plugins"], [70, "plugins"]], "The Hamiltonians classes": [[61, "the-hamiltonians-classes"]], "SpinHamiltonian": [[61, "spinhamiltonian"]], "FermionHamiltonian": [[61, "fermionhamiltonian"]], "ElectronicStructureHamiltonian": [[61, "electronicstructurehamiltonian"]], "Atomic and molecular studies study": [[61, "atomic-and-molecular-studies-study"]], "Common many-body Hamiltonians": [[61, "common-many-body-hamiltonians"]], "The Hubbard model": [[61, "the-hubbard-model"]], "The single-impurity Anderson Model": [[61, "the-single-impurity-anderson-model"]], "The generalized impurity Hamiltonian": [[61, "the-generalized-impurity-hamiltonian"]], "The spin-fermion transforms": [[61, "the-spin-fermion-transforms"]], "Jordan-Wigner transform": [[61, "jordan-wigner-transform"]], "Bravyi-Kitaev transform": [[61, "bravyi-kitaev-transform"]], "Parity basis transform": [[61, "parity-basis-transform"]], "Low-Depth Circuit Ansatz (LDCA)": [[61, "low-depth-circuit-ansatz-ldca"]], "Multi-Reference (MR) ansatz": [[61, "multi-reference-mr-ansatz"]], "Multi-Reference, Excitation-Preserving (MREP) ansatz": [[61, "multi-reference-excitation-preserving-mrep-ansatz"]], "General hardware-efficient ansatz": [[61, "general-hardware-efficient-ansatz"]], "The 8-parameter circuit ansatz": [[61, "the-8-parameter-circuit-ansatz"]], "Compressed LDCA ansatz (only for QLM users)": [[61, "compressed-ldca-ansatz-only-for-qlm-users"]], "Unitary Coupled-Cluster (UCC)": [[61, "unitary-coupled-cluster-ucc"]], "Utility functions": [[61, "utility-functions"]], "qat.lang : Programming tools": [[62, "qat-lang-programming-tools"]], "The Program class": [[62, "the-program-class"]], "Gate structures": [[62, "gate-structures"]], "Quantum Types": [[62, "quantum-types"]], "Quantum boolean and expressions": [[62, "quantum-boolean-and-expressions"]], "Other structures": [[62, "other-structures"]], "Classical bits and Boolean formulae": [[62, "classical-bits-and-boolean-formulae"]], "Utilities": [[62, "module-qat.lang.AQASM.util"]], "Gate set management and generation": [[62, "module-qat.lang.AQASM.misc"]], "Quantum libraries": [[62, "quantum-libraries"]], "Linker and low level circuit manipulation": [[62, "linker-and-low-level-circuit-manipulation"]], "Basic algorithms": [[62, "basic-algorithms"]], "Arithmetic routines": [[63, "arithmetic-routines"]], "QFT-based arithmetic": [[63, "module-qat.lang.AQASM.qftarith"]], "Overview": [[63, "overview"]], "Carry-based arithmetic": [[63, "module-qat.lang.AQASM.classarith"]], "Agnostic/High-level arithmetic": [[63, "module-qat.lang.AQASM.arithmetic"]], "State preparation and QRAM circuits": [[64, "state-preparation-and-qram-circuits"]], "References": [[64, "references"]], "qat-opt: representation and encoding of combinatorial problems, QAOA": [[65, "qat-opt-representation-and-encoding-of-combinatorial-problems-qaoa"]], "Declaring and manipulating combinatorial problems": [[65, "declaring-and-manipulating-combinatorial-problems"]], "Generic combinatorial optimization": [[65, "generic-combinatorial-optimization"]], "Quadratic problems: QUBO and Ising": [[65, "quadratic-problems-qubo-and-ising"]], "Generating the QAOA Ansatz": [[65, "generating-the-qaoa-ansatz"]], "Generating QA jobs": [[65, "generating-qa-jobs"]], "Encoding NP-hard Problems": [[65, "encoding-np-hard-problems"]], "QuameleonPlugin : emulating hardware constraints via a plugin": [[66, "module-qat.core.quameleon"]], "Remap: unused qubits remover": [[67, "remap-unused-qubits-remover"]], "Running variational algorithms": [[68, "running-variational-algorithms"], [68, "id1"]], "Variational jobs": [[68, "variational-jobs"]], "Binding variables": [[68, "binding-variables"]], "Differentiating jobs": [[68, "differentiating-jobs"]], "Testing for several initializations of the parameters": [[68, "testing-for-several-initializations-of-the-parameters"]], "Executing quantum circuits": [[69, "executing-quantum-circuits"]], "Describing a quantum job": [[69, "describing-a-quantum-job"]], "A full example on the Bell state circuit": [[69, "a-full-example-on-the-bell-state-circuit"]], "SAMPLE mode": [[69, "sample-mode"]], "Infinite number of shots, all qubits": [[69, "infinite-number-of-shots-all-qubits"]], "Finite number of shots, all qubits": [[69, "finite-number-of-shots-all-qubits"]], "Infinite number of shots, only one qubit": [[69, "infinite-number-of-shots-only-one-qubit"]], "OBSERVABLE mode": [[69, "observable-mode"]], "Infinite number of shots": [[69, "infinite-number-of-shots"]], "Finite number of shots": [[69, "finite-number-of-shots"]], "Further information": [[69, "further-information"]], "Quantum Application ToolChain (QAT) Python libraries": [[70, "quantum-application-toolchain-qat-python-libraries"]], "The core library": [[70, "the-core-library"]], "The programming library": [[70, "the-programming-library"]], "The device library": [[70, "the-device-library"]], "Generators": [[70, "generators"]], "QPUs": [[70, "qpus"]], "Interoperability with other frameworks": [[70, "interoperability-with-other-frameworks"]], "Digital quantum simulation tools": [[70, "digital-quantum-simulation-tools"]], "Combinatorial optimization and QAOA": [[70, "combinatorial-optimization-and-qaoa"]], "Plugins for variational algorithms": [[71, "plugins-for-variational-algorithms"]], "Vertex Cover Generator": [[72, "vertex-cover-generator"]]}, "indexentries": {"module": [[0, "module-qat.opt.generators"], [5, "module-qat.lang.linking.plugin"], [14, "module-qat.core.console"], [23, "module-qat.interop.cirq.converters"], [32, "module-qat.interop.projectq.converters"], [33, "module-qat.interop.pyquil.converters"], [33, "module-qat.interop.pyquil.providers"], [34, "module-qat.clinalg"], [35, "module-qat.pylinalg"], [35, "module-qat.pylinalg.simulator"], [36, "module-qat.simulated_annealing"], [37, "module-qat.interop.qiskit.converters"], [37, "module-qat.interop.qiskit.providers"], [37, "module-qat.interop.qiskit.runtime"], [47, "module-qat.plugins.observable_splitter"], [48, "module-qat.plugins.MultipleLaunchesAnalyzer"], [49, "module-qat.plugins.GradientDescentOptimizer"], [50, "module-qat.plugins.MultipleLaunchesAnalyzer"], [51, "module-qat.plugins.SeqOptim"], [52, "module-qat.plugins.ZeroNoiseExtrapolator"], [54, "module-qat.core"], [54, "module-qat.core.wrappers.observable"], [55, "module-qat.devices"], [56, "module-qat.fermion"], [62, "module-qat.lang"], [62, "module-qat.lang.AQASM.misc"], [62, "module-qat.lang.AQASM.util"], [63, "module-qat.lang.AQASM"], [63, "module-qat.lang.AQASM.arithmetic"], [63, "module-qat.lang.AQASM.classarith"], [63, "module-qat.lang.AQASM.qftarith"], [66, "module-qat.core.quameleon"], [70, "module-qat"]], "qat.opt.generators": [[0, "module-qat.opt.generators"]], "op (class in qat.comm.datamodel.ttypes)": [[4, "qat.comm.datamodel.ttypes.Op"], [19, "qat.comm.datamodel.ttypes.Op"]], "qat.comm.datamodel.ttypes.gatedefinition (built-in class)": [[4, "qat.comm.datamodel.ttypes.GateDefinition"], [19, "qat.comm.datamodel.ttypes.GateDefinition"]], "circuitinliner (class in qat.lang.linking.plugin)": [[5, "qat.lang.linking.plugin.CircuitInliner"]], "addargs() (qat.lang.linking.plugin.circuitinliner class method)": [[5, "qat.lang.linking.plugin.CircuitInliner.addargs"]], "compile() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.compile"]], "do_post_processing() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.do_post_processing"]], "post_process() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.post_process"]], "qat.lang.linking.plugin": [[5, "module-qat.lang.linking.plugin"]], "graphpartitioningresult (class in qat.opt.results)": [[6, "qat.opt.results.GraphPartitioningResult"]], "kcliqueresult (class in qat.opt.results)": [[6, "qat.opt.results.KCliqueResult"]], "vertexcoverresult (class in qat.opt.results)": [[6, "qat.opt.results.VertexCoverResult"]], "clique (qat.opt.results.kcliqueresult property)": [[6, "qat.opt.results.KCliqueResult.clique"]], "cover (qat.opt.results.vertexcoverresult property)": [[6, "qat.opt.results.VertexCoverResult.cover"]], "display() (qat.opt.results.graphpartitioningresult method)": [[6, "qat.opt.results.GraphPartitioningResult.display"]], "costfunctionplugin (class in qat.plugins)": [[13, "qat.plugins.CostFunctionPlugin"]], "display (class in qat.core.console)": [[14, "qat.core.console.Display"]], "compile() (qat.core.console.display method)": [[14, "qat.core.console.Display.compile"]], "do_post_processing() (qat.core.console.display method)": [[14, "qat.core.console.Display.do_post_processing"]], "post_process() (qat.core.console.display method)": [[14, "qat.core.console.Display.post_process"]], "qat.core.console": [[14, "module-qat.core.console"]], "graphcolouringgenerator (class in qat.opt.generators)": [[16, "qat.opt.generators.GraphColouringGenerator"]], "generate() (qat.opt.generators.graphcolouringgenerator method)": [[16, "qat.opt.generators.GraphColouringGenerator.generate"]], "graphpartitioninggenerator (class in qat.opt.generators)": [[17, "qat.opt.generators.GraphPartitioningGenerator"]], "generate() (qat.opt.generators.graphpartitioninggenerator method)": [[17, "qat.opt.generators.GraphPartitioningGenerator.generate"]], "qat.comm.exceptions.ttypes.errortype (built-in class)": [[19, "qat.comm.exceptions.ttypes.ErrorType"]], "qat.comm.exceptions.ttypes.pluginexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.PluginException"]], "qat.comm.exceptions.ttypes.qpuexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.QPUException"]], "kcliquegenerator (class in qat.opt.generators)": [[20, "qat.opt.generators.KCliqueGenerator"]], "generate() (qat.opt.generators.kcliquegenerator method)": [[20, "qat.opt.generators.KCliqueGenerator.generate"]], "maxcutgenerator (class in qat.opt.generators)": [[22, "qat.opt.generators.MaxCutGenerator"]], "generate() (qat.opt.generators.maxcutgenerator method)": [[22, "qat.opt.generators.MaxCutGenerator.generate"]], "cirq_to_qlm() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.cirq_to_qlm"]], "qat.interop.cirq.converters": [[23, "module-qat.interop.cirq.converters"]], "qlm_to_cirq() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.qlm_to_cirq"]], "oqasmparser (class in qat.interop.openqasm)": [[31, "qat.interop.openqasm.OqasmParser"]], "compile() (qat.interop.openqasm.oqasmparser method)": [[31, "qat.interop.openqasm.OqasmParser.compile"]], "aqasmengine (class in qat.interop.projectq)": [[32, "qat.interop.projectq.AqasmEngine"]], "aqasmprinter (class in qat.interop.projectq)": [[32, "qat.interop.projectq.AqasmPrinter"]], "projectq_to_qlm() (qat.interop.projectq.aqasmengine method)": [[32, "qat.interop.projectq.AqasmEngine.projectq_to_qlm"]], "qat.interop.projectq.converters": [[32, "module-qat.interop.projectq.converters"]], "pyquilqpu (class in qat.interop.pyquil)": [[33, "qat.interop.pyquil.PyquilQPU"]], "pyquil_to_qlm() (in module qat.interop.pyquil)": [[33, "qat.interop.pyquil.pyquil_to_qlm"]], "qat.interop.pyquil.converters": [[33, "module-qat.interop.pyquil.converters"]], "qat.interop.pyquil.providers": [[33, "module-qat.interop.pyquil.providers"]], "qlm_to_pyquil() (in module qat.interop.pyquil)": [[33, "qat.interop.pyquil.qlm_to_pyquil"]], "set_qpu() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.set_qpu"]], "submit() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.submit"]], "submit_job() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.submit_job"]], "clinalg (class in qat.clinalg)": [[34, "qat.clinalg.CLinalg"]], "clinalgstatevectorcpudouble (class in qat.clinalg.wrapper)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble"]], "apply_1qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_ctrl_gate"]], "apply_1qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_gate"]], "apply_2qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_ctrl_gate"]], "apply_2qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_gate"]], "apply_ccnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CCNOT"]], "apply_cnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CNOT"]], "apply_csign() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CSIGN"]], "apply_h() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_H"]], "apply_iswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_ISWAP"]], "apply_ph() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_PH"]], "apply_rx() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RX"]], "apply_ry() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RY"]], "apply_rz() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RZ"]], "apply_s() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_S"]], "apply_sqrtswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SQRTSWAP"]], "apply_swap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SWAP"]], "apply_t() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_T"]], "apply_x() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_X"]], "apply_y() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Y"]], "apply_z() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Z"]], "apply_nqbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_ctrl_gate"]], "apply_nqbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_gate"]], "array (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array"]], "array_readonly (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array_readonly"]], "expectation_value() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.expectation_value"]], "get_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_distribution"]], "get_mapped_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_distribution"]], "get_mapped_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_statevector"]], "get_permuted_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_permuted_statevector"]], "print() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.print"]], "project() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.project"]], "project_then_reset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.project_then_reset"]], "qat.clinalg": [[34, "module-qat.clinalg"]], "reset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.reset"]], "resize() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.resize"]], "sample() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample"]], "sample_subset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample_subset"]], "set_num_threads() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.set_num_threads"]], "simulate_circuit() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.simulate_circuit"]], "state_probability() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.state_probability"]], "submit() (qat.clinalg.clinalg method)": [[34, "qat.clinalg.CLinalg.submit"]], "pylinalg (class in qat.pylinalg)": [[35, "qat.pylinalg.PyLinalg"]], "mat2nparray() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.mat2nparray"]], "measure() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.measure"]], "project() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.project"]], "qat.pylinalg": [[35, "module-qat.pylinalg"]], "qat.pylinalg.simulator": [[35, "module-qat.pylinalg.simulator"]], "raise_break() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.raise_break"]], "reset() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.reset"]], "serve() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.serve"]], "simulate() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.simulate"]], "submit() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.submit"]], "submit_job() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.submit_job"]], "simulatedannealing (class in qat.simulated_annealing)": [[36, "qat.simulated_annealing.SimulatedAnnealing"]], "extract_j_and_h_from_obs() (in module qat.simulated_annealing.service)": [[36, "qat.simulated_annealing.service.extract_j_and_h_from_obs"]], "integer_to_spins() (in module qat.core.spins)": [[36, "qat.core.spins.integer_to_spins"]], "qat.simulated_annealing": [[36, "module-qat.simulated_annealing"]], "sa() (qat.simulated_annealing.simulatedannealing method)": [[36, "qat.simulated_annealing.SimulatedAnnealing.sa"]], "spins_to_integer() (in module qat.core.spins)": [[36, "qat.core.spins.spins_to_integer"]], "submit_job() (qat.simulated_annealing.simulatedannealing method)": [[36, "qat.simulated_annealing.SimulatedAnnealing.submit_job"]], "asyncbackendtoqpu (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.AsyncBackendToQPU"]], "backendtoqpu (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.BackendToQPU"]], "qputobackend (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.QPUToBackend"]], "qiskitjob (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.QiskitJob"]], "qiskitruntimeqpu (class in qat.interop.qiskit.runtime)": [[37, "qat.interop.qiskit.runtime.QiskitRuntimeQPU"]], "cancel() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.cancel"]], "dump() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.dump"]], "job_id() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.job_id"]], "qat.interop.qiskit.converters": [[37, "module-qat.interop.qiskit.converters"]], "qat.interop.qiskit.providers": [[37, "module-qat.interop.qiskit.providers"]], "qat.interop.qiskit.runtime": [[37, "module-qat.interop.qiskit.runtime"]], "qiskit_to_qlm() (in module qat.interop.qiskit)": [[37, "qat.interop.qiskit.qiskit_to_qlm"]], "qlm_to_qiskit() (in module qat.interop.qiskit)": [[37, "qat.interop.qiskit.qlm_to_qiskit"]], "result() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.result"]], "retrieve_job() (qat.interop.qiskit.asyncbackendtoqpu method)": [[37, "qat.interop.qiskit.AsyncBackendToQPU.retrieve_job"]], "set_qpu() (qat.interop.qiskit.qputobackend method)": [[37, "qat.interop.qiskit.QPUToBackend.set_qpu"]], "status() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.status"]], "submit() (qat.interop.qiskit.asyncbackendtoqpu method)": [[37, "qat.interop.qiskit.AsyncBackendToQPU.submit"]], "submit() (qat.interop.qiskit.backendtoqpu method)": [[37, "qat.interop.qiskit.BackendToQPU.submit"]], "submit() (qat.interop.qiskit.runtime.qiskitruntimeqpu method)": [[37, "qat.interop.qiskit.runtime.QiskitRuntimeQPU.submit"]], "observablesplitter (class in qat.plugins)": [[47, "qat.plugins.ObservableSplitter"]], "addargs() (qat.plugins.observablesplitter class method)": [[47, "qat.plugins.ObservableSplitter.addargs"]], "compile() (qat.plugins.observablesplitter method)": [[47, "qat.plugins.ObservableSplitter.compile"]], "do_post_processing() (qat.plugins.observablesplitter method)": [[47, "qat.plugins.ObservableSplitter.do_post_processing"]], "get_fresh_key() (qat.plugins.observablesplitter method)": [[47, "qat.plugins.ObservableSplitter.get_fresh_key"]], "post_process() (qat.plugins.observablesplitter method)": [[47, "qat.plugins.ObservableSplitter.post_process"]], "qat.plugins.observable_splitter": [[47, "module-qat.plugins.observable_splitter"]], "adaptvqeplugin (class in qat.plugins)": [[48, "qat.plugins.AdaptVQEPlugin"]], "qat.plugins.multiplelaunchesanalyzer": [[48, "module-qat.plugins.MultipleLaunchesAnalyzer"], [50, "module-qat.plugins.MultipleLaunchesAnalyzer"]], "gradientdescentoptimizer (class in qat.plugins)": [[49, "qat.plugins.GradientDescentOptimizer"]], "qat.plugins.gradientdescentoptimizer": [[49, "module-qat.plugins.GradientDescentOptimizer"]], "multiplelaunchesanalyzer (class in qat.plugins)": [[50, "qat.plugins.MultipleLaunchesAnalyzer"]], "qat.plugins.seqoptim": [[51, "module-qat.plugins.SeqOptim"]], "zeronoiseextrapolator (class in qat.plugins)": [[52, "qat.plugins.ZeroNoiseExtrapolator"]], "qat.plugins.zeronoiseextrapolator": [[52, "module-qat.plugins.ZeroNoiseExtrapolator"]], "abstractgenerator (class in qat.core.generator)": [[54, "qat.core.generator.AbstractGenerator"]], "abstractplugin (class in qat.plugins)": [[54, "qat.plugins.AbstractPlugin"]], "application (class in qat.core.application)": [[54, "qat.core.application.Application"]], "arithexpression (class in qat.core.variables)": [[54, "qat.core.variables.ArithExpression"]], "batch (class in qat.core)": [[54, "qat.core.Batch"]], "batchresult (class in qat.core)": [[54, "qat.core.BatchResult"]], "circuit (class in qat.core)": [[54, "qat.core.Circuit"]], "gateset (class in qat.core.gate_set)": [[54, "qat.core.gate_set.GateSet"]], "gatesignature (class in qat.core.gate_set)": [[54, "qat.core.gate_set.GateSignature"]], "gatesyntaxredefinition (class in qat.core.gate_set)": [[54, "qat.core.gate_set.GateSyntaxRedefinition"]], "hardwarespecs (class in qat.core)": [[54, "qat.core.HardwareSpecs"]], "intermediatemeasurement (class in qat.comm.shared.ttypes)": [[54, "qat.comm.shared.ttypes.IntermediateMeasurement"]], "job (class in qat.core)": [[54, "qat.core.Job"]], "junction (class in qat.plugins)": [[54, "qat.plugins.Junction"]], "observable (class in qat.core)": [[54, "qat.core.Observable"]], "optimizer (class in qat.plugins)": [[54, "qat.plugins.Optimizer"]], "processingtype (class in qat.comm.shared.ttypes)": [[54, "qat.comm.shared.ttypes.ProcessingType"]], "qpuhandler (class in qat.core.qpu)": [[54, "qat.core.qpu.QPUHandler"]], "remoteapplication (class in qat.core.application)": [[54, "qat.core.application.RemoteApplication"]], "remotebatchgenerator (class in qat.core.generator)": [[54, "qat.core.generator.RemoteBatchGenerator"]], "remoteplugin (class in qat.core.plugins)": [[54, "qat.core.plugins.RemotePlugin"]], "remoteqpu (class in qat.core.qpu)": [[54, "qat.core.qpu.RemoteQPU"]], "result (class in qat.core)": [[54, "qat.core.Result"]], "sample (class in qat.core.wrappers.result)": [[54, "qat.core.wrappers.result.Sample"]], "schedule (class in qat.core)": [[54, "qat.core.Schedule"]], "state (class in qat.core.wrappers.result)": [[54, "qat.core.wrappers.result.State"]], "symbol (class in qat.core.variables)": [[54, "qat.core.variables.Symbol"]], "term (class in qat.core)": [[54, "qat.core.Term"]], "topology (class in qat.core)": [[54, "qat.core.Topology"]], "topologytype (class in qat.core)": [[54, "qat.core.TopologyType"]], "variable (class in qat.core)": [[54, "qat.core.Variable"]], "add_edge() (qat.core.topology method)": [[54, "qat.core.Topology.add_edge"]], "add_sample() (qat.core.result method)": [[54, "qat.core.Result.add_sample"]], "add_signature() (qat.core.gate_set.gateset method)": [[54, "qat.core.gate_set.GateSet.add_signature"]], "amplitude (qat.core.wrappers.result.sample property)": [[54, "qat.core.wrappers.result.Sample.amplitude"]], "append() (qat.core.batchresult method)": [[54, "qat.core.BatchResult.append"]], "as_graph() (qat.core.hardwarespecs method)": [[54, "qat.core.HardwareSpecs.as_graph"]], "as_quameleon() (qat.core.hardwarespecs method)": [[54, "qat.core.HardwareSpecs.as_quameleon"]], "bind_variable() (qat.core.circuit method)": [[54, "qat.core.Circuit.bind_variable"]], "bind_variables() (qat.core.circuit method)": [[54, "qat.core.Circuit.bind_variables"]], "bitstring (qat.core.wrappers.result.state property)": [[54, "qat.core.wrappers.result.State.bitstring"]], "coeff (qat.core.term attribute)": [[54, "qat.core.Term.coeff"]], "compile() (qat.plugins.abstractplugin method)": [[54, "qat.plugins.AbstractPlugin.compile"]], "constant_coeff (qat.core.observable attribute)": [[54, "qat.core.Observable.constant_coeff"]], "count() (qat.core.circuit method)": [[54, "qat.core.Circuit.count"]], "dag() (qat.core.circuit method)": [[54, "qat.core.Circuit.dag"]], "default_gate_set() (in module qat.core.circuit_builder.matrix_util)": [[54, "qat.core.circuit_builder.matrix_util.default_gate_set"]], "differentiate() (qat.core.job method)": [[54, "qat.core.Job.differentiate"]], "differentiate() (qat.core.variable method)": [[54, "qat.core.Variable.differentiate"]], "differentiate() (qat.core.variables.arithexpression method)": [[54, "qat.core.variables.ArithExpression.differentiate"]], "display() (in module qat.core.console)": [[54, "qat.core.console.display"]], "display() (qat.core.circuit method)": [[54, "qat.core.Circuit.display"]], "do_post_processing() (qat.plugins.abstractplugin method)": [[54, "qat.plugins.AbstractPlugin.do_post_processing"]], "dump() (qat.core.batch method)": [[54, "qat.core.Batch.dump"]], "dump() (qat.core.batchresult method)": [[54, "qat.core.BatchResult.dump"]], "dump() (qat.core.circuit method)": [[54, "qat.core.Circuit.dump"]], "dump() (qat.core.hardwarespecs method)": [[54, "qat.core.HardwareSpecs.dump"]], "dump() (qat.core.job method)": [[54, "qat.core.Job.dump"]], "dump() (qat.core.result method)": [[54, "qat.core.Result.dump"]], "dump() (qat.core.schedule method)": [[54, "qat.core.Schedule.dump"]], "dump() (qat.core.topology method)": [[54, "qat.core.Topology.dump"]], "empty() (qat.core.circuit static method)": [[54, "qat.core.Circuit.empty"]], "evaluate() (in module qat.core.formula_eval)": [[54, "qat.core.formula_eval.evaluate"]], "evaluate() (qat.plugins.optimizer method)": [[54, "qat.plugins.Optimizer.evaluate"]], "execute() (qat.core.application.application method)": [[54, "qat.core.application.Application.execute"]], "execute() (qat.plugins.junction method)": [[54, "qat.plugins.Junction.execute"]], "extend() (qat.core.batchresult method)": [[54, "qat.core.BatchResult.extend"]], "fill_matrices() (qat.core.circuit method)": [[54, "qat.core.Circuit.fill_matrices"]], "from_bytes() (qat.core.batch class method)": [[54, "qat.core.Batch.from_bytes"]], "from_bytes() (qat.core.circuit class method)": [[54, "qat.core.Circuit.from_bytes"]], "from_bytes() (qat.core.job class method)": [[54, "qat.core.Job.from_bytes"]], "from_bytes() (qat.core.result class method)": [[54, "qat.core.Result.from_bytes"]], "from_bytes() (qat.core.topology class method)": [[54, "qat.core.Topology.from_bytes"]], "from_bytes() (qat.core.wrappers.result.sample class method)": [[54, "qat.core.wrappers.result.Sample.from_bytes"]], "from_nx() (qat.core.topology static method)": [[54, "qat.core.Topology.from_nx"]], "from_string() (qat.core.variables.arithexpression static method)": [[54, "qat.core.variables.ArithExpression.from_string"]], "from_thrift() (qat.core.batch class method)": [[54, "qat.core.Batch.from_thrift"]], "from_thrift() (qat.core.batchresult class method)": [[54, "qat.core.BatchResult.from_thrift"]], "from_thrift() (qat.core.circuit class method)": [[54, "qat.core.Circuit.from_thrift"]], "from_thrift() (qat.core.hardwarespecs class method)": [[54, "qat.core.HardwareSpecs.from_thrift"]], "from_thrift() (qat.core.job class method)": [[54, "qat.core.Job.from_thrift"]], "from_thrift() (qat.core.result class method)": [[54, "qat.core.Result.from_thrift"]], "from_thrift() (qat.core.topology class method)": [[54, "qat.core.Topology.from_thrift"]], "from_thrift() (qat.core.wrappers.result.sample class method)": [[54, "qat.core.wrappers.result.Sample.from_thrift"]], "gate_set (qat.core.circuit property)": [[54, "qat.core.Circuit.gate_set"]], "generate() (qat.core.generator.abstractgenerator method)": [[54, "qat.core.generator.AbstractGenerator.generate"]], "get_circuit() (qat.core.gate_set.gatesignature method)": [[54, "qat.core.gate_set.GateSignature.get_circuit"]], "get_matrix() (qat.core.gate_set.gatesignature method)": [[54, "qat.core.gate_set.GateSignature.get_matrix"]], "get_param_generator() (in module qat.core.circuit_builder.matrix_util)": [[54, "qat.core.circuit_builder.matrix_util.get_param_generator"]], "get_predef_generator() (in module qat.core.circuit_builder.matrix_util)": [[54, "qat.core.circuit_builder.matrix_util.get_predef_generator"]], "get_variables() (qat.core.batch method)": [[54, "qat.core.Batch.get_variables"]], "get_variables() (qat.core.circuit method)": [[54, "qat.core.Circuit.get_variables"]], "get_variables() (qat.core.job method)": [[54, "qat.core.Job.get_variables"]], "get_variables() (qat.core.schedule method)": [[54, "qat.core.Schedule.get_variables"]], "get_variables() (qat.core.variable method)": [[54, "qat.core.Variable.get_variables"]], "get_variables() (qat.core.variables.arithexpression method)": [[54, "qat.core.variables.ArithExpression.get_variables"]], "gradient() (qat.core.job method)": [[54, "qat.core.Job.gradient"]], "insert_gate() (qat.core.circuit method)": [[54, "qat.core.Circuit.insert_gate"]], "int (qat.core.wrappers.result.state property)": [[54, "qat.core.wrappers.result.State.int"]], "ising (qat.core.observable attribute)": [[54, "qat.core.Observable.ising"]], "iterate_simple() (qat.core.circuit method)": [[54, "qat.core.Circuit.iterate_simple"]], "load() (qat.core.batch static method)": [[54, "qat.core.Batch.load"]], "load() (qat.core.batchresult static method)": [[54, "qat.core.BatchResult.load"]], "load() (qat.core.circuit class method)": [[54, "qat.core.Circuit.load"]], "load() (qat.core.hardwarespecs static method)": [[54, "qat.core.HardwareSpecs.load"]], "load() (qat.core.job class method)": [[54, "qat.core.Job.load"]], "load() (qat.core.result static method)": [[54, "qat.core.Result.load"]], "load() (qat.core.schedule class method)": [[54, "qat.core.Schedule.load"]], "load() (qat.core.topology static method)": [[54, "qat.core.Topology.load"]], "lsb_int (qat.core.wrappers.result.state property)": [[54, "qat.core.wrappers.result.State.lsb_int"]], "nbqbits (qat.core.hardwarespecs property)": [[54, "qat.core.HardwareSpecs.nbqbits"]], "nbqbits (qat.core.observable attribute)": [[54, "qat.core.Observable.nbqbits"]], "nbqbits (qat.core.topology property)": [[54, "qat.core.Topology.nbqbits"]], "op (qat.core.term attribute)": [[54, "qat.core.Term.op"]], "optimize() (qat.plugins.optimizer method)": [[54, "qat.plugins.Optimizer.optimize"]], "parameter_map (qat.core.job property)": [[54, "qat.core.Job.parameter_map"]], "parameter_map (qat.core.result property)": [[54, "qat.core.Result.parameter_map"]], "plot_in_notebook() (in module qat.core.printer)": [[54, "qat.core.printer.plot_in_notebook"]], "pretty_print() (qat.core.variables.arithexpression method)": [[54, "qat.core.variables.ArithExpression.pretty_print"]], "psi_0 (qat.core.job property)": [[54, "qat.core.Job.psi_0"]], "qat.core": [[54, "module-qat.core"]], "qat.core.wrappers.observable": [[54, "module-qat.core.wrappers.observable"]], "qbits (qat.core.term attribute)": [[54, "qat.core.Term.qbits"]], "remove_locks() (qat.core.circuit method)": [[54, "qat.core.Circuit.remove_locks"]], "run() (qat.plugins.junction method)": [[54, "qat.plugins.Junction.run"]], "serve() (qat.core.application.application method)": [[54, "qat.core.application.Application.serve"]], "serve() (qat.core.generator.abstractgenerator method)": [[54, "qat.core.generator.AbstractGenerator.serve"]], "serve() (qat.core.qpu.qpuhandler method)": [[54, "qat.core.qpu.QPUHandler.serve"]], "serve() (qat.plugins.abstractplugin method)": [[54, "qat.plugins.AbstractPlugin.serve"]], "set_circuit_generator() (qat.core.gate_set.gatesignature method)": [[54, "qat.core.gate_set.GateSignature.set_circuit_generator"]], "set_matrix_generator() (qat.core.gate_set.gatesignature method)": [[54, "qat.core.gate_set.GateSignature.set_matrix_generator"]], "set_nbqbits() (qat.core.topology method)": [[54, "qat.core.Topology.set_nbqbits"]], "set_qreg() (qat.core.wrappers.result.sample method)": [[54, "qat.core.wrappers.result.Sample.set_qreg"]], "shift_qbits() (qat.core.circuit method)": [[54, "qat.core.Circuit.shift_qbits"]], "shift_qbits() (qat.core.job method)": [[54, "qat.core.Job.shift_qbits"]], "state (qat.core.wrappers.result.sample property)": [[54, "qat.core.wrappers.result.Sample.state"]], "statistics() (qat.core.circuit method)": [[54, "qat.core.Circuit.statistics"]], "submit() (qat.core.qpu.qpuhandler method)": [[54, "qat.core.qpu.QPUHandler.submit"]], "submit_job() (qat.core.qpu.qpuhandler method)": [[54, "qat.core.qpu.QPUHandler.submit_job"]], "terms (qat.core.observable attribute)": [[54, "qat.core.Observable.terms"]], "to_job() (qat.core.circuit method)": [[54, "qat.core.Circuit.to_job"]], "to_job() (qat.core.schedule method)": [[54, "qat.core.Schedule.to_job"]], "to_nx() (qat.core.topology method)": [[54, "qat.core.Topology.to_nx"]], "to_thrift() (qat.core.batch method)": [[54, "qat.core.Batch.to_thrift"]], "to_thrift() (qat.core.job method)": [[54, "qat.core.Job.to_thrift"]], "to_thrift() (qat.core.variable method)": [[54, "qat.core.Variable.to_thrift"]], "to_thrift() (qat.core.variables.arithexpression method)": [[54, "qat.core.variables.ArithExpression.to_thrift"]], "union() (qat.core.gate_set.gateset method)": [[54, "qat.core.gate_set.GateSet.union"]], "value (qat.core.result property)": [[54, "qat.core.Result.value"]], "value (qat.core.wrappers.result.state property)": [[54, "qat.core.wrappers.result.State.value"]], "values (qat.core.result property)": [[54, "qat.core.Result.values"]], "wrap_samples() (qat.core.result method)": [[54, "qat.core.Result.wrap_samples"]], "wrapper_post_process() (qat.plugins.abstractplugin method)": [[54, "qat.plugins.AbstractPlugin.wrapper_post_process"]], "alltoall (class in qat.devices)": [[55, "qat.devices.AllToAll"]], "griddevice (class in qat.devices)": [[55, "qat.devices.GridDevice"]], "linedevice (class in qat.devices)": [[55, "qat.devices.LineDevice"]], "squaregriddevice (class in qat.devices)": [[55, "qat.devices.SquareGridDevice"]], "qat.devices": [[55, "module-qat.devices"]], "qat.fermion": [[56, "module-qat.fermion"]], "electronicstructurehamiltonian (class in qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian"]], "fermionhamiltonian (class in qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian"]], "molecularhamiltonian (class in qat.fermion.chemistry.wrapper)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian"]], "moleculeinfo (class in qat.fermion.chemistry.wrapper)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo"]], "spinhamiltonian (class in qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian"]], "apply_quantum_subspace_expansion() (in module qat.fermion.chemistry.qse)": [[61, "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion"]], "compute_active_space_integrals() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.compute_active_space_integrals"]], "constant_coeff (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.constant_coeff"]], "construct_ucc_ansatz() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.construct_ucc_ansatz"]], "convert_to_h_integrals() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.convert_to_h_integrals"]], "copy() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.spinhamiltonian method)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.copy"]], "dag() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.spinhamiltonian method)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.dag"]], "get_cluster_ops() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.get_cluster_ops"]], "get_electronic_hamiltonian() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.get_electronic_hamiltonian"]], "get_hf_ket() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.get_hf_ket"]], "get_matrix() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.spinhamiltonian method)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.get_matrix"]], "guess_init_params() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.guess_init_params"]], "hamiltonian (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.hamiltonian"]], "hpq (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpq"]], "hpqrs (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpqrs"]], "make_anderson_model() (in module qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.make_anderson_model"]], "make_compressed_ldca_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_compressed_ldca_circ"]], "make_embedded_model() (in module qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.make_embedded_model"]], "make_general_hwe_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_general_hwe_circ"]], "make_hubbard_model() (in module qat.fermion.hamiltonians)": [[61, "qat.fermion.hamiltonians.make_hubbard_model"]], "make_ldca_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_ldca_circ"]], "make_mr_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_mr_circ"]], "make_mrep_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_mrep_circ"]], "make_shallow_circ() (in module qat.fermion.circuits)": [[61, "qat.fermion.circuits.make_shallow_circ"]], "make_trotterisation_routine() (in module qat.fermion.trotterisation)": [[61, "qat.fermion.trotterisation.make_trotterisation_routine"]], "matrix (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.matrix"]], "matrix (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.matrix"]], "n_electrons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.n_electrons"]], "nbqbits (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.nbqbits"]], "nbqbits (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.nbqbits"]], "noons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.noons"]], "normal_order (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.normal_order"]], "nqbits (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.nqbits"]], "nqbits (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.nqbits"]], "one_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.one_body_integrals"]], "one_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.one_body_integrals"]], "orbital_energies (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.orbital_energies"]], "perform_phase_estimation() (in module qat.fermion.phase_estimation)": [[61, "qat.fermion.phase_estimation.perform_phase_estimation"]], "perform_pyscf_computation() (in module qat.fermion.chemistry.pyscf_tools)": [[61, "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation"]], "restrict_active_space() (qat.fermion.chemistry.wrapper.moleculeinfo method)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.restrict_active_space"]], "select_active_orbitals() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.select_active_orbitals"]], "select_active_space() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.select_active_space"]], "terms (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.terms"]], "terms (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[61, "qat.fermion.hamiltonians.SpinHamiltonian.terms"]], "to_electronic() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.to_electronic"]], "to_fermion() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_fermion"]], "to_spin() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[61, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_spin"]], "to_spin() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[61, "qat.fermion.hamiltonians.FermionHamiltonian.to_spin"]], "transform_basis() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.transform_basis"]], "transform_integrals_to_new_basis() (in module qat.fermion.chemistry.ucc)": [[61, "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis"]], "transform_to_bk_basis() (in module qat.fermion.transforms)": [[61, "qat.fermion.transforms.transform_to_bk_basis"]], "transform_to_jw_basis() (in module qat.fermion.transforms)": [[61, "qat.fermion.transforms.transform_to_jw_basis"]], "transform_to_parity_basis() (in module qat.fermion.transforms)": [[61, "qat.fermion.transforms.transform_to_parity_basis"]], "two_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[61, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.two_body_integrals"]], "two_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[61, "qat.fermion.chemistry.wrapper.MoleculeInfo.two_body_integrals"]], "abstractgate (class in qat.lang.aqasm.gates)": [[62, "qat.lang.AQASM.gates.AbstractGate"]], "boolformula (class in qat.lang.aqasm.bits)": [[62, "qat.lang.AQASM.bits.BoolFormula"]], "cregister (class in qat.lang.aqasm.bits)": [[62, "qat.lang.AQASM.bits.CRegister"]], "cbit (class in qat.lang.aqasm.bits)": [[62, "qat.lang.AQASM.bits.Cbit"]], "gate (class in qat.lang.aqasm.gates)": [[62, "qat.lang.AQASM.gates.Gate"]], "linker (class in qat.lang.linking.linker)": [[62, "qat.lang.linking.linker.Linker"]], "paramgate (class in qat.lang.aqasm.gates)": [[62, "qat.lang.AQASM.gates.ParamGate"]], "program (class in qat.lang.aqasm)": [[62, "qat.lang.AQASM.Program"]], "qarithexp (class in qat.lang.aqasm.qint)": [[62, "qat.lang.AQASM.qint.QArithExp"]], "qbool (class in qat.lang.aqasm.qbool)": [[62, "qat.lang.AQASM.qbool.QBool"]], "qboolarray (class in qat.lang.aqasm.qbool)": [[62, "qat.lang.AQASM.qbool.QBoolArray"]], "qclause (class in qat.lang.aqasm.qbool)": [[62, "qat.lang.AQASM.qbool.QClause"]], "qcompexp (class in qat.lang.aqasm.qint)": [[62, "qat.lang.AQASM.qint.QCompExp"]], "qint (class in qat.lang.aqasm.qint)": [[62, "qat.lang.AQASM.qint.QInt"]], "qregister (class in qat.lang.aqasm.bits)": [[62, "qat.lang.AQASM.bits.QRegister"]], "qroutine (class in qat.lang.aqasm.routines)": [[62, "qat.lang.AQASM.routines.QRoutine"]], "qbit (class in qat.lang.aqasm.bits)": [[62, "qat.lang.AQASM.bits.Qbit"]], "variablenamenotavailable (class in qat.core.circuit_builder.builder)": [[62, "qat.core.circuit_builder.builder.VariableNameNotAvailable"]], "add_signature() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.add_signature"]], "amplification_step() (in module qat.lang.algorithms)": [[62, "qat.lang.algorithms.amplification_step"]], "apply() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.apply"]], "apply() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.apply"]], "build_gate (class in qat.lang.aqasm.misc)": [[62, "qat.lang.AQASM.misc.build_gate"]], "calloc() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.calloc"]], "cast() (qat.lang.aqasm.qbool.qbool method)": [[62, "qat.lang.AQASM.qbool.QBool.cast"]], "cast() (qat.lang.aqasm.qbool.qboolarray method)": [[62, "qat.lang.AQASM.qbool.QBoolArray.cast"]], "cast() (qat.lang.aqasm.qint.qint method)": [[62, "qat.lang.AQASM.qint.QInt.cast"]], "cast_to() (qat.lang.aqasm.qbool.qbool method)": [[62, "qat.lang.AQASM.qbool.QBool.cast_to"]], "cbits_list() (qat.lang.aqasm.bits.boolformula method)": [[62, "qat.lang.AQASM.bits.BoolFormula.cbits_list"]], "cbreak() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.cbreak"]], "cc_apply() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.cc_apply"]], "clear_gate_set() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.clear_gate_set"]], "comment() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.comment"]], "compile() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.compile"]], "compute() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.compute"]], "conj() (qat.lang.aqasm.gates.gate method)": [[62, "qat.lang.AQASM.gates.Gate.conj"]], "conjugate() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.conjugate"]], "ctrl() (qat.lang.aqasm.gates.gate method)": [[62, "qat.lang.AQASM.gates.Gate.ctrl"]], "dag() (qat.lang.aqasm.gates.gate method)": [[62, "qat.lang.AQASM.gates.Gate.dag"]], "dag() (qat.lang.aqasm.gates.paramgate method)": [[62, "qat.lang.AQASM.gates.ParamGate.dag"]], "display() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.display"]], "display() (qat.lang.aqasm.gates.paramgate method)": [[62, "qat.lang.AQASM.gates.ParamGate.display"]], "evaluate() (qat.lang.aqasm.qbool.qbool method)": [[62, "qat.lang.AQASM.qbool.QBool.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qboolarray method)": [[62, "qat.lang.AQASM.qbool.QBoolArray.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qclause method)": [[62, "qat.lang.AQASM.qbool.QClause.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qarithexp method)": [[62, "qat.lang.AQASM.qint.QArithExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qcompexp method)": [[62, "qat.lang.AQASM.qint.QCompExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qint method)": [[62, "qat.lang.AQASM.qint.QInt.evaluate"]], "export() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.export"]], "free_ancillae() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.free_ancillae"]], "free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.free_ancillae"]], "generate_gate_set() (in module qat.lang.aqasm.misc)": [[62, "qat.lang.AQASM.misc.generate_gate_set"]], "get_free_ancillae() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.get_free_ancillae"]], "get_free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.get_free_ancillae"]], "grover_diffusion() (in module qat.lang.algorithms.amplification)": [[62, "qat.lang.algorithms.amplification.grover_diffusion"]], "householder() (in module qat.lang.algorithms.amplification)": [[62, "qat.lang.algorithms.amplification.householder"]], "link() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.link"]], "link_gates() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.link_gates"]], "link_matrices() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.link_matrices"]], "logic() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.logic"]], "measure() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.measure"]], "new_var() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.new_var"]], "new_wires() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.new_wires"]], "phase() (qat.lang.aqasm.qbool.qbool method)": [[62, "qat.lang.AQASM.qbool.QBool.phase"]], "phase() (qat.lang.aqasm.qbool.qclause method)": [[62, "qat.lang.AQASM.qbool.QClause.phase"]], "phase() (qat.lang.aqasm.qint.qcompexp method)": [[62, "qat.lang.AQASM.qint.QCompExp.phase"]], "phase_estimation() (in module qat.lang.algorithms)": [[62, "qat.lang.algorithms.phase_estimation"]], "qalloc() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.qalloc"]], "qat.lang": [[62, "module-qat.lang"]], "qat.lang.aqasm.misc": [[62, "module-qat.lang.AQASM.misc"]], "qat.lang.aqasm.util": [[62, "module-qat.lang.AQASM.util"]], "qbits_list() (qat.lang.aqasm.qbool.qbool method)": [[62, "qat.lang.AQASM.qbool.QBool.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qboolarray method)": [[62, "qat.lang.AQASM.qbool.QBoolArray.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qclause method)": [[62, "qat.lang.AQASM.qbool.QClause.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qcompexp method)": [[62, "qat.lang.AQASM.qint.QCompExp.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qint method)": [[62, "qat.lang.AQASM.qint.QInt.qbits_list"]], "quantum_counting() (in module qat.lang.algorithms)": [[62, "qat.lang.algorithms.quantum_counting"]], "reset() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.reset"]], "set_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.set_ancillae"]], "set_dag() (qat.lang.aqasm.gates.abstractgate method)": [[62, "qat.lang.AQASM.gates.AbstractGate.set_dag"]], "set_gate_set() (qat.lang.linking.linker.linker method)": [[62, "qat.lang.linking.linker.Linker.set_gate_set"]], "set_value() (qat.lang.aqasm.qint.qint method)": [[62, "qat.lang.AQASM.qint.QInt.set_value"]], "suppr_ctrl() (in module qat.lang.aqasm.util)": [[62, "qat.lang.AQASM.util.suppr_ctrl"]], "to_circ() (qat.lang.aqasm.program method)": [[62, "qat.lang.AQASM.Program.to_circ"]], "to_thrift() (qat.lang.aqasm.bits.boolformula method)": [[62, "qat.lang.AQASM.bits.BoolFormula.to_thrift"]], "toffoli_fold() (in module qat.lang.aqasm.util)": [[62, "qat.lang.AQASM.util.toffoli_fold"]], "trans() (qat.lang.aqasm.gates.gate method)": [[62, "qat.lang.AQASM.gates.Gate.trans"]], "uncompute() (qat.lang.aqasm.routines.qroutine method)": [[62, "qat.lang.AQASM.routines.QRoutine.uncompute"]], "uniform_distribution() (in module qat.lang.algorithms.amplification)": [[62, "qat.lang.algorithms.amplification.uniform_distribution"]], "qft() (in module qat.lang.aqasm.qftarith)": [[63, "qat.lang.AQASM.qftarith.QFT"]], "add() (in module qat.lang.aqasm.classarith)": [[63, "qat.lang.AQASM.classarith.add"]], "add() (in module qat.lang.aqasm.qftarith)": [[63, "qat.lang.AQASM.qftarith.add"]], "add_const() (in module qat.lang.aqasm.classarith)": [[63, "qat.lang.AQASM.classarith.add_const"]], "add_const() (in module qat.lang.aqasm.qftarith)": [[63, "qat.lang.AQASM.qftarith.add_const"]], "add_const_mod() (in module qat.lang.aqasm.arithmetic)": [[63, "qat.lang.AQASM.arithmetic.add_const_mod"]], "add_mod() (in module qat.lang.aqasm.arithmetic)": [[63, "qat.lang.AQASM.arithmetic.add_mod"]], "cuccaro_add() (in module qat.lang.aqasm.classarith)": [[63, "qat.lang.AQASM.classarith.cuccaro_add"]], "modular_exp() (in module qat.lang.aqasm.arithmetic)": [[63, "qat.lang.AQASM.arithmetic.modular_exp"]], "mult() (in module qat.lang.aqasm.qftarith)": [[63, "qat.lang.AQASM.qftarith.mult"]], "mult_const() (in module qat.lang.aqasm.arithmetic)": [[63, "qat.lang.AQASM.arithmetic.mult_const"]], "mult_const() (in module qat.lang.aqasm.qftarith)": [[63, "qat.lang.AQASM.qftarith.mult_const"]], "mult_const_mod() (in module qat.lang.aqasm.arithmetic)": [[63, "qat.lang.AQASM.arithmetic.mult_const_mod"]], "qat.lang.aqasm": [[63, "module-qat.lang.AQASM"]], "qat.lang.aqasm.arithmetic": [[63, "module-qat.lang.AQASM.arithmetic"]], "qat.lang.aqasm.classarith": [[63, "module-qat.lang.AQASM.classarith"]], "qat.lang.aqasm.qftarith": [[63, "module-qat.lang.AQASM.qftarith"]], "kptree (class in qat.lang.models)": [[64, "qat.lang.models.KPTree"]], "get_routine() (qat.lang.models.kptree method)": [[64, "qat.lang.models.KPTree.get_routine"]], "ansatzfactory (class in qat.vsolve.ansatz)": [[65, "qat.vsolve.ansatz.AnsatzFactory"]], "bilp (class in qat.opt.binary_linear_integer_programming)": [[65, "qat.opt.binary_linear_integer_programming.BILP"]], "circuitgenerator (class in qat.opt.circuit_generator)": [[65, "qat.opt.circuit_generator.CircuitGenerator"]], "clause (class in qat.opt.boolexpr)": [[65, "qat.opt.boolexpr.Clause"]], "combinatorialproblem (class in qat.opt)": [[65, "qat.opt.CombinatorialProblem"]], "graphcolouring (class in qat.opt.graph_colouring)": [[65, "qat.opt.graph_colouring.GraphColouring"]], "graphpartitioning (class in qat.opt.graph_partitioning)": [[65, "qat.opt.graph_partitioning.GraphPartitioning"]], "independentannealing (class in qat.opt.mixing_factory)": [[65, "qat.opt.mixing_factory.IndependentAnnealing"]], "initialstatebuilder (class in qat.opt.mixing_factory)": [[65, "qat.opt.mixing_factory.InitialStateBuilder"]], "ising (class in qat.opt)": [[65, "qat.opt.Ising"]], "kclique (class in qat.opt.k_clique)": [[65, "qat.opt.k_clique.KClique"]], "maxcut (class in qat.opt.max_cut)": [[65, "qat.opt.max_cut.MaxCut"]], "mixingfactory (class in qat.opt)": [[65, "qat.opt.MixingFactory"]], "numberpartitioning (class in qat.opt.number_partitioning)": [[65, "qat.opt.number_partitioning.NumberPartitioning"]], "qubo (class in qat.opt)": [[65, "qat.opt.QUBO"]], "schedulegenerator (class in qat.opt.schedule_generator)": [[65, "qat.opt.schedule_generator.ScheduleGenerator"]], "simpleinitialstate (class in qat.opt.mixing_factory)": [[65, "qat.opt.mixing_factory.SimpleInitialState"]], "var (class in qat.opt.boolexpr)": [[65, "qat.opt.boolexpr.Var"]], "vertexcover (class in qat.opt.vertex_cover)": [[65, "qat.opt.vertex_cover.VertexCover"]], "add_clause() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.add_clause"]], "annealing_job() (qat.opt.schedule_generator.schedulegenerator method)": [[65, "qat.opt.schedule_generator.ScheduleGenerator.annealing_job"]], "bit_flip() (qat.opt.mixingfactory static method)": [[65, "qat.opt.MixingFactory.bit_flip"]], "bit_move() (qat.opt.mixingfactory static method)": [[65, "qat.opt.MixingFactory.bit_move"]], "evaluate() (qat.opt.boolexpr.var method)": [[65, "qat.opt.boolexpr.Var.evaluate"]], "get_best_parameters() (qat.opt.ising method)": [[65, "qat.opt.Ising.get_best_parameters"]], "get_best_parameters() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.get_best_parameters"]], "get_best_parameters() (qat.opt.binary_linear_integer_programming.bilp method)": [[65, "qat.opt.binary_linear_integer_programming.BILP.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_colouring.graphcolouring method)": [[65, "qat.opt.graph_colouring.GraphColouring.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_partitioning.graphpartitioning method)": [[65, "qat.opt.graph_partitioning.GraphPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.k_clique.kclique method)": [[65, "qat.opt.k_clique.KClique.get_best_parameters"]], "get_best_parameters() (qat.opt.max_cut.maxcut method)": [[65, "qat.opt.max_cut.MaxCut.get_best_parameters"]], "get_best_parameters() (qat.opt.number_partitioning.numberpartitioning method)": [[65, "qat.opt.number_partitioning.NumberPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.vertex_cover.vertexcover method)": [[65, "qat.opt.vertex_cover.VertexCover.get_best_parameters"]], "get_j_h_and_offset() (qat.opt.ising method)": [[65, "qat.opt.Ising.get_j_h_and_offset"]], "get_observable() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.get_observable"]], "get_observable() (qat.opt.ising method)": [[65, "qat.opt.Ising.get_observable"]], "get_observable() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.get_observable"]], "get_observable() (qat.opt.boolexpr.clause method)": [[65, "qat.opt.boolexpr.Clause.get_observable"]], "get_observable() (qat.opt.boolexpr.var method)": [[65, "qat.opt.boolexpr.Var.get_observable"]], "get_q_and_offset() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.get_q_and_offset"]], "get_variables() (qat.opt.boolexpr.var method)": [[65, "qat.opt.boolexpr.Var.get_variables"]], "index (qat.opt.boolexpr.var attribute)": [[65, "qat.opt.boolexpr.Var.index"]], "inject_initial_state() (qat.opt.mixing_factory.independentannealing method)": [[65, "qat.opt.mixing_factory.IndependentAnnealing.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.initialstatebuilder method)": [[65, "qat.opt.mixing_factory.InitialStateBuilder.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.simpleinitialstate method)": [[65, "qat.opt.mixing_factory.SimpleInitialState.inject_initial_state"]], "new_var() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.new_var"]], "new_vars() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.new_vars"]], "parse_result() (qat.opt.graph_colouring.graphcolouring method)": [[65, "qat.opt.graph_colouring.GraphColouring.parse_result"]], "parse_result() (qat.opt.graph_partitioning.graphpartitioning method)": [[65, "qat.opt.graph_partitioning.GraphPartitioning.parse_result"]], "parse_result() (qat.opt.k_clique.kclique method)": [[65, "qat.opt.k_clique.KClique.parse_result"]], "parse_result() (qat.opt.max_cut.maxcut method)": [[65, "qat.opt.max_cut.MaxCut.parse_result"]], "parse_result() (qat.opt.vertex_cover.vertexcover method)": [[65, "qat.opt.vertex_cover.VertexCover.parse_result"]], "produce_j_h_and_offset() (in module qat.opt.graph_partitioning)": [[65, "qat.opt.graph_partitioning.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.max_cut)": [[65, "qat.opt.max_cut.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.number_partitioning)": [[65, "qat.opt.number_partitioning.produce_j_h_and_offset"]], "produce_q_and_offset() (in module qat.opt.binary_linear_integer_programming)": [[65, "qat.opt.binary_linear_integer_programming.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.graph_colouring)": [[65, "qat.opt.graph_colouring.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.k_clique)": [[65, "qat.opt.k_clique.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.vertex_cover)": [[65, "qat.opt.vertex_cover.produce_q_and_offset"]], "qaoa_ansatz() (qat.opt.circuit_generator.circuitgenerator method)": [[65, "qat.opt.circuit_generator.CircuitGenerator.qaoa_ansatz"]], "qaoa_circuit() (qat.vsolve.ansatz.ansatzfactory static method)": [[65, "qat.vsolve.ansatz.AnsatzFactory.qaoa_circuit"]], "to_combinatorial_problem() (qat.opt.ising method)": [[65, "qat.opt.Ising.to_combinatorial_problem"]], "to_combinatorial_problem() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.to_combinatorial_problem"]], "to_ising() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.to_ising"]], "to_ising() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.to_ising"]], "to_job() (qat.opt.ising method)": [[65, "qat.opt.Ising.to_job"]], "to_job() (qat.opt.qubo method)": [[65, "qat.opt.QUBO.to_job"]], "to_qubo() (qat.opt.combinatorialproblem method)": [[65, "qat.opt.CombinatorialProblem.to_qubo"]], "to_qubo() (qat.opt.ising method)": [[65, "qat.opt.Ising.to_qubo"]], "quameleonplugin (class in qat.core.quameleon)": [[66, "qat.core.quameleon.QuameleonPlugin"]], "qat.core.quameleon": [[66, "module-qat.core.quameleon"]], "remap (class in qat.plugins)": [[67, "qat.plugins.Remap"]], "qat": [[70, "module-qat"]], "psominimizeplugin (class in qat.plugins)": [[71, "qat.plugins.PSOMinimizePlugin"]], "spsaminimizeplugin (class in qat.plugins)": [[71, "qat.plugins.SPSAMinimizePlugin"]], "scipyminimizeplugin (class in qat.plugins)": [[71, "qat.plugins.ScipyMinimizePlugin"]], "seqoptim (class in qat.plugins)": [[71, "qat.plugins.SeqOptim"]], "set_options() (qat.plugins.scipyminimizeplugin method)": [[71, "qat.plugins.ScipyMinimizePlugin.set_options"]], "vertexcovergenerator (class in qat.opt.generators)": [[72, "qat.opt.generators.VertexCoverGenerator"]], "generate() (qat.opt.generators.vertexcovergenerator method)": [[72, "qat.opt.generators.VertexCoverGenerator.generate"]]}})
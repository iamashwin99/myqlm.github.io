Search.setIndex({"docnames": ["advanced_combinatorial_optimization", "advanced_programming", "aqasm", "batch_generators", "circuit", "circuit-inliner", "combinatorial_optimization_generators_utils", "combinatorial_optimization_intro", "combinatorial_optimization_intro_qa", "combinatorial_optimization_intro_qaoa", "combinatorial_optimization_intro_sa", "combinatorial_optimization_intro_sqa", "commands", "cost_function_plugin", "display-plugin", "getting_started", "graph_colouring_generator", "graph_partitioning_generator", "index", "introduction", "kclique_generator", "manipulating", "max_cut_generator", "myqlm_specific/cirq", "myqlm_specific/compatibility_matrix", "myqlm_specific/contrib", "myqlm_specific/install", "myqlm_specific/interoperability", "myqlm_specific/license", "myqlm_specific/macos", "myqlm_specific/notebooks", "myqlm_specific/openqasm", "myqlm_specific/projectq", "myqlm_specific/pyquil", "myqlm_specific/qat-clinalg", "myqlm_specific/qat-pylinalg", "myqlm_specific/qat-simulated_annealing", "myqlm_specific/qiskit", "myqlm_specific/release-note", "myqlm_specific/release-notes/1.4.0", "myqlm_specific/release-notes/1.5.1", "myqlm_specific/release-notes/1.6.0", "myqlm_specific/release-notes/1.7.1", "myqlm_specific/release-notes/1.7.2", "myqlm_specific/support", "notebooks", "observable-splitter", "plugin_adaptvqe", "plugin_gradient_descent", "plugin_multiplelaunches", "plugin_seqoptim", "plugin_zeronoise", "programming", "qat-core", "qat-devices", "qat-fermion", "qat-fermion_advanced", "qat-fermion_basic", "qat-fermion_compatibility_guide", "qat-fermion_plugins", "qat-fermion_source", "qat-lang", "qat-lang-arith", "qat-lang-other", "qat-opt", "quameleon", "remap-plugin", "running_variational", "simulating", "source_doc", "variational-plugin", "vertex_cover_generator"], "filenames": ["advanced_combinatorial_optimization.rst", "advanced_programming.rst", "aqasm.rst", "batch_generators.rst", "circuit.rst", "circuit-inliner.rst", "combinatorial_optimization_generators_utils.rst", "combinatorial_optimization_intro.rst", "combinatorial_optimization_intro_qa.rst", "combinatorial_optimization_intro_qaoa.rst", "combinatorial_optimization_intro_sa.rst", "combinatorial_optimization_intro_sqa.rst", "commands.rst", "cost_function_plugin.rst", "display-plugin.rst", "getting_started.rst", "graph_colouring_generator.rst", "graph_partitioning_generator.rst", "index.rst", "introduction.rst", "kclique_generator.rst", "manipulating.rst", "max_cut_generator.rst", "myqlm_specific/cirq.rst", "myqlm_specific/compatibility_matrix.rst", "myqlm_specific/contrib.rst", "myqlm_specific/install.rst", "myqlm_specific/interoperability.rst", "myqlm_specific/license.rst", "myqlm_specific/macos.rst", "myqlm_specific/notebooks.rst", "myqlm_specific/openqasm.rst", "myqlm_specific/projectq.rst", "myqlm_specific/pyquil.rst", "myqlm_specific/qat-clinalg.rst", "myqlm_specific/qat-pylinalg.rst", "myqlm_specific/qat-simulated_annealing.rst", "myqlm_specific/qiskit.rst", "myqlm_specific/release-note.rst", "myqlm_specific/release-notes/1.4.0.rst", "myqlm_specific/release-notes/1.5.1.rst", "myqlm_specific/release-notes/1.6.0.rst", "myqlm_specific/release-notes/1.7.1.rst", "myqlm_specific/release-notes/1.7.2.rst", "myqlm_specific/support.rst", "notebooks.rst", "observable-splitter.rst", "plugin_adaptvqe.rst", "plugin_gradient_descent.rst", "plugin_multiplelaunches.rst", "plugin_seqoptim.rst", "plugin_zeronoise.rst", "programming.rst", "qat-core.rst", "qat-devices.rst", "qat-fermion.rst", "qat-fermion_advanced.rst", "qat-fermion_basic.rst", "qat-fermion_compatibility_guide.rst", "qat-fermion_plugins.rst", "qat-fermion_source.rst", "qat-lang.rst", "qat-lang-arith.rst", "qat-lang-other.rst", "qat-opt.rst", "quameleon.rst", "remap-plugin.rst", "running_variational.rst", "simulating.rst", "source_doc.rst", "variational-plugin.rst", "vertex_cover_generator.rst"], "titles": ["Advanced combinatorial optimization", "Advanced programming using pyAQASM", "The AQASM format", "Building advanced computation stacks", "The high-level wrapper", "CircuitInliner : inlining circuit inside a stack", "Combinatorial Optimization Generators tools", "Combinatorial optimization", "Quantum Annealing (QA)", "Quantum Approximate Optimization Algorithm (QAOA)", "Simulated annealing (SA)", "Simulated Quantum Annealing (SQA)", "Command-line tools", "CostFunctionPlugin: variational optimization without observable", "Display : a console displayer plugin", "Getting started", "Graph Colouring Generator", "Graph Partitioning Generator", "Quantum Application Toolset", "Main objects: Jobs, Observables, Circuits\u2026", "KClique Generator", "Building custom execution stacks", "Max Cut Generator", "Cirq interoperability", "&lt;no title&gt;", "Contributing to myQLM", "Installing myQLM", "Interoperability with myQLM", "myQLM license", "myQLM Installation on MacOS", "Notebooks", "OpenQASM Compiler", "ProjectQ interoperability", "PyQuil interoperability", "qat.clinalg: C++ Linear-algebra simulator", "qat.pylinalg: Python Linear-algebra simulator", "qat.simulated_annealing: Simulated Annealing", "Qiskit interoperability", "Release notes", "myQLM Power Access", "New features", "New features", "A new simulated QPU in myQLM", "Main Fixes", "Support", "List of notebooks", "ObservableSplitter : turning observable sampling into qubit sampling", "ADAPT-VQE: building iteratively efficient ansatze", "GradientDescentOptimizer: Natural gradient descent optimizer", "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one", "SeqOptim: optimizing circuits with the sequential optimization algorithm", "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation", "Writing quantum circuits", "qat-core: Core data structures and Abstract classes", "qat.devices: The device library", "Digital quantum simulation for spin and fermionic systems", "Advanced usage", "Basic usage", "Changelog", "Plugins", "Digital quantum simulation for spin and fermionic systems", "qat.lang : Programming tools", "Arithmetic routines", "State preparation and QRAM circuits", "qat-opt: representation and encoding of combinatorial problems, QAOA", "QuameleonPlugin : emulating hardware constraints via a plugin", "Remap: unused qubits remover", "Running variational algorithms", "Executing quantum circuits", "Source code documentation", "Plugins for variational algorithms", "Vertex Cover Generator"], "terms": {"among": [0, 7, 38, 42, 48, 53, 55, 64], "all": [0, 1, 3, 4, 5, 14, 15, 19, 21, 22, 23, 26, 28, 30, 32, 34, 38, 39, 45, 46, 50, 52, 53, 54, 57, 60, 61, 62, 63, 64, 65, 66, 70], "ones": [0, 7, 60], "highest": [0, 37], "practic": [0, 1, 7, 8, 9, 10, 15, 35, 64, 68], "import": [0, 1, 2, 3, 4, 7, 8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 29, 31, 32, 33, 34, 37, 38, 39, 43, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "repeat": [0, 15, 21, 62, 68], "appear": [0, 19, 28, 53, 61, 68], "ar": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 42, 48, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "machin": [0, 7, 11, 26, 28, 38, 39, 57], "have": [0, 1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 19, 21, 25, 26, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 50, 53, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 70], "been": [0, 3, 7, 10, 13, 21, 28, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 42, 55, 58, 59, 61, 64, 68], "dedic": [0, 15, 28, 53, 67], "tackl": [0, 7], "when": [0, 1, 7, 8, 10, 19, 21, 23, 35, 38, 39, 40, 41, 42, 43, 46, 47, 50, 52, 53, 56, 57, 59, 60, 61, 62, 64, 67, 70], "repres": [0, 1, 4, 7, 11, 19, 28, 35, 36, 53, 59, 60, 61, 63, 64], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "Ising": [0, 7, 9, 10, 11, 36, 38, 39, 53], "qubo": [0, 7, 9, 11, 36, 38, 39], "form": [0, 1, 4, 6, 7, 19, 21, 28, 35, 36, 50, 51, 59, 60, 61, 64, 70, 71], "see": [0, 2, 3, 4, 7, 9, 15, 19, 21, 28, 35, 36, 38, 39, 43, 46, 52, 53, 56, 57, 59, 60, 61, 63, 64, 68, 70], "section": [0, 2, 4, 7, 9, 11, 12, 15, 19, 21, 28, 33, 38, 42, 52, 53, 56, 64], "some": [0, 1, 2, 4, 5, 7, 8, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 35, 36, 38, 39, 52, 53, 55, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71], "them": [0, 1, 7, 15, 21, 28, 50, 52, 53, 56, 60, 61, 62, 64, 69, 70], "like": [0, 1, 4, 7, 19, 21, 28, 37, 38, 39, 43, 52, 53, 60], "etc": [0, 2, 4, 7, 11, 15, 18, 19, 21, 28, 29, 38, 42, 53, 55, 61, 64], "could": [0, 1, 3, 6, 7, 12, 19, 21, 26, 37, 38, 42, 53, 56, 57, 64, 66], "easili": [0, 13, 35, 53, 57, 61], "formul": [0, 11, 57, 64], "wai": [0, 1, 4, 7, 19, 21, 28, 29, 34, 36, 52, 53, 56, 59, 61, 62, 64, 66, 67, 70], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71], "myqlm": [0, 7, 11, 12, 13, 19, 21, 23, 30, 31, 32, 33, 35, 36, 40, 41, 43, 44, 52, 55, 58, 64, 69], "tool": [0, 1, 7, 14, 15, 18, 37, 52, 55, 60, 64, 67], "A": [0, 1, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 28, 32, 35, 36, 37, 45, 46, 49, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 65, 70, 71], "descript": [0, 2, 7, 8, 15, 28, 34, 53, 54], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "found": [0, 3, 4, 6, 15, 19, 38, 42, 44, 53, 55, 58, 60, 64], "below": [0, 1, 4, 15, 16, 17, 19, 20, 21, 22, 26, 28, 34, 36, 38, 43, 46, 53, 57, 58, 60, 61, 63, 64, 68, 70, 71], "respect": [0, 7, 11, 36, 53, 59, 60, 64, 68], "helper": [0, 7, 36, 53, 56, 60], "class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 70, 71], "each": [0, 1, 3, 14, 19, 21, 28, 35, 36, 46, 49, 50, 51, 53, 54, 59, 60, 61, 64, 66, 68, 70], "given": [0, 3, 4, 7, 10, 11, 13, 15, 19, 21, 28, 34, 36, 47, 52, 53, 56, 59, 60, 61, 62, 64, 67, 68], "sourc": [0, 2, 19, 21, 27, 29, 35, 38, 42, 52, 55, 56, 68], "code": [0, 1, 2, 3, 7, 8, 10, 11, 12, 13, 14, 15, 19, 21, 25, 27, 28, 29, 35, 44, 52, 53, 55, 56, 58, 61, 64, 65, 68], "exampl": [0, 3, 7, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 28, 29, 36, 45, 52, 53, 56, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71], "notebook": [0, 7, 10, 14, 26, 38, 39, 43, 47, 48, 49, 50, 51, 53, 55, 56, 57, 59, 67], "relat": [0, 7, 61, 62], "batch": [0, 3, 5, 12, 14, 16, 17, 20, 21, 22, 33, 34, 35, 37, 40, 41, 46, 49, 50, 51, 61, 69, 70, 71], "gener": [0, 2, 3, 4, 7, 8, 9, 12, 15, 18, 19, 23, 28, 31, 32, 33, 34, 37, 39, 40, 41, 43, 53, 56, 58, 59, 62, 63, 67, 68, 70], "provid": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 21, 23, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 42, 44, 50, 52, 53, 54, 55, 56, 60, 61, 62, 64, 65, 67, 68, 69, 70], "both": [0, 1, 7, 9, 28, 29, 37, 53, 57, 59, 64], "job": [0, 1, 3, 4, 7, 8, 9, 12, 13, 15, 18, 21, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 51, 56, 59, 60, 61, 65, 66, 69, 70], "solv": [0, 6, 10, 11, 15, 16, 17, 20, 22, 36, 45, 55, 59, 60, 64, 69, 71], "combintori": 0, "pars": [0, 3, 6, 12, 16, 17, 20, 22, 31, 53, 69, 71], "result": [0, 1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 52, 56, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71], "return": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 52, 53, 58, 60, 61, 62, 63, 64, 66, 68, 69, 71], "user": [0, 3, 14, 19, 21, 23, 26, 28, 29, 32, 33, 35, 37, 50, 53, 56, 70], "firendli": 0, "data": [0, 3, 4, 15, 19, 21, 32, 34, 35, 38, 40, 41, 42, 46, 60, 61, 63, 67, 69], "structur": [0, 2, 3, 4, 5, 15, 19, 34, 35, 52, 56, 57, 60, 63, 64, 69], "These": [0, 1, 4, 15, 19, 26, 27, 29, 37, 38, 39, 43, 52, 53, 56, 57, 59, 61, 62, 63, 64, 70], "design": [0, 1, 3, 4, 7, 9, 13, 19, 21, 26, 28, 37, 38, 42, 52, 53, 61, 64, 69], "differ": [0, 1, 4, 7, 9, 16, 17, 19, 20, 22, 28, 29, 35, 38, 43, 46, 49, 51, 52, 53, 56, 57, 59, 60, 62, 64, 68, 70, 71], "type": [0, 2, 3, 4, 7, 8, 13, 16, 17, 19, 20, 21, 22, 23, 26, 28, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45, 46, 50, 53, 54, 57, 60, 62, 63, 64, 65, 68, 70, 71], "compat": [0, 19, 21, 29, 57, 58, 61], "qpu": [0, 1, 3, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 27, 34, 35, 36, 39, 45, 46, 52, 53, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71], "The": [0, 1, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 59, 62, 63, 64, 65, 67, 68, 70, 71], "qaoa": [0, 7, 11, 18], "pass": [0, 1, 5, 6, 13, 16, 17, 20, 21, 22, 53, 60, 61, 64, 70, 71], "job_typ": [0, 16, 17, 20, 22, 53, 59, 71], "constructor": [0, 2, 53, 55, 56, 60, 61, 64], "execut": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 30, 33, 34, 35, 36, 37, 45, 53, 59, 60, 61, 65, 69, 71], "digit": [0, 7, 9, 18, 38, 42, 59, 64], "two": [0, 1, 2, 4, 7, 12, 13, 15, 19, 21, 28, 29, 35, 36, 37, 38, 39, 45, 46, 52, 53, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70], "submit": [0, 1, 3, 13, 15, 19, 21, 28, 33, 34, 35, 37, 38, 39, 40, 41, 42, 53, 56, 59, 60, 61, 65, 66, 67, 68, 70], "variat": [0, 3, 7, 9, 15, 18, 21, 38, 42, 48, 50, 53, 55, 59, 60, 64, 69], "determin": [0, 4, 19, 28, 59], "best": [0, 3, 6, 21, 35, 45, 53, 59, 64, 67, 69, 70], "paramet": [0, 1, 2, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 66, 68, 70, 71], "sampl": [0, 1, 3, 6, 7, 11, 13, 15, 19, 21, 34, 35, 36, 37, 38, 40, 41, 42, 44, 51, 53, 61, 64, 66, 67, 69], "find": [0, 3, 7, 8, 10, 15, 21, 46, 50, 53, 56, 60, 64, 68, 70], "actual": [0, 7, 35, 68], "solut": [0, 3, 6, 7, 8, 9, 11, 36, 60, 64], "method": [0, 1, 2, 3, 4, 6, 7, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 52, 56, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71], "qaoa_ansatz": [0, 7, 11, 64], "circuitgener": [0, 7, 9, 64], "For": [0, 1, 2, 3, 7, 8, 12, 13, 14, 21, 28, 29, 31, 34, 48, 53, 54, 56, 57, 59, 60, 61, 64, 66, 67, 68], "instanc": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 19, 21, 31, 33, 34, 35, 37, 46, 52, 53, 54, 61, 62, 64, 66, 68, 70], "follow": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 26, 28, 29, 31, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70], "exempl": 0, "maxcutgener": [0, 22], "maxcut": [0, 7, 8, 22, 64], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "networkx": [0, 1, 6, 7, 8, 16, 17, 20, 22, 53, 64, 71], "nx": [0, 1, 7, 8, 16, 17, 20, 22, 53, 64, 71], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 47, 49, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "qat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 31, 32, 33, 37, 38, 42, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 70, 71], "full_rary_tre": [0, 17, 22, 64, 71], "3": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 29, 33, 34, 36, 37, 38, 39, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71], "6": [0, 1, 6, 7, 15, 17, 20, 21, 22, 24, 26, 27, 28, 33, 40, 47, 54, 56, 57, 60, 64, 67, 71], "here": [0, 1, 2, 4, 7, 8, 15, 16, 17, 19, 20, 21, 22, 26, 35, 38, 42, 46, 52, 53, 55, 56, 57, 59, 60, 61, 63, 64, 65, 68, 71], "also": [0, 1, 2, 4, 7, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 35, 36, 38, 39, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 70, 71], "schedul": [0, 7, 10, 36, 45, 64], "none": [0, 2, 4, 16, 17, 19, 20, 21, 22, 33, 34, 35, 36, 37, 46, 48, 50, 51, 53, 60, 61, 64, 65, 68, 70, 71], "pipe": [0, 21, 37, 38, 42, 53, 69], "comput": [0, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 34, 35, 37, 46, 47, 52, 53, 56, 57, 58, 59, 60, 61, 63, 64, 67, 68, 69, 71], "stack": [0, 12, 13, 15, 16, 17, 18, 20, 22, 38, 42, 49, 51, 52, 53, 56, 59, 60, 61, 66, 67, 69, 70, 71], "plugin": [0, 3, 5, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 33, 35, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 55, 56, 58, 64, 66, 67, 68, 71], "creat": [0, 3, 4, 15, 16, 17, 19, 20, 21, 22, 25, 28, 32, 36, 37, 38, 39, 44, 45, 53, 56, 60, 61, 64, 66, 68, 71], "applic": [0, 1, 2, 3, 4, 7, 8, 18, 19, 21, 28, 35, 50, 52, 53, 61, 63, 64, 70], "call": [0, 1, 2, 5, 7, 11, 12, 15, 19, 21, 32, 34, 35, 38, 42, 52, 53, 58, 59, 60, 61, 62, 63, 64, 68], "scipyminimizeplugin": [0, 3, 13, 15, 16, 17, 20, 22, 56, 59, 64, 67, 70, 71], "get_default_qpu": [0, 1, 3, 13, 15, 16, 17, 20, 21, 22, 53, 56, 59, 60, 61, 66, 67, 68, 70, 71], "max_cut_appl": [0, 22], "cobyla": [0, 15, 16, 17, 20, 22, 56, 59, 67, 70, 71], "tol": [0, 15, 16, 17, 20, 22, 48, 59, 67, 70, 71], "1e": [0, 3, 15, 16, 17, 20, 22, 47, 48, 59, 60, 61, 67, 70, 71], "5": [0, 1, 3, 7, 8, 16, 17, 19, 20, 21, 22, 28, 49, 51, 53, 54, 56, 57, 59, 60, 61, 64, 67, 70, 71], "option": [0, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 32, 33, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71], "maxit": [0, 15, 16, 17, 20, 22, 48, 59, 67, 70, 71], "200": [0, 15, 16, 17, 20, 22, 48, 71], "combinatorial_result": [0, 16, 17, 20, 22, 71], "print": [0, 1, 3, 4, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 31, 32, 34, 49, 50, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71], "subset": [0, 16, 17, 22, 34, 35, 45, 46, 64, 68], "cost": [0, 1, 7, 8, 9, 10, 13, 22, 28, 50, 56, 57, 60, 61, 64, 67, 70], "0": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 31, 32, 33, 34, 35, 36, 37, 46, 48, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "4": [0, 1, 2, 3, 4, 6, 7, 15, 16, 17, 19, 20, 21, 22, 28, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 67, 70], "1": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 43, 46, 48, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71], "2": [0, 1, 2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 32, 34, 35, 37, 46, 48, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71], "stdin": [0, 7, 8, 16, 17, 20, 21, 22, 32, 64, 68, 71], "13": [0, 1, 16, 17, 19, 20, 22, 53, 54, 64], "futurewarn": [0, 7, 8, 16, 17, 20, 22, 38, 43, 64, 71], "adjacency_matrix": [0, 7, 8, 16, 17, 20, 22, 64, 71], "scipi": [0, 7, 8, 16, 17, 20, 22, 45, 64, 67, 70, 71], "spars": [0, 7, 8, 16, 17, 20, 22, 34, 60, 64, 71], "arrai": [0, 1, 7, 8, 16, 17, 19, 20, 22, 34, 35, 36, 52, 53, 56, 57, 60, 61, 63, 64, 70, 71], "instead": [0, 7, 8, 11, 12, 16, 17, 20, 21, 22, 38, 40, 41, 42, 43, 52, 53, 57, 58, 61, 62, 64, 71], "matrix": [0, 2, 4, 7, 8, 16, 17, 19, 20, 22, 29, 34, 35, 36, 38, 40, 41, 42, 52, 53, 56, 57, 58, 59, 60, 61, 64, 71], "displai": [0, 3, 6, 12, 16, 17, 20, 21, 22, 26, 28, 34, 38, 39, 43, 45, 56, 61, 64, 66, 69, 71], "simulatedann": [0, 16, 17, 20, 22, 36, 38, 39, 71], "to_job": [0, 1, 3, 4, 12, 13, 15, 19, 21, 36, 38, 39, 53, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70], "traceback": [0, 21, 32, 68], "most": [0, 1, 2, 4, 7, 19, 21, 32, 34, 52, 53, 59, 61, 62, 64, 67, 68], "recent": [0, 21, 32, 68], "last": [0, 1, 3, 7, 19, 21, 32, 60, 61, 68], "file": [0, 12, 19, 21, 28, 30, 31, 32, 37, 38, 43, 52, 53, 61, 68], "line": [0, 1, 2, 15, 18, 19, 21, 23, 28, 29, 32, 52, 68], "9": [0, 1, 2, 7, 17, 22, 24, 26, 28, 29, 38, 39, 52, 53, 54, 61, 64, 67], "modul": [0, 4, 14, 19, 21, 28, 32, 33, 35, 37, 38, 42, 44, 53, 54, 55, 56, 57, 58, 60, 61, 62, 68], "typeerror": [0, 21, 53], "__init__": [0, 3, 21], "miss": [0, 64], "requir": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 17, 19, 20, 21, 22, 28, 29, 46, 50, 53, 61, 62, 64, 67, 68, 70, 71], "posit": [0, 4, 17, 19, 20, 53, 60, 64, 70, 71], "argument": [0, 2, 3, 5, 12, 13, 19, 21, 37, 38, 40, 41, 42, 46, 52, 53, 60, 61, 62, 63, 64, 66, 70], "temp_t": [0, 16, 17, 20, 22, 36, 71], "n_step": [0, 16, 17, 20, 22, 36, 60, 71], "analog": [0, 7, 9, 16, 17, 20, 22, 38, 39, 59, 64, 71], "current": [0, 1, 4, 5, 16, 17, 19, 20, 21, 22, 35, 50, 53, 57, 60, 61, 64, 70, 71], "avail": [0, 3, 7, 11, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 30, 34, 35, 37, 38, 42, 52, 54, 55, 56, 57, 58, 59, 60, 64, 68, 69, 70, 71], "thei": [0, 1, 7, 15, 19, 21, 28, 31, 35, 38, 39, 53, 56, 57, 60, 61, 64], "full": [0, 1, 7, 28, 35, 36, 38, 42, 53, 59, 60, 62, 63, 69], "qlm": [0, 7, 8, 9, 12, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 52, 53, 56, 59, 64, 67, 68, 70, 71], "applianc": [0, 35, 36, 38, 39], "kcliqu": [0, 6, 64, 69], "concern": [0, 44, 53], "which": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 28, 29, 30, 32, 34, 35, 36, 37, 46, 47, 50, 51, 53, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71], "ani": [0, 1, 2, 3, 4, 7, 8, 12, 18, 19, 21, 28, 32, 35, 37, 44, 49, 53, 56, 58, 61, 62, 64, 66, 68, 70], "output": [0, 1, 3, 4, 12, 14, 15, 19, 21, 31, 34, 35, 37, 45, 53, 60, 61, 62], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71], "valid": [0, 21, 61], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 15, 19, 21, 24, 26, 28, 33, 35, 37, 50, 51, 53, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70], "word": [0, 7, 37, 51, 61], "obei": [0, 64], "criteria": 0, "right": [0, 1, 3, 7, 11, 28, 35, 48, 51, 52, 53, 60, 61, 62, 64], "howev": [0, 1, 2, 7, 28, 34, 50, 53, 59, 60, 61, 64, 70], "mai": [0, 4, 7, 8, 11, 19, 26, 27, 28, 29, 34, 38, 39, 43, 46, 49, 53, 57, 60, 61, 64, 68, 70], "undirect": [0, 53], "set": [0, 2, 3, 4, 5, 7, 11, 12, 14, 15, 18, 19, 21, 23, 28, 29, 32, 33, 34, 35, 37, 38, 40, 41, 42, 45, 46, 50, 52, 58, 59, 60, 62, 64, 65, 66, 67, 68, 70], "v": [0, 1, 3, 7, 13, 28, 57, 60, 64, 67], "edg": [0, 1, 22], "e": [0, 1, 2, 3, 4, 7, 9, 10, 12, 13, 15, 18, 19, 21, 24, 26, 28, 29, 35, 37, 38, 40, 41, 42, 48, 50, 51, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70], "consist": [0, 3, 7, 10, 15, 28, 35, 36, 46, 50, 52, 53, 60, 61, 64, 68, 70], "subgraph": [0, 17, 20, 22, 71], "connect": [0, 18, 27, 28, 35, 53, 54, 65], "maximum": [0, 7, 11, 28, 35, 47, 48, 51, 53, 61, 64, 70], "need": [0, 1, 3, 5, 7, 8, 9, 10, 15, 21, 22, 26, 28, 35, 36, 37, 38, 42, 44, 46, 52, 53, 56, 57, 59, 60, 61, 62, 64, 68], "spin": [0, 7, 10, 11, 18, 36, 38, 42, 56, 58, 64, 69], "one": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 19, 21, 24, 26, 28, 29, 31, 34, 35, 38, 39, 42, 45, 50, 51, 52, 53, 56, 59, 60, 61, 63, 64, 69, 70], "per": [0, 13, 35], "take": [0, 1, 3, 7, 8, 9, 12, 13, 19, 21, 35, 53, 56, 60, 61, 63, 67, 68], "look": [0, 1, 7, 8, 11, 15, 26, 35, 38, 39, 51, 52, 53, 64, 68], "sa": [0, 7, 26, 28, 36, 64], "equal": [0, 1, 28, 57, 61, 62, 70], "size": [0, 4, 6, 7, 11, 19, 20, 21, 34, 48, 60, 61, 62, 63, 64, 70], "minim": [0, 3, 7, 9, 11, 13, 15, 22, 45, 53, 56, 58, 59, 64, 67, 70], "graphpartit": [0, 17, 64], "graphpartitioninggener": [0, 17], "individu": [0, 26, 28, 46, 62], "condit": [0, 2, 26, 28, 52, 53, 61], "order": [0, 1, 2, 4, 7, 9, 19, 21, 23, 28, 34, 38, 39, 42, 46, 53, 56, 57, 58, 60, 61, 62, 64, 65, 68], "everi": [0, 57, 60], "node": [0, 1, 6, 17, 20, 22, 53, 64, 71], "so": [0, 1, 4, 7, 10, 15, 19, 21, 22, 28, 34, 35, 50, 53, 56, 57, 59, 60, 61, 70], "doe": [0, 3, 7, 10, 21, 28, 34, 35, 46, 53, 61, 62, 68], "properti": [0, 6, 28, 34, 53], "therefor": [0, 1, 16, 17, 20, 21, 22, 28, 36, 52, 60, 64, 71], "we": [0, 1, 2, 4, 5, 7, 8, 11, 15, 19, 21, 28, 32, 33, 35, 36, 46, 48, 50, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70], "correct": [0, 59, 61, 64], "n": [0, 1, 2, 3, 7, 8, 10, 11, 12, 34, 35, 51, 53, 57, 59, 60, 61, 62, 64, 66], "whether": [0, 7, 11, 28, 31, 34, 37, 48, 50, 53, 60, 70], "same": [0, 1, 3, 4, 7, 19, 24, 26, 28, 29, 37, 38, 40, 41, 42, 48, 50, 53, 59, 60, 61, 62, 63, 64, 68, 70], "nn": 0, "our": [0, 1, 3, 7, 9, 11, 12, 13, 15, 21, 25, 26, 30, 35, 44, 56, 59, 61, 62, 64, 68], "graphcolour": [0, 16, 64], "graphcolouringgener": [0, 16], "where": [0, 2, 7, 9, 10, 15, 21, 28, 34, 35, 46, 50, 53, 60, 61, 62, 63, 64, 67, 70], "vertic": 0, "classic": [0, 4, 7, 9, 10, 11, 15, 19, 21, 34, 35, 38, 42, 45, 48, 53, 55, 58, 59, 60, 62, 63, 64, 66, 68, 69, 70], "complex": [0, 4, 7, 8, 19, 34, 35, 53, 61, 64], "known": [0, 3, 7, 10, 28, 35, 50, 53, 70], "approxim": [0, 7, 15, 45, 53, 59, 60, 64, 70], "algorithm": [0, 1, 7, 10, 11, 15, 16, 17, 18, 20, 22, 28, 36, 46, 47, 52, 56, 58, 59, 62, 64, 68, 69, 71], "o": [0, 7, 12, 24, 26, 33, 46, 51, 53, 59, 60, 64, 68], "log": [0, 1, 7, 11, 29, 53, 63], "out": [0, 2, 18, 21, 28, 29, 34, 35, 49, 53, 60, 62, 67, 68], "exist": [0, 21, 28, 61], "complet": [0, 20, 21, 28, 29, 60, 68], "help": [0, 1, 3, 15, 38, 42, 44, 53, 55, 57, 58, 59, 60, 64], "kcliquegener": [0, 6, 20], "smallest": 0, "ha": [0, 1, 3, 4, 7, 13, 19, 21, 28, 30, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 58, 59, 60, 61, 62, 64, 66, 68], "As": [0, 1, 7, 9, 15, 19, 21, 28, 46, 53, 60, 61, 68], "addit": [0, 1, 4, 19, 21, 28, 38, 39, 53, 56, 57, 60, 61, 62, 66], "want": [0, 3, 7, 8, 15, 19, 21, 25, 26, 50, 52, 53, 59, 60, 61, 64, 70], "know": [0, 28, 35, 52, 56, 60, 61], "To": [0, 1, 2, 7, 8, 13, 14, 15, 19, 25, 28, 29, 37, 49, 53, 55, 56, 57, 59, 60, 61, 62, 64], "would": [0, 3, 7, 19, 21, 23, 32, 33, 37, 38, 39, 52, 53, 59, 60, 61, 64], "vertexcov": [0, 6, 64, 71], "vertexcovergener": [0, 6, 71], "more": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 28, 32, 33, 34, 35, 36, 37, 38, 42, 43, 51, 53, 56, 57, 59, 60, 61, 63, 64, 67, 70], "orient": [0, 18], "belong": [0, 50, 70], "first": [0, 1, 3, 4, 7, 10, 15, 17, 19, 21, 22, 23, 33, 34, 35, 37, 52, 53, 54, 56, 59, 60, 61, 62, 63, 64, 68], "well": [0, 2, 7, 9, 10, 15, 18, 19, 21, 28, 38, 39, 53, 56, 57, 58, 64], "via": [0, 1, 2, 4, 7, 9, 11, 12, 19, 21, 38, 39, 48, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 67, 69], "real": [0, 7, 33, 38, 39, 53, 63, 64, 69], "potenti": [0, 2, 60, 61], "sum": [0, 2, 3, 7, 8, 13, 21, 38, 39, 53, 60, 62, 63, 64], "close": [0, 1, 21, 56, 61, 64], "possibl": [0, 1, 2, 7, 8, 9, 12, 19, 21, 28, 36, 38, 39, 44, 48, 52, 53, 58, 60, 61, 64, 67, 68], "obtain": [0, 28, 48, 53, 58, 59, 60], "answer": 0, "numberpartit": [0, 64], "vector": [0, 7, 15, 19, 35, 52, 53, 60, 64], "c": [0, 2, 4, 5, 7, 8, 9, 12, 14, 19, 28, 29, 31, 35, 38, 42, 46, 50, 51, 52, 53, 57, 59, 60, 61, 62, 64, 68, 69, 70], "b": [0, 1, 7, 12, 17, 20, 28, 51, 53, 59, 60, 62, 64, 71], "m": [0, 7, 26, 37, 60, 64], "": [0, 1, 2, 3, 7, 15, 21, 28, 33, 34, 36, 37, 50, 51, 52, 53, 54, 56, 59, 60, 61, 62, 64, 67, 68, 70], "time": [0, 1, 4, 7, 8, 11, 15, 19, 21, 28, 29, 35, 36, 37, 45, 50, 59, 60, 61, 62, 64, 67, 68, 70], "x": [0, 1, 2, 7, 8, 11, 12, 14, 15, 19, 32, 34, 35, 37, 46, 52, 53, 54, 57, 59, 60, 62, 64, 67], "compos": [0, 1, 3, 4, 13, 14, 15, 19, 21, 23, 31, 32, 33, 35, 37, 38, 42, 53, 60, 61, 63, 66, 69], "maxim": [0, 7, 13, 53, 61, 64, 70], "dot": [0, 35, 62], "product": [0, 1, 4, 7, 8, 19, 28, 50, 53, 59, 60, 61, 64, 70], "bilp": [0, 64], "valu": [0, 2, 4, 7, 8, 10, 11, 15, 19, 21, 28, 33, 34, 35, 36, 37, 46, 47, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 67, 68, 70], "although": 0, "sqa": [0, 7, 36, 64], "onli": [0, 1, 2, 6, 7, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 29, 31, 34, 35, 46, 50, 52, 53, 56, 58, 59, 61, 62, 64, 67, 70, 71], "present": [0, 7, 10, 11, 13, 21, 28, 35, 36, 53, 56, 60, 61, 64], "its": [0, 1, 3, 7, 15, 28, 34, 36, 38, 42, 46, 53, 56, 57, 58, 59, 60, 61, 64, 67, 68], "hint": 0, "capabl": [0, 37], "shown": [0, 16, 17, 20, 22, 36, 51, 71], "rang": [0, 2, 3, 7, 15, 21, 53, 60, 61, 64, 67], "togeth": [0, 21, 28, 53], "averag": [0, 68], "wa": [0, 1, 7, 11, 28, 35, 37, 51, 53, 60, 61], "defin": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 19, 21, 22, 27, 28, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 45, 53, 55, 56, 58, 59, 60, 61, 62, 64, 70], "frac": [0, 2, 7, 8, 11, 15, 48, 53, 57, 60, 62, 63, 64], "text": [0, 28, 31, 35, 52, 61], "planar": 0, "random": [0, 7, 10, 15, 21, 36, 49, 50, 53, 58, 59, 60, 63, 64, 67, 70], "gset": 0, "dataset": 0, "20": [0, 1, 7, 8, 16, 17, 22, 35, 54, 61, 64], "tree": [0, 1, 61, 63, 64], "count": [0, 1, 13, 38, 39, 45, 53, 61, 64], "10": [0, 1, 7, 8, 13, 17, 19, 22, 24, 26, 35, 38, 43, 48, 50, 52, 53, 54, 60, 61, 62, 64, 67, 68, 70, 71], "000": [0, 3, 21, 66], "98": [0, 36], "mostli": [0, 53], "sec": 0, "up": [0, 1, 2, 4, 7, 11, 19, 21, 46, 57, 59, 60, 61, 62, 67], "second": [0, 1, 3, 15, 17, 22, 35, 53, 54, 60, 61, 62, 64, 68], "leighton": 0, "dimac": 0, "60": [0, 28, 54], "24": [0, 17, 22, 54, 64], "88": 0, "95": 0, "99": 0, "few": [0, 1, 7, 8, 15, 61], "case": [0, 4, 7, 9, 10, 19, 21, 28, 35, 50, 51, 53, 57, 60, 61, 63, 64, 68, 70], "27": [0, 17, 22, 54], "bhoslib": 0, "450": 0, "4000": 0, "dure": [0, 2, 7, 8, 21, 28, 36, 52, 53, 59, 60, 61, 62], "21": [0, 17, 22, 54], "oei": 0, "smaller": [0, 61], "larger": [0, 7, 9, 60, 61], "30": [0, 17, 22, 35, 38, 39, 54], "non": [0, 2, 4, 5, 7, 8, 10, 19, 28, 38, 40, 41, 42, 46, 53, 61, 63], "40": [0, 53, 54], "instantli": 0, "15": [0, 7, 11, 13, 17, 22, 37, 53, 54, 60, 62], "describ": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 19, 21, 28, 35, 38, 40, 41, 42, 45, 48, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 67, 70], "either": [0, 1, 2, 16, 17, 20, 21, 22, 28, 34, 37, 51, 53, 59, 60, 63, 64, 71], "q": [0, 1, 2, 7, 12, 14, 31, 32, 35, 37, 60, 61, 62, 64], "j": [0, 1, 7, 10, 11, 36, 38, 39, 57, 59, 60, 64, 66], "h": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 31, 32, 34, 36, 37, 46, 48, 52, 53, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 71], "One": [0, 7, 8, 35, 38, 39, 52, 53, 60], "alwai": [0, 3, 7, 10, 13, 14, 19, 52, 53, 60, 61, 63, 64], "extract": [0, 4, 6, 7, 19, 21, 35, 36, 57, 61, 62, 64], "numpi": [0, 1, 3, 7, 8, 15, 16, 20, 21, 34, 35, 36, 38, 43, 53, 56, 57, 59, 60, 63, 64, 67, 70], "fed": [0, 52, 53, 64, 68], "object": [0, 1, 2, 3, 4, 18, 21, 23, 28, 34, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 68, 69], "nativ": [0, 1, 46, 53, 68], "python": [0, 2, 5, 12, 13, 15, 18, 19, 24, 26, 27, 29, 31, 33, 34, 38, 39, 42, 52, 53, 61], "librari": [0, 1, 12, 18, 19, 25, 26, 29, 35, 45, 52, 56], "ocean": 0, "snippet": [0, 1, 15], "opt": [0, 6, 7, 8, 16, 17, 20, 22, 29, 36, 69, 71], "specifi": [0, 1, 2, 7, 8, 9, 10, 13, 15, 29, 35, 36, 37, 46, 53, 60, 61, 62, 63, 64], "add_nodes_from": [0, 16, 20, 64], "arang": [0, 16, 20, 64], "add_edges_from": [0, 16, 20, 64], "impos": 0, "constraint": [0, 53, 61, 64, 69], "encod": [0, 7, 8, 9, 11, 13, 35, 36, 53, 61, 69], "01": [0, 13, 38, 43, 53, 68, 70], "vertex_cover_problem": [0, 64], "offset": [0, 7, 36, 38, 39, 53, 61, 64], "get_q_and_offset": [0, 64], "dimod": 0, "binaryquadraticmodel": 0, "bqm": 0, "pip": [0, 26], "instal": [0, 18, 24, 27, 28, 30, 60], "from_numpy_matrix": 0, "offer": [1, 19, 21, 28, 52], "allow": [1, 2, 5, 6, 7, 9, 10, 19, 21, 28, 37, 50, 53, 56, 57, 58, 59, 61, 62, 63, 64, 67, 68], "veri": [1, 3, 16, 17, 20, 21, 22, 38, 42, 45, 49, 53, 56, 57, 59, 60, 61, 64, 70, 71], "effici": [1, 2, 7, 9, 11, 38, 40, 41, 42, 53, 56, 58, 59, 67, 69], "synthesi": [1, 7, 9, 64], "larg": [1, 7, 8, 10, 19, 46, 53, 60, 64], "you": [1, 7, 8, 9, 14, 15, 19, 21, 23, 25, 26, 28, 29, 30, 32, 33, 34, 37, 38, 39, 42, 43, 44, 50, 52, 53, 55, 56, 57, 58, 61, 62, 64, 67, 68], "parameter": [1, 50, 59, 70], "think": [1, 52, 60], "quit": [1, 14, 21, 64], "conveni": 1, "hardwar": [1, 3, 14, 45, 56, 61, 69], "depend": [1, 2, 3, 7, 8, 9, 11, 26, 27, 35, 36, 45, 50, 52, 53, 59, 60, 61, 63, 64, 70], "wrap": [1, 6, 33, 34, 35, 36, 37, 53, 61, 62, 67], "routin": [1, 2, 4, 15, 19, 21, 46, 53, 60, 61, 63], "insid": [1, 17, 19, 20, 21, 26, 35, 37, 45, 46, 52, 53, 60, 61, 62, 64, 67, 69, 70, 71], "black": 1, "box": [1, 61, 62], "come": [1, 2, 7, 8, 12, 15, 17, 19, 20, 21, 26, 30, 35, 36, 59, 60, 62, 63, 64, 65, 67, 71], "simul": [1, 5, 7, 15, 18, 19, 28, 33, 37, 40, 41, 52, 53, 61, 62, 64, 65, 68], "properli": 1, "might": [1, 4, 5, 7, 8, 19, 21, 31, 46, 52, 53, 57, 59, 61, 62, 64], "inform": [1, 4, 15, 16, 17, 19, 20, 22, 28, 29, 35, 37, 38, 42, 45, 52, 53, 56, 57, 59, 60, 61, 63, 71], "abl": [1, 3, 5, 53, 61, 64], "g": [1, 2, 4, 7, 15, 18, 19, 21, 24, 26, 28, 29, 37, 38, 40, 41, 42, 48, 50, 51, 53, 59, 60, 61, 62, 64, 65, 70], "attach": [1, 5, 19, 28, 53, 61, 67], "sub": [1, 4, 19, 28, 53, 62], "simplic": [1, 56, 59], "input": [1, 7, 12, 14, 16, 17, 20, 21, 22, 23, 31, 35, 37, 38, 40, 41, 42, 53, 56, 57, 60, 61, 62, 63, 64, 70, 71], "signatur": [1, 2, 61], "np": [1, 3, 7, 8, 10, 11, 15, 16, 20, 21, 35, 36, 50, 52, 53, 56, 57, 59, 60, 61, 63, 67, 70], "lang": [1, 2, 3, 4, 5, 13, 14, 15, 19, 21, 52, 53, 56, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70], "aqasm": [1, 3, 4, 12, 13, 14, 15, 18, 19, 21, 32, 35, 45, 52, 53, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70], "def": [1, 2, 3, 13, 15, 21, 52, 61, 64], "phase_matrix": 1, "theta": [1, 2, 15, 48, 50, 52, 53, 56, 59, 60, 61, 67, 70], "diag": 1, "exp": [1, 50, 53, 61, 70], "1j": [1, 52, 61], "phase_g": 1, "float": [1, 2, 3, 13, 15, 16, 17, 19, 20, 21, 22, 34, 35, 47, 48, 50, 52, 53, 56, 59, 60, 61, 64, 67, 70, 71], "matrix_gener": [1, 52, 53, 61], "Or": [1, 23, 33, 37, 61], "altern": [1, 7, 9, 15, 34, 38, 42, 57, 60, 64, 67], "set_matrix_gener": [1, 53], "similarli": [1, 2, 16, 17, 20, 22, 52, 53, 57, 61, 64, 71], "qroutin": [1, 2, 15, 46, 52, 56, 60, 61, 62, 63], "cnot": [1, 2, 3, 14, 15, 21, 31, 32, 34, 37, 51, 52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 68], "ph": [1, 2, 4, 19, 34, 46, 52, 53, 62], "c_phase": 1, "wire": [1, 15, 52, 61], "new_wir": [1, 15, 52, 61], "c_phase_g": 1, "circuit_gener": [1, 53, 64], "set_circuit_gener": [1, 53], "final": [1, 3, 7, 8, 13, 15, 19, 21, 35, 46, 52, 53, 56, 59, 61, 62, 64, 67, 68, 70], "abstract": [1, 2, 4, 7, 18, 19, 21, 61, 62, 64, 69, 70], "variabl": [1, 4, 7, 16, 17, 19, 20, 21, 22, 36, 37, 48, 59, 61, 64, 70, 71], "qft": [1, 2, 4, 19, 52, 61], "sole": [1, 28], "int": [1, 2, 4, 6, 15, 16, 19, 20, 34, 35, 36, 37, 47, 48, 49, 50, 51, 53, 54, 60, 61, 62, 63, 64, 70], "lambda": [1, 2, 48, 53, 60, 61], "static": [1, 53, 64], "check": [1, 3, 14, 21, 38, 40, 41, 42, 50, 53, 70], "appli": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 19, 28, 34, 35, 38, 39, 52, 53, 56, 59, 60, 61, 62, 65, 66], "number": [1, 3, 4, 7, 9, 11, 13, 15, 16, 19, 21, 22, 29, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 70, 71], "qubit": [1, 2, 3, 7, 12, 13, 14, 15, 21, 23, 31, 32, 33, 34, 35, 37, 45, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 69], "even": [1, 28, 36, 38, 39, 52, 60, 61, 66, 67], "though": [1, 34], "abov": [1, 7, 15, 19, 28, 35, 50, 53, 61, 63, 68, 70], "mechan": [1, 28, 53, 67, 68], "still": [1, 4, 7, 11, 19, 34, 52, 58, 60, 61, 64, 65, 66], "seem": 1, "bit": [1, 2, 4, 7, 8, 15, 19, 21, 24, 26, 34, 35, 52, 53, 60, 62, 64, 66], "clunki": 1, "separ": [1, 23, 28, 32, 33, 37, 58, 62], "build_gat": [1, 2, 61, 62], "decor": [1, 2, 61, 62], "remov": [1, 38, 43, 53, 61, 64, 69], "lot": [1, 7, 15, 21, 61, 64], "clunky": 1, "turn": [1, 21, 53, 61, 62, 64, 68, 69], "walsh_hadamard": 1, "wht": 1, "nbqbit": [1, 3, 4, 15, 19, 21, 46, 53, 54, 56, 59, 60, 61, 62], "prog": [1, 3, 4, 13, 14, 15, 19, 21, 38, 40, 41, 42, 53, 56, 59, 60, 61, 62, 63, 65, 66, 67, 70], "qbit": [1, 2, 3, 4, 13, 15, 19, 21, 46, 52, 53, 56, 61, 62, 63, 64, 65, 66, 67, 68, 70], "qalloc": [1, 3, 4, 13, 14, 15, 19, 21, 52, 53, 56, 59, 60, 61, 62, 63, 65, 66, 67, 68, 70], "contain": [1, 2, 3, 4, 6, 7, 9, 12, 16, 17, 19, 20, 21, 22, 26, 28, 30, 31, 35, 36, 37, 46, 52, 53, 54, 57, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71], "length": [1, 3, 4, 19, 21, 35, 53, 54, 61, 64], "to_circ": [1, 3, 4, 5, 13, 14, 15, 19, 21, 23, 32, 33, 37, 38, 40, 41, 42, 52, 53, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70], "construct": [1, 2, 7, 9, 11, 15, 19, 21, 38, 42, 47, 53, 55, 56, 60, 61, 63, 64, 65], "subroutin": [1, 4, 5, 19], "without": [1, 4, 14, 19, 28, 30, 35, 49, 59, 61, 64, 69], "underli": [1, 2, 28, 53, 57, 58, 61, 62, 65], "consid": [1, 2, 12, 15, 34, 37, 46, 52, 53, 57, 59, 61, 62, 63, 64, 66], "adder": [1, 61, 62], "add": [1, 3, 5, 6, 25, 28, 46, 53, 56, 61, 62, 64, 65], "n1": 1, "n2": 1, "run": [1, 7, 9, 12, 15, 16, 17, 18, 20, 21, 22, 28, 29, 30, 33, 35, 37, 38, 39, 47, 53, 59, 64, 65, 68, 69, 70, 71], "error": [1, 18, 19, 21, 28, 38, 43, 53, 59, 68], "singl": [1, 2, 3, 4, 7, 10, 14, 19, 21, 33, 34, 35, 37, 46, 53, 57, 61, 63, 64], "attempt": [1, 37], "fail": [1, 26, 28, 38, 40, 41, 42, 53, 65], "now": [1, 15, 21, 26, 38, 39, 40, 41, 42, 53, 55, 56, 57, 58, 59, 60, 64, 68], "let": [1, 2, 15, 21, 38, 39, 51, 56, 57, 59, 60, 62, 68], "imagin": [1, 2], "own": [1, 3, 4, 15, 19, 28, 45, 52, 53, 64], "ly": 1, "namespac": [1, 2, 12, 19, 62], "foo": [1, 53, 61], "Its": [1, 7, 8, 53, 55, 59, 60, 61, 64], "my_add": 1, "length1": 1, "length2": 1, "proper": [1, 7, 9, 21, 53, 61], "what": [1, 7, 19, 35, 61, 62], "u": [1, 2, 21, 37, 56, 57, 59, 60, 61, 62, 68], "do": [1, 5, 7, 8, 13, 15, 21, 26, 28, 29, 34, 35, 53, 56, 57, 59, 60, 61, 64], "done": [1, 2, 3, 37, 52, 53, 57, 59, 60, 61, 62, 64], "keyword": [1, 2, 37, 38, 40, 41, 42, 53, 61], "updat": [1, 2, 7, 10, 28, 33, 35, 39, 48, 52, 53, 55, 56, 59, 60, 61, 62, 64], "piec": [1, 4, 7, 8, 19, 53, 61, 63, 64, 68], "part": [1, 7, 14, 21, 38, 42, 53, 55, 60, 61], "stai": 1, "probabl": [1, 3, 7, 8, 10, 13, 15, 19, 21, 34, 35, 53, 60, 61, 66, 68], "your": [1, 4, 14, 19, 25, 26, 28, 29, 30, 32, 34, 35, 37, 38, 39, 44, 52, 53, 55, 57, 58, 64, 70], "equival": [1, 7, 9, 11, 12, 28, 35, 53, 59, 61, 68], "had": [1, 35], "mani": [1, 3, 7, 11, 38, 42, 53, 56, 57, 58, 59, 63, 64, 67, 68], "common": [1, 7, 11, 19, 28, 64], "scheme": [1, 67], "revers": [1, 15, 21, 28, 29, 34, 53, 56, 61, 62, 64], "particular": [1, 16, 17, 19, 20, 21, 22, 28, 35, 50, 53, 61, 62, 64, 65, 67, 70, 71], "usual": [1, 7, 8, 9, 19, 38, 39, 52, 53, 59, 60, 64, 69], "free": [1, 28, 51, 53, 56, 59, 61], "resourc": [1, 53], "support": [1, 18, 19, 24, 26, 28, 29, 31, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 52, 53, 63, 64, 67, 68], "open": [1, 21, 29, 30, 38, 42, 53, 55, 61, 67], "store": [1, 2, 4, 19, 21, 35, 37, 38, 40, 41, 42, 46, 52, 53, 60, 61, 62, 64], "intern": [1, 5, 28, 47, 53, 60, 61, 64], "pop": [1, 21, 61], "dagger": [1, 4, 7, 9, 19, 51, 53, 57, 59, 60, 61], "Of": [1, 15, 21, 52, 68], "cours": [1, 7, 8, 11, 15, 21, 52, 68], "nest": 1, "system": [1, 7, 8, 10, 11, 18, 21, 28, 38, 42, 56, 57, 58, 59, 63, 64, 69], "fresh": [1, 21, 46, 53, 61, 64], "declar": [1, 2, 4, 7, 19, 28, 37, 53, 61], "set_ancilla": [1, 61], "being": [1, 7, 10, 24, 26, 34, 35, 61, 68], "upon": [1, 19, 21, 28, 53, 58, 60, 64, 68], "dynam": [1, 4, 7, 8, 19, 52, 58, 61, 70], "made": [1, 28, 36, 58, 60, 61, 68], "recurs": [1, 61, 64], "accro": 1, "thing": [1, 7, 15, 38, 42, 62], "ensur": [1, 26, 64], "freed": [1, 61], "befor": [1, 3, 5, 7, 8, 24, 26, 28, 29, 46, 60, 61, 66, 67], "leav": [1, 4, 14, 19, 37, 64], "rangl": [1, 3, 7, 8, 9, 13, 15, 34, 35, 48, 51, 53, 60, 61, 62, 63, 64, 66, 67, 68], "state": [1, 3, 7, 8, 9, 10, 11, 13, 15, 19, 21, 28, 34, 35, 36, 38, 39, 51, 52, 53, 56, 58, 59, 60, 61, 62, 64, 66, 67], "consequ": [1, 7, 53, 61, 64], "qftarith": [1, 2, 4, 19, 52, 53, 62], "classarith": [1, 52, 62], "No": [1, 14, 27, 32, 35, 37], "write": [1, 2, 7, 13, 15, 18, 28, 45, 56, 57, 60, 61, 62, 67], "base": [1, 3, 5, 7, 11, 27, 28, 34, 35, 38, 42, 45, 47, 48, 52, 55, 56, 58, 59, 60, 61, 67, 70], "aglorithm": 1, "sometim": [1, 7, 65], "hard": [1, 7, 10, 11, 13, 35], "translat": [1, 7, 27, 28, 36, 38, 42, 64], "temporari": [1, 28, 45, 61], "intermedi": [1, 3, 15, 19, 35, 53], "quickli": [1, 21], "becom": [1, 21, 28, 29, 53, 67], "overwhelm": 1, "fair": 1, "necessarili": [1, 15, 28, 68], "interest": [1, 7, 11, 51, 57, 59, 60, 67], "nice": [1, 35, 67], "featur": [1, 7, 21, 25, 26, 28, 52, 55, 58, 59, 60, 64, 67], "complic": [1, 15, 61], "high": [1, 7, 10, 11, 15, 16, 17, 20, 22, 35, 52, 53, 60, 61, 64, 67, 71], "er": 1, "level": [1, 7, 9, 15, 21, 35, 38, 42, 52, 53, 56, 57, 58, 59, 60, 67], "It": [1, 2, 7, 8, 9, 10, 12, 21, 34, 35, 36, 38, 39, 40, 41, 42, 50, 53, 56, 58, 59, 60, 61, 63, 64, 65, 68, 70], "regist": [1, 4, 19, 53, 61, 62, 63, 68], "qint": [1, 61], "directli": [1, 2, 7, 9, 13, 27, 34, 35, 52, 53, 56, 58, 59, 61, 64, 67, 68], "perform": [1, 5, 7, 11, 15, 19, 21, 28, 34, 35, 36, 46, 47, 48, 51, 53, 59, 60, 61, 62, 63, 64, 67, 68], "oper": [1, 2, 3, 4, 7, 15, 19, 21, 35, 38, 39, 42, 47, 53, 55, 56, 58, 59, 60, 61, 62, 64, 67, 68], "comparison": [1, 61], "qint1": [1, 61], "qint2": [1, 61], "unimpl": 1, "circuit_ab": 1, "circuit_qft": [1, 62], "carri": [1, 18, 28, 35, 49, 52, 60, 61, 63, 68], "circuit_class": [1, 62], "subsect": 1, "detail": [1, 4, 7, 8, 9, 15, 19, 21, 35, 36, 46, 53, 55, 56, 57, 59, 60, 61, 63, 64, 70], "qbool": [1, 61], "simplest": [1, 53, 67], "qboolarrai": [1, 61], "other": [1, 7, 18, 26, 27, 28, 29, 31, 35, 37, 38, 39, 42, 50, 51, 53, 55, 59, 60, 70], "ad": [1, 19, 23, 32, 33, 37, 38, 39, 40, 41, 42, 43, 58, 61, 62], "correspond": [1, 2, 4, 7, 9, 19, 31, 32, 33, 34, 35, 36, 37, 38, 39, 46, 51, 52, 53, 59, 60, 61, 63, 64, 68, 69], "sinc": [1, 7, 8, 19, 21, 22, 37, 52, 58, 59, 61, 62, 64, 68], "rout": [1, 61], "xor": [1, 15, 61, 64], "and_expr": [1, 61], "expr1": 1, "expr2": 1, "how": [1, 2, 7, 9, 10, 11, 15, 21, 28, 53, 56, 57, 59, 60, 61, 63, 64, 68], "good": [1, 15, 28, 59, 60], "t": [1, 2, 4, 7, 8, 10, 11, 16, 17, 19, 20, 21, 22, 23, 28, 31, 32, 33, 34, 35, 36, 37, 52, 53, 56, 59, 60, 61, 64, 67, 71], "append": [1, 12, 21, 53, 64], "sequenc": [1, 2, 53, 61, 63], "were": [1, 7, 11, 35], "produc": [1, 7, 8, 9, 19, 36, 60, 61, 63, 64, 65], "q_4": 1, "term": [1, 7, 15, 17, 19, 20, 26, 28, 46, 53, 56, 57, 58, 59, 60, 61, 64, 67, 68, 71], "anoth": [1, 4, 14, 19, 21, 27, 28, 38, 39, 53, 56, 61, 62, 66], "q_5": 1, "toffoli": [1, 2, 61, 62], "OR": [1, 4, 19, 28], "q_3": 1, "de": [1, 53], "morgan": 1, "law": [1, 28], "NOTS": 1, "AND": [1, 2, 4, 19, 28, 61, 64], "notic": [1, 2, 21, 28, 53, 62, 68], "inde": [1, 7], "automat": [1, 7, 8, 26, 38, 42, 46, 53, 58, 59, 60, 61, 62, 64, 67], "flag": 1, "keep": [1, 3, 15, 45, 61, 66, 67, 69], "mind": [1, 57], "procedur": [1, 2, 21, 60], "combin": [1, 7, 28, 60, 61, 64, 68], "context": [1, 7, 56], "copi": [1, 26, 28, 34, 53, 60, 61], "exit": 1, "block": [1, 15], "fact": [1, 4, 19, 28, 68], "just": [1, 7, 8, 52], "syntact": 1, "sugar": 1, "start": [1, 2, 4, 7, 9, 11, 18, 19, 21, 26, 30, 35, 45, 49, 53, 56, 60, 61, 64, 67, 68], "releas": [1, 7, 8, 18, 39, 40, 41, 42, 43, 53, 61, 64], "later": [1, 21, 37, 61, 62], "free_ancilla": [1, 61], "cannot": [1, 28, 34], "whose": [1, 4, 7, 8, 9, 15, 19, 35, 38, 39, 46, 56, 61, 64], "should": [1, 3, 4, 5, 7, 13, 19, 21, 23, 28, 32, 33, 36, 37, 38, 40, 41, 42, 43, 50, 53, 56, 57, 58, 60, 61, 62, 64, 66, 67, 70], "least": [1, 7, 9, 19, 21, 28, 34, 38, 42, 53], "flip": [1, 7, 10, 15, 52, 53, 56, 61, 64], "basi": [1, 7, 8, 15, 19, 28, 35, 38, 42, 46, 53, 55, 56, 57, 58, 61, 62, 68], "verifi": [1, 29], "expr": [1, 53], "amplitud": [1, 15, 19, 34, 35, 45, 53, 62, 68], "fals": [1, 4, 5, 6, 13, 14, 19, 21, 23, 31, 32, 33, 34, 37, 48, 49, 50, 53, 60, 61, 62, 64, 66, 70], "49999999999999994": 1, "0j": [1, 15, 57, 60, 68], "true": [1, 4, 5, 6, 7, 8, 13, 14, 19, 21, 23, 32, 33, 34, 35, 37, 38, 40, 41, 42, 46, 48, 53, 59, 60, 61, 64, 66], "11": [1, 3, 13, 15, 17, 19, 22, 28, 54, 56, 61, 64, 68], "set_valu": [1, 61], "content": [1, 4, 7, 19, 26, 28, 30, 38, 43, 53, 61, 62], "multipl": [1, 4, 19, 28, 38, 39, 53, 58, 59, 60, 61, 62], "trigger": [1, 19, 28, 61], "circuit1": [1, 53], "circuit2": [1, 53], "op": [1, 4, 15, 19, 21, 32, 35, 38, 39, 53, 60, 61, 63, 64, 67], "iterate_simpl": [1, 4, 19, 21, 31, 32, 53, 61, 63, 64, 67], "8": [1, 6, 7, 8, 17, 20, 21, 22, 24, 26, 28, 29, 54, 56, 62, 63, 64, 67], "7": [1, 17, 19, 20, 21, 22, 24, 26, 28, 43, 53, 54, 56, 57, 59, 60, 64, 67], "empti": [1, 2, 53, 56, 61], "did": [1, 2, 53], "hold": [1, 28, 46, 52, 62, 68], "qint3": [1, 61], "depth": [1, 7, 9, 53, 56, 61, 64], "mult": [1, 53, 61, 62], "14": [1, 7, 11, 13, 17, 19, 22, 54, 61], "12": [1, 6, 13, 17, 19, 22, 54, 60, 61, 64], "compar": [1, 34, 53, 62], "thu": [1, 5, 7, 8, 15, 19, 52, 57, 59, 60, 61, 63, 64, 65, 68], "increment": 1, "cast_to": [1, 61], "usag": [1, 4, 19, 45, 53, 55, 61, 63, 65, 67], "cast": [1, 6, 37, 53, 58, 61], "new": [1, 4, 19, 21, 25, 35, 37, 53, 56, 58, 60, 61, 64, 69, 70], "re": [1, 4, 12, 19, 21, 28, 48, 53, 56], "constant": [1, 2, 7, 8, 17, 20, 51, 52, 53, 56, 59, 60, 62, 64, 70, 71], "sai": [1, 60], "anc": 1, "35355339059327334": 1, "323307507451124e": 1, "17j": 1, "3535533905932733": 1, "034254676965732e": 1, "3535533905932734": 1, "0884348908992939e": 1, "16j": 1, "54030915644243e": 1, "3535533905932735": 1, "703410071228764e": 1, "353553390593273": 1, "2696513998078917e": 1, "35355339059327306": 1, "0509864824017613e": 1, "3535533905932732": 1, "6183876264232977e": 1, "straightforward": [1, 7, 12, 21, 53, 64, 68], "simpl": [1, 2, 3, 5, 7, 8, 9, 15, 16, 17, 20, 21, 22, 35, 38, 43, 45, 49, 53, 56, 59, 61, 64, 68, 70, 71], "act": [1, 2, 4, 13, 19, 28, 36, 53, 57, 59, 63, 64], "problem": [1, 3, 6, 8, 9, 10, 11, 15, 16, 17, 20, 22, 36, 50, 53, 55, 57, 59, 60, 67, 69, 70, 71], "clean": 1, "functool": [1, 3], "reduc": [1, 3, 28, 56, 60, 61, 64], "coloring_oracl": 1, "bitlength": [1, 62], "_": [1, 15, 21, 48, 51, 57, 60, 61, 62, 66], "path_graph": 1, "format": [1, 4, 12, 18, 19, 21, 27, 28, 32, 33, 35, 52, 53, 59, 60, 61, 64, 67], "len": [1, 3, 4, 19, 21, 35, 38, 40, 41, 42, 61, 64, 71], "19": [1, 17, 22, 54, 62], "vertex": [1, 45, 64, 69], "formula": [1, 2, 4, 7, 19, 35, 53, 60, 64, 68], "compute\u0441": 1, "c_i": [1, 46], "neq": [1, 7, 8], "c_j": [1, 60], "loop": [1, 35], "Then": [1, 13, 15, 30, 32, 35, 51, 60, 61, 63], "control": [1, 2, 4, 15, 19, 21, 28, 34, 35, 38, 40, 41, 42, 45, 53, 60, 61, 63], "z": [1, 2, 3, 7, 11, 15, 34, 37, 46, 52, 53, 57, 60, 61, 64, 68], "asymptot": [1, 51], "save": [1, 19, 21, 37, 53, 61], "increas": [1, 7, 8, 9, 10, 21, 51, 53, 59, 60, 61], "counter": 1, "enough": [1, 7, 10, 19, 46, 56], "exactli": [1, 15, 61, 64], "number_of_edg": [1, 54], "bit_length": 1, "far": [1, 28, 56], "frugal": 1, "didn": [1, 4, 19], "mention": [1, 19, 50, 68, 70], "everyth": [1, 15, 59], "handl": [1, 4, 7, 9, 15, 18, 19, 57, 60, 61, 64, 65], "circuit": [2, 3, 4, 7, 9, 12, 13, 14, 15, 18, 21, 26, 27, 28, 34, 35, 38, 39, 40, 41, 42, 43, 46, 51, 55, 58, 59, 62, 64, 66, 67, 69, 70], "languag": [2, 12, 15, 28, 45], "command": [2, 18, 26, 29, 31, 32, 45, 52], "purpos": [2, 5, 19, 28, 46, 53, 59, 60, 61, 64, 65], "serial": [2, 4, 12, 19, 35, 38, 39, 52, 53], "quantum": [2, 3, 5, 7, 12, 14, 15, 18, 21, 26, 27, 28, 36, 38, 39, 40, 41, 42, 46, 53, 54, 57, 58, 59, 62, 63, 64, 67, 70], "strongli": [2, 50, 70], "advis": [2, 28, 34], "binari": [2, 7, 12, 35, 36, 37, 53, 59, 64], "dump": [2, 4, 12, 19, 37, 38, 39, 53, 67], "rather": [2, 3, 21, 52, 57, 60, 61], "matric": [2, 35, 50, 53, 59, 60, 61, 64, 70], "similar": [2, 7, 17, 20, 28, 38, 42, 60, 64, 71], "abstractg": [2, 4, 19, 52, 53, 61, 62, 67], "bodi": [2, 4, 5, 19, 56, 57, 61], "ressourc": 2, "constitu": [2, 53], "begin": [2, 3, 7, 10, 12, 38, 42], "cbit": [2, 12, 31, 35, 53, 61], "end": [2, 4, 7, 11, 12, 19, 26, 28, 29, 35, 46, 49, 53, 60, 61, 64, 67], "syntax": [2, 4, 19, 28, 53, 61], "straightfoward": 2, "name": [2, 4, 19, 28, 32, 37, 38, 40, 41, 42, 52, 53, 57, 61, 62, 64, 68], "my_z": 2, "pyaqasm": [2, 4, 18, 19, 23, 33, 37, 45, 52, 53, 61, 62, 63, 67], "parametr": [2, 7, 9, 15, 35, 50, 53, 56, 60, 61, 64, 67, 70], "collect": [2, 7, 9, 15, 28, 38, 39, 46, 48, 50, 53, 56, 61, 64, 67, 70], "involv": [2, 7, 8, 10, 64], "param": [2, 21, 53, 61, 70], "ariti": [2, 4, 19, 35, 46, 52, 53, 60, 61, 62, 64, 67], "string": [2, 4, 7, 8, 15, 19, 31, 48, 53, 60, 61, 64], "my_rxrz": 2, "my_qft": 2, "after": [2, 19, 21, 28, 29, 36, 37, 50, 51, 53, 61, 64, 66, 70], "qbit_list": [2, 61], "referenc": 2, "predefin": 2, "head": [2, 29], "my_cz": 2, "ctrl": [2, 3, 4, 14, 15, 19, 37, 52, 53, 61], "dag": [2, 37, 38, 39, 52, 53, 60, 61], "conj": [2, 61], "tran": [2, 61], "y": [2, 34, 37, 46, 52, 53, 57, 59, 60, 61], "rx": [2, 3, 13, 21, 34, 37, 50, 52, 53, 56, 59, 61, 70], "ry": [2, 15, 21, 34, 37, 46, 50, 52, 53, 56, 59, 60, 61, 63, 67, 70], "rz": [2, 4, 19, 34, 37, 50, 52, 59, 60, 61, 67, 70], "pi": [2, 15, 21, 46, 52, 53, 59, 60, 61, 62], "measur": [2, 4, 7, 8, 19, 23, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 45, 46, 50, 51, 52, 53, 56, 59, 60, 61, 62, 66, 68, 70], "mea": [2, 12, 35], "If": [2, 4, 7, 8, 9, 12, 14, 15, 19, 21, 23, 25, 26, 28, 32, 33, 34, 35, 37, 38, 39, 44, 48, 52, 53, 57, 60, 61, 62, 63, 64, 66, 70], "index": [2, 3, 4, 19, 21, 35, 48, 53, 60, 61, 64, 66], "indic": [2, 4, 19, 28, 35, 37, 56, 60, 61, 62], "reset": [2, 4, 19, 34, 35, 52, 53, 61, 62], "manipul": [2, 4, 7, 11, 15, 18, 19, 35, 38, 42, 45, 57, 69], "chang": [2, 7, 8, 10, 13, 15, 21, 28, 29, 34, 38, 42, 46, 53, 56, 58, 59, 60, 62, 70], "boolean": [2, 4, 7, 19, 35, 37, 53, 64, 66], "logic": [2, 35, 53, 59, 61, 62, 64], "stand": [2, 60, 67], "express": [2, 7, 28, 62, 64], "break": [2, 4, 19, 35, 61, 62, 64], "build": [2, 4, 15, 18, 19, 52, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69, 70], "note": [2, 7, 8, 18, 21, 46, 53, 59, 60, 64, 68], "hadamard": [2, 38, 39, 53], "vmatrix": 2, "sqrt": [2, 15, 53, 62, 68], "pauli": [2, 50, 53, 59, 60, 64, 70], "ident": [2, 51, 59, 61], "phase": [2, 38, 42, 45, 52, 55, 61], "shift": [2, 38, 39, 50, 52, 53, 59, 70], "foral": [2, 7, 60], "rm": 2, "r": [2, 7, 21, 37, 53, 57, 60], "rotat": [2, 7, 9, 50, 53, 60, 61, 64, 70], "co": [2, 46, 52, 53], "sin": [2, 52, 53], "NOT": [2, 19, 28, 52], "csign": [2, 34, 37, 52, 61], "swap": [2, 34, 37, 52, 62], "iswap": [2, 34, 52], "sqrtswap": [2, 34, 52], "ccnot": [2, 34, 37, 52], "through": [2, 18, 21, 28, 29, 32, 34, 37, 45, 50, 52, 53, 60, 61, 63, 64, 70], "aqasm2circ": [2, 52], "infil": 2, "outfil": 2, "version": [2, 4, 6, 7, 19, 24, 26, 28, 29, 31, 34, 38, 43, 53, 55, 56, 58, 60, 61], "implement": [2, 4, 5, 7, 9, 10, 11, 13, 15, 19, 21, 36, 37, 38, 39, 40, 41, 42, 46, 47, 50, 52, 53, 57, 58, 59, 60, 61, 62, 63, 64, 68, 70], "wrote": 2, "my_lib": 2, "py": [2, 19, 31, 38, 43, 45, 68], "misc": [2, 61], "function": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 32, 33, 36, 37, 38, 39, 50, 53, 56, 57, 58, 59, 61, 64, 67, 70, 71], "qb": [2, 3, 13, 21, 53, 64], "inlin": [2, 4, 19, 45, 53, 61, 62, 69], "subcircuit": [2, 4, 19, 52, 53, 61], "place": [2, 5, 7, 8, 15, 28, 53, 61, 62, 64], "l": [2, 7, 11, 57, 59, 60, 63], "my_aqasm": 2, "circ": [2, 3, 4, 12, 13, 14, 15, 19, 21, 23, 31, 32, 52, 53, 56, 59, 60, 61], "arithmet": [2, 38, 39, 52, 53, 61], "sever": [3, 7, 11, 19, 28, 30, 35, 37, 45, 50, 53, 57, 59, 69, 70], "moreov": [3, 12, 21, 53, 61, 64], "perfectli": 3, "friendli": [3, 28, 53], "concept": [3, 53, 64], "while": [3, 7, 19, 24, 26, 28, 37, 53, 56, 57, 59, 65, 68], "flexibl": [3, 23, 32, 33, 37], "servic": [3, 19, 21, 28, 36, 37, 38, 42, 52], "insert": [3, 51, 53, 66, 67], "my_stack": [3, 21], "batchgener": [3, 37, 38, 42, 53], "post_process": [3, 5, 14, 21, 46, 53], "rest": [3, 15, 21, 36, 68], "mandatori": [3, 52], "spec": [3, 14, 16, 17, 20, 21, 22, 53, 61, 65, 71], "specif": [3, 7, 8, 9, 14, 28, 35, 51, 62, 64], "link": [3, 5, 12, 18, 21, 28, 37, 38, 39, 45, 53, 61, 62, 64], "basic": [3, 7, 10, 13, 15, 19, 21, 35, 37, 38, 42, 43, 45, 52, 53, 55, 56, 62, 64, 67, 69], "cat": 3, "abstractgener": [3, 38, 42, 53], "program": [3, 4, 7, 8, 12, 13, 14, 15, 18, 19, 21, 23, 26, 33, 37, 52, 53, 56, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70], "catstategener": 3, "self": [3, 21, 34, 46, 52, 53, 61, 64], "target": [3, 4, 7, 8, 9, 19, 53, 60, 64, 69], "zip": [3, 15, 30], "f": [3, 4, 7, 13, 15, 19, 51, 53, 56, 57, 59, 60, 66, 68], "2f": 3, "50": [3, 21, 28, 54, 59, 64, 68], "111": [3, 21], "iter": [3, 4, 5, 15, 19, 21, 38, 42, 48, 53, 59, 61, 68, 69, 70], "yield": [3, 7, 9, 34, 53, 68], "submiss": [3, 28, 38, 39], "advantag": 3, "than": [3, 7, 11, 14, 15, 28, 34, 53, 57, 59, 60, 61, 64, 70], "previou": [3, 12, 37, 52, 57, 60, 67], "tri": [3, 7, 10], "energi": [3, 7, 9, 10, 13, 15, 21, 36, 38, 39, 47, 53, 56, 59, 60, 64, 67, 70], "observ": [3, 15, 18, 21, 34, 35, 36, 37, 38, 40, 41, 42, 45, 47, 49, 51, 56, 57, 59, 60, 64, 67, 69, 70], "dummi": [3, 53], "ansatz": [3, 7, 9, 15, 38, 42, 49, 50, 51, 55, 58, 59, 69, 70], "ground": [3, 7, 8, 9, 11, 15, 56, 59, 60, 64], "prod": 3, "rx_i": 3, "alpha_i": 3, "mode": [3, 13, 14, 37, 38, 42, 53, 60, 66], "angl": [3, 7, 9, 13, 21, 34, 49, 50, 52, 53, 59, 60, 70], "fix": [3, 7, 8, 49, 53, 64, 66], "ansarz": 3, "core": [3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 34, 35, 36, 52, 54, 57, 59, 60, 61, 62, 64, 65, 67, 68, 70, 71], "ob": [3, 19, 36, 53, 59, 64, 67, 68], "dummyenergyminim": 3, "wall": [3, 15], "gate": [3, 13, 15, 18, 21, 31, 32, 34, 35, 37, 38, 39, 40, 41, 42, 45, 46, 50, 51, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 70], "practis": 3, "better": [3, 7, 9, 56, 58, 60], "must": [3, 13, 28, 37, 46, 48, 49, 50, 53, 60, 70], "enumer": [3, 13, 19, 21, 53, 59, 64], "new_var": [3, 13, 15, 21, 53, 56, 59, 60, 61, 64, 67, 70], "parameter_map": [3, 13, 53, 60, 67], "best_angles_circ": 3, "optim": [3, 5, 8, 10, 12, 15, 16, 17, 18, 20, 21, 22, 28, 36, 37, 38, 42, 52, 53, 55, 56, 58, 59, 60, 61, 67, 70, 71], "z_i": 3, "\u03c3": 3, "sigma_z": [3, 21, 53, 64, 70], "idx": [3, 13], "isclos": 3, "atol": 3, "continu": [3, 7, 8, 28, 64], "11111": 3, "00": [3, 13, 15, 34, 53, 68], "item": [3, 19, 53], "neither": [3, 28, 66], "nor": 3, "batchresult": [3, 14, 21, 33, 34, 35, 37, 38, 40, 41, 42, 46, 53, 64], "catstateresult": 3, "assert": [3, 28, 54], "invalid": [3, 19], "bitstr": [3, 13, 53, 64, 68], "expect": [3, 13, 34, 46, 51, 53, 56, 59, 60, 62, 68], "list": [3, 18, 21, 23, 28, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 46, 47, 48, 51, 53, 56, 57, 58, 59, 60, 61, 64, 68], "standard": [4, 7, 15, 19, 34, 37, 46, 53, 59, 61, 64, 68], "interfac": [4, 7, 9, 18, 19, 21, 26, 28, 36, 37, 38, 42, 52, 56, 61, 64, 67, 69], "over": [4, 7, 10, 15, 19, 21, 28, 32, 33, 34, 35, 51, 53, 61, 63, 64, 67, 68], "5707963267948966": [4, 19, 21], "7853981633974483": [4, 19], "39269908169872414": [4, 19], "raw": [4, 6, 19, 29, 53], "advanc": [4, 7, 8, 15, 19, 23, 26, 32, 33, 37, 45, 53, 55, 61, 67], "remap": [4, 19, 53, 62, 69], "_2": [4, 19], "_4": [4, 19], "_6": [4, 19], "concaten": [4, 19, 53], "overload": [4, 19, 21, 38, 42, 53, 61, 64, 67], "__add__": [4, 19], "tensor": [4, 19, 48, 50, 53, 59, 60, 63, 70], "__mult__": [4, 19, 53], "deseri": [4, 12, 19], "load": [4, 12, 19, 37, 38, 39, 53, 63], "bind": [4, 19, 21, 28, 53, 64, 70], "bind_vari": [4, 19, 53, 60], "easi": [4, 13, 18, 19, 29, 53, 70], "access": [4, 19, 26, 29, 34, 35, 53, 54, 56, 57, 59, 61, 62, 63, 64, 68], "nbcbit": [4, 19, 53], "At": [4, 7, 10, 19, 29, 61, 64], "convent": [4, 7, 12, 19, 34, 35, 52, 53, 60], "extend": [4, 19, 21, 28, 38, 39, 53, 61], "match": [4, 7, 19, 50, 61, 64, 66, 70], "zero": [4, 7, 19, 38, 42, 53, 55, 56, 57, 59, 60, 64, 66, 68, 69], "field": [4, 7, 19, 28, 36, 38, 39, 46, 50, 53, 64, 68, 70], "total": [4, 19, 51, 60, 61], "ancilla": [4, 19, 45, 61], "alloc": [4, 15, 19, 23, 31, 61, 62], "emul": [4, 5, 7, 11, 19, 45, 66, 68, 69], "extens": [4, 7, 19, 59], "flow": [4, 19, 53], "qreg": [4, 19, 21, 31, 53, 61], "pleas": [4, 12, 14, 19, 21, 24, 26, 27, 28, 30, 34, 37, 38, 39, 42, 44, 52, 53, 55, 59, 60], "refer": [4, 7, 12, 19, 27, 28, 29, 34, 37, 38, 42, 45, 52, 53, 55, 56, 59, 61, 64, 70], "get": [4, 18, 19, 21, 29, 37, 45, 53, 56, 58, 59, 60, 68], "main": [4, 5, 12, 18, 33, 35, 37, 52, 60, 61, 64, 65, 68], "formal": [4, 7, 11, 13, 19, 36, 68], "document": [4, 7, 11, 15, 19, 21, 27, 28, 34, 35, 38, 39, 42, 46, 52, 55, 56, 57, 60, 61, 64, 68, 70], "comm": [4, 19, 35, 53, 68], "datamodel": [4, 19, 35], "ttype": [4, 19, 35, 53, 68], "distinguish": [4, 19], "between": [4, 7, 9, 13, 19, 21, 26, 36, 38, 39, 51, 53, 58, 59, 60, 61, 62, 64, 66, 70], "attribut": [4, 6, 19, 21, 28, 35, 38, 40, 41, 42, 53, 56, 58, 61, 63, 66], "str": [4, 16, 17, 19, 20, 22, 35, 37, 46, 48, 51, 53, 59, 60, 61, 64, 70, 71], "uniqu": [4, 19, 64], "identify": [4, 19], "optyp": [4, 19], "rpf": [4, 19], "permut": [4, 19, 34], "precis": [4, 7, 19, 21, 34, 53, 56, 60, 70], "classicctrl": [4, 19, 35], "gatetyp": [4, 19, 35, 53], "onc": [4, 7, 9, 15, 19, 29, 37, 52, 53, 56, 58, 59, 63, 67], "variou": [4, 7, 11, 19, 28, 46, 52, 54, 56, 58, 60, 61, 62, 68, 69], "relev": [4, 19, 28, 46, 58], "exact": [4, 15, 19, 56, 60, 64, 68], "prefix": [4, 19, 53, 62], "evalu": [4, 15, 19, 21, 35, 38, 39, 51, 53, 60, 61, 64, 68], "abort": [4, 19], "formula_ev": [4, 19, 53], "cbit_valu": [4, 19], "rewir": [4, 19], "seen": [4, 7, 19, 21, 53, 56, 57, 59, 64], "integ": [4, 19, 35, 36, 52, 53, 60, 64, 66, 70], "receiv": [4, 19, 21, 28, 36, 50, 53, 70], "kei": [4, 19, 46, 53, 61, 64], "gated": [4, 19, 53], "entri": [4, 19, 21, 53, 64], "gatedefinit": [4, 19], "nrow": [4, 19], "ncol": [4, 19], "complexnumb": [4, 19, 21, 53], "7071067811865475": [4, 15, 19, 68], "im": [4, 19, 21], "is_ctrl": [4, 19], "is_dag": [4, 19], "is_tran": [4, 19], "is_conj": [4, 19], "subgat": [4, 19, 53], "gsyntax": [4, 19], "nbctrl": [4, 19, 61], "circuit_implement": [4, 19], "toggl": [4, 19], "instanti": [4, 15, 19, 21, 36, 37, 49, 53, 60, 61, 64, 67, 68], "manual": [4, 19, 33, 56], "writ": [4, 19], "definit": [4, 7, 19, 28, 45, 52, 53, 57, 60, 61, 64], "unitari": [4, 19, 35, 53, 56, 59, 61], "column": [4, 19], "row": [4, 19], "bool": [4, 5, 6, 13, 14, 19, 34, 37, 48, 49, 50, 53, 60, 61, 64, 70], "deprec": [4, 7, 8, 19, 26, 33, 52, 55, 58, 64], "conjug": [4, 19, 60, 61], "transpos": [4, 19, 60, 61], "signifi": [4, 19, 61], "strict": [4, 19], "There": [4, 5, 7, 11, 15, 19, 21, 29, 61], "three": [4, 7, 9, 19, 21, 37, 46, 50, 53, 55, 57, 61, 62, 64, 70], "id": [4, 19, 37], "transform": [4, 19, 21, 28, 38, 42, 45, 46, 55, 56, 57, 58, 59, 61, 62], "_0": [4, 19, 60, 64], "instruct": [5, 52, 53, 61, 64], "skip": [5, 21, 33, 37, 61, 62], "step": [5, 7, 11, 21, 36, 48, 52, 53, 56, 59, 60, 61, 62, 66], "default": [5, 7, 8, 13, 14, 15, 17, 20, 21, 23, 27, 29, 31, 32, 33, 34, 35, 37, 46, 47, 48, 49, 50, 51, 53, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71], "behavior": [5, 7, 8, 13, 19, 29, 35, 53, 62, 64, 65], "further": [5, 61], "pylinalg": [5, 12, 13, 19, 21, 34, 37, 38, 40, 41, 42, 61, 65, 69], "isinst": 5, "inplac": 5, "manag": [5, 28, 45], "make": [5, 7, 28, 29, 34, 36, 44, 60, 61, 62, 64], "qat_circ": 5, "fly": 5, "beforehand": [5, 53], "worst": [5, 61], "perfom": 5, "deepcopi": [5, 53, 60], "process": [5, 7, 14, 15, 18, 21, 28, 36, 37, 46, 52, 53, 59, 61, 66, 68, 69], "classmethod": [5, 46, 53], "addarg": [5, 46], "parser": [5, 31, 46], "compil": [5, 14, 18, 21, 27, 28, 32, 33, 46, 52, 53, 61, 66, 67], "_spec": [5, 46, 61], "do_post_process": [5, 14, 21, 46, 53], "post": [5, 14, 21, 28, 46, 53, 66, 69], "graphpartitioningresult": [6, 16, 17, 22, 64], "graph": [6, 7, 8, 20, 22, 45, 46, 53, 69, 71], "arg": [6, 32, 37, 53, 61, 64], "kwarg": [6, 16, 17, 20, 22, 23, 31, 32, 33, 37, 46, 53, 61, 64, 67, 70, 71], "partit": [6, 45, 64, 69], "represent": [6, 14, 17, 20, 28, 35, 36, 53, 55, 56, 58, 59, 60, 61, 69, 71], "under": [6, 28, 34, 38, 43, 45, 52, 53, 59], "visual": [6, 53], "with_figur": 6, "figsiz": 6, "node_s": 6, "300": [6, 47, 70], "font_siz": 6, "draw_networkx": 6, "matplotlib": 6, "pyplot": 6, "figur": [6, 52], "tupl": [6, 23, 32, 33, 35, 36, 37, 53, 60, 64], "diagram": [6, 62], "font": 6, "kcliqueresult": [6, 20], "subclass": 6, "vertexcoverresult": [6, 71], "life": [7, 58], "intrins": 7, "lowest": [7, 9, 49, 60, 64, 67], "physic": [7, 11, 28, 35, 57, 64], "hamiltonian": [7, 8, 9, 11, 15, 17, 20, 36, 38, 42, 53, 55, 56, 58, 59, 64, 71], "due": [7, 28, 60, 68], "intim": 7, "minimum": [7, 8, 10, 11, 15, 50, 64, 70], "claus": [7, 61, 64], "anneal": [7, 45, 64, 69], "challeng": [7, 60], "effort": 7, "put": [7, 15, 23, 29, 32, 33, 34, 37, 60], "year": 7, "luc14": 7, "direct": [7, 28, 53, 56, 57], "along": [7, 9, 11, 28, 29, 36, 64, 68], "regard": [7, 28, 29, 60, 64], "local": [7, 10, 19, 21, 33, 50, 53, 59, 70], "sum_": [7, 10, 11, 15, 35, 36, 57, 60, 62, 63, 64], "h_": [7, 8, 10, 11, 57, 60], "sigma_": [7, 11], "j_": [7, 10, 11, 36], "ij": [7, 10, 36, 48, 60], "pmatrix": 7, "coeffici": [7, 50, 51, 53, 59, 60, 67, 70], "magnet": [7, 36, 38, 39, 64], "symmetr": [7, 64], "diagon": [7, 9, 15, 46, 56, 60, 64], "coupl": [7, 36, 38, 39, 56, 64], "quantiz": [7, 60], "s_": [7, 10, 11, 60, 64], "interact": [7, 26, 30, 34, 53, 56, 57, 60, 64], "restrict": [7, 8, 28, 56, 58, 60, 64], "clariti": [7, 58], "readabl": [7, 28, 52], "includ": [7, 18, 23, 28, 32, 33, 34, 35, 36, 37, 38, 42, 49, 52, 53, 55, 57, 58, 60, 61, 62, 70], "Such": [7, 28, 50, 64, 70], "landscap": 7, "convert": [7, 12, 23, 32, 33, 35, 37, 56, 57, 60, 68], "vice": [7, 12, 23, 27, 33, 37], "versa": [7, 12, 23, 27, 37], "typic": [7, 11, 60], "try": [7, 13, 19, 21, 38, 40, 41, 42, 43, 44, 53, 56, 64, 67], "reach": [7, 21, 51, 56], "reli": [7, 15, 38, 39], "adiabat": [7, 8, 60], "theorem": [7, 8], "al18": 7, "configur": [7, 10, 11, 26, 28, 36, 37, 53, 60], "markov": [7, 10], "chain": [7, 10, 53], "space": [7, 15, 21, 38, 42, 53, 55, 56, 58, 59, 60, 61], "low": [7, 10, 16, 17, 20, 21, 22, 38, 42, 53, 56, 59, 62, 64, 71], "ferromagnet": 7, "align": 7, "onto": [7, 35, 66], "tend": [7, 67], "lower": [7, 9, 10, 34, 53, 56, 58, 60, 62, 64, 70], "closer": 7, "aim": [7, 10, 11, 38, 42, 55, 64], "min_": 7, "left": [7, 11, 35, 48, 51, 52, 53, 60, 61, 62, 64], "to_qubo": [7, 64], "combinatorialproblem": [7, 9, 64], "to_combinatorial_problem": [7, 64], "quadrat": [7, 15, 36], "unconstrain": [7, 36], "x_": [7, 57], "q_": 7, "written": [7, 28, 34, 35, 38, 42, 53, 57], "mean": [7, 19, 28, 37, 46, 53, 56, 59, 61, 62, 64, 68], "element": [7, 15, 36, 53, 60, 61, 64], "becaus": [7, 26, 68], "quad": 7, "effect": [7, 8, 28, 35, 53, 61, 62, 68], "linear": [7, 9, 38, 42, 51, 53, 54, 59, 64, 69], "2x_": 7, "to_is": [7, 64], "explicitli": [7, 28], "var": [7, 64], "achiev": 7, "accept": [7, 10, 28, 35, 53, 57, 60, 61], "desir": [7, 26, 27, 60], "weight": [7, 8, 13, 64, 70], "heurist": [7, 9, 10, 11, 34, 64], "ans\u00e4tz": [7, 9, 11, 64, 67], "inspir": [7, 9, 60, 62, 64], "evolut": [7, 9, 35, 36, 53, 60, 64], "ramp": [7, 9, 64], "initi": [7, 8, 9, 28, 35, 48, 49, 50, 52, 53, 56, 58, 59, 60, 61, 63, 64, 66, 68, 70], "h_0": [7, 8, 9, 64], "sum_i": [7, 9, 36, 53, 60, 63, 64, 67], "sigma_x": [7, 8, 9, 53, 64, 67], "shape": [7, 9, 19, 35, 56, 60, 63], "h_c": [7, 8, 9], "propag": [7, 9], "gamma": [7, 9, 11, 64, 70], "beta": [7, 9, 21, 60, 63], "simpli": [7, 9, 21, 53, 61, 64], "r_x": [7, 9, 64], "quantiti": [7, 9, 13, 53], "langl": [7, 9, 15, 48, 51, 53, 59, 60, 61, 67, 68], "overlap": [7, 8, 9, 60, 64], "d": [7, 9, 28, 53, 60, 64], "layer": [7, 9, 56, 60, 64, 65, 67], "theori": [7, 9, 28, 56, 58, 60], "greater": [7, 9], "slow": [7, 9], "down": [7, 9, 21, 46, 53, 55, 59, 60], "converg": [7, 9, 50, 70], "fulli": [7, 9, 31, 53, 54, 58], "fgg14": [7, 9], "readi": [7, 9, 38, 39, 64], "care": [7, 9, 28, 51, 56, 64, 67], "vsolv": [7, 9, 64], "ansatzfactori": [7, 9, 64], "recip": [7, 9, 61, 64], "factori": [7, 9, 15, 64], "pick": [7, 9, 26, 59, 64, 70], "strategi": [7, 9, 60, 62, 64], "histor": [7, 10], "decreas": [7, 10, 11, 28, 56, 59, 61, 64, 68], "stochast": [7, 10, 53, 59, 70], "temperatur": [7, 10, 11, 16, 17, 20, 22, 36, 64, 71], "jump": [7, 10], "barrier": [7, 10], "escap": [7, 10], "optima": [7, 10], "settl": [7, 10, 11, 28], "hopefulli": [7, 10], "global": [7, 8, 10, 59], "optimum": [7, 10], "mathemat": [7, 10, 52], "choos": [7, 10, 28, 34, 47, 48, 53, 56, 59, 64], "evolv": [7, 8, 10, 53], "p_": [7, 10, 53], "min": [7, 10, 21, 53, 56, 59, 64], "delta": [7, 10, 60], "incur": [7, 10, 28], "switch": [7, 10, 68], "wherea": [7, 10, 51, 53], "neglig": [7, 10, 28], "pictur": [7, 10, 11, 52], "explain": [7, 10, 21], "pseudo": [7, 10, 11, 59], "work": [7, 10, 11, 14, 21, 26, 28, 29, 31, 35, 38, 39, 51, 59, 60, 62, 67], "antiferromagnet": [7, 10, 15], "model": [7, 10, 15, 53, 56, 57, 58, 59, 63], "question": [7, 11, 44], "those": [7, 11, 28, 53, 66, 68], "matter": [7, 11, 62], "hot": [7, 11], "scientif": [7, 11], "debat": [7, 11], "beyond": [7, 11, 28], "scope": [7, 11, 21, 45, 61], "reader": [7, 11], "ronnowwj": [7, 11], "dbi": [7, 11], "16": [7, 11, 17, 22, 54], "hja": [7, 11], "aa17": [7, 11], "discret": [7, 11], "path": [7, 11, 29, 30, 52], "integr": [7, 11, 56, 60], "mont": [7, 11, 64], "carlo": [7, 11, 64], "derivedf": [7, 11], "martovnakst02": [7, 11], "short": [7, 11, 35], "equilibrium": [7, 11], "distribut": [7, 11, 15, 24, 26, 28, 34, 35, 38, 39, 53, 59, 61, 63], "finit": [7, 11, 53], "k": [7, 11, 15, 20, 34, 35, 45, 48, 53, 57, 60, 61, 62, 63, 64], "n_": [7, 11, 21, 51, 59, 60, 68], "trotter": [7, 11, 38, 42, 55, 60, 64], "perp": [7, 11], "cdot": [7, 11], "tanh": [7, 11], "replac": [7, 11, 28, 37, 51, 53, 58, 59, 61], "gradual": [7, 11], "prepar": [7, 8, 11, 15, 19, 28, 38, 39, 52, 59, 60, 61, 64, 68], "transit": [7, 11], "idea": [7, 11, 59, 60], "point": [7, 11, 21, 35, 49, 51, 53], "gamma_": [7, 11], "kept": [7, 11], "memori": [7, 11, 19, 34, 35, 57, 61, 63], "polynomi": [7, 11, 64], "limit": [7, 11, 28, 35, 68], "techniqu": [7, 11, 50, 59, 64, 70], "sqaqpu": [7, 11], "qualiti": [7, 11, 28, 36, 58, 60], "fine": [7, 11, 21, 52, 64], "tune": [7, 11, 50, 52, 70], "solver": [7, 11, 21, 36, 58, 64], "test": [7, 11, 28, 31, 36, 38, 39, 53], "benchmark": [7, 11, 36, 64], "record": [7, 11], "qa": 7, "framework": [7, 8, 13, 18, 26, 27, 29, 64], "util": [7, 8, 58, 62], "often": [7, 8, 14, 57, 64], "independ": [7, 8, 28, 53, 61, 64], "mix": [7, 8, 23, 51, 64], "slowli": [7, 8], "accord": [7, 8, 28, 48, 53, 60, 61, 62], "descib": [7, 8], "earlier": [7, 8, 56, 59], "erdos_renyi_graph": [7, 8], "tmax": [7, 8, 53, 64], "annealing_job": [7, 8, 64], "47": [7, 8, 54], "hamitonian": [7, 8], "otim": [7, 8, 64, 68], "alreadi": [7, 8, 53, 56, 59, 60, 61, 63], "pre": [7, 8, 62], "mixingfactori": [7, 8, 64], "move": [7, 8, 64], "subspac": [7, 8, 45, 55], "ham": [7, 8, 13, 64], "search": [7, 8, 15, 21, 45, 60, 61], "bit_mov": [7, 8, 64], "deprecationwarn": [7, 8, 38, 43, 64], "alia": [7, 8, 53, 64], "builtin": [7, 8, 64], "silenc": [7, 8, 64], "warn": [7, 8, 33, 64], "itself": [7, 8, 52, 53, 56, 64, 67], "modifi": [7, 8, 28, 35, 53, 60, 61, 64], "safe": [7, 8, 61, 64], "scalar": [7, 8, 19, 53, 64], "complex128": [7, 8, 34, 64], "guidanc": [7, 8, 64], "http": [7, 8, 28, 29, 33, 64, 70], "org": [7, 8, 24, 26, 28, 29, 38, 39, 64, 70], "devdoc": [7, 8, 64], "html": [7, 8, 64], "lead": [7, 8, 19, 59, 64], "trivial": [7, 8, 21, 46, 61, 63], "tameem": 7, "albash": 7, "daniel": 7, "lidar": 7, "review": 7, "modern": 7, "90": 7, "015002": 7, "2018": 7, "url": [7, 35, 53], "journal": 7, "ap": 7, "rmp": 7, "1103": 7, "revmodphi": 7, "evgeni": 7, "andriyash": 7, "mohammad": 7, "amin": 7, "2017": [7, 63], "arxiv": [7, 50, 62, 70], "1703": 7, "09277": 7, "vasil": 7, "denchev": 7, "sergio": 7, "boixo": 7, "sergei": 7, "isakov": 7, "nan": 7, "ding": 7, "ryan": 7, "babbush": 7, "vadim": 7, "smelyanskii": 7, "john": 7, "martini": 7, "hartmut": 7, "neven": 7, "tunnel": [7, 60], "031015": 7, "2016": 7, "prx": 7, "physrevx": 7, "edward": 7, "farhi": 7, "jeffrei": 7, "goldston": 7, "sam": 7, "gutmann": 7, "2014": [7, 64], "1411": [7, 62], "4028": 7, "itai": 7, "hen": 7, "joshua": 7, "troel": 7, "\u00f8": 7, "nnow": 7, "matthia": 7, "troyer": 7, "probe": 7, "speedup": 7, "glass": 7, "plant": 7, "92": 7, "042325": 7, "2015": 7, "pra": 7, "physreva": 7, "andrew": 7, "luca": [7, 64], "frontier": 7, "www": [7, 28], "frontiersin": 7, "articl": [7, 47, 59, 60], "3389": 7, "fphy": 7, "00005": 7, "roman": 7, "marto": 7, "\u0148": 7, "\u00e1": 7, "giusepp": 7, "santoro": 7, "erio": 7, "tosatti": 7, "dimension": 7, "ising": [7, 53], "66": 7, "094203": 7, "2002": 7, "prb": 7, "physrevb": 7, "zhihui": 7, "wang": 7, "david": 7, "wecker": 7, "detect": [7, 53], "scienc": [7, 63], "345": 7, "6195": 7, "420": 7, "424": 7, "sciencemag": 7, "combinatori": [8, 9, 10, 16, 17, 18, 20, 22, 36, 67, 71], "script": [12, 31], "decompil": [12, 28], "ato": [12, 26, 28, 37, 38, 39, 45, 52], "assembli": [12, 45], "useabl": 12, "learn": [12, 15, 28, 38, 39, 59, 68], "about": [12, 15, 35, 38, 39, 52, 53, 56, 57, 61], "suppli": [12, 37], "assum": [12, 13, 21, 28, 33, 46, 50, 53, 56, 59, 61, 63, 70], "my_prog": 12, "my_prog_2": 12, "coulb": 12, "direclti": 12, "class_nam": [12, 61], "stdout": [12, 38, 39], "batchout": 12, "jobout": 12, "natur": [12, 28, 37, 38, 42, 45, 55, 56, 58, 59, 60, 68, 69], "batchr": 12, "statist": [12, 38, 39, 53, 62, 68], "interpret": [12, 16, 17, 20, 22, 28, 71], "weigth": 13, "maximim": 13, "easier": [13, 28, 58], "focu": 13, "chosen": [13, 48, 60, 62, 70], "illustr": [13, 15, 56, 60, 67, 68], "cost_funct": 13, "retriev": [13, 21, 32, 37, 38, 40, 41, 42, 46, 63], "higher": [13, 21, 34, 53, 60, 61, 62], "job_fixed_angl": 13, "result_fixed_angl": 13, "2e": 13, "23": [13, 17, 19, 20, 21, 22, 53, 54, 56, 59], "8e": 13, "is_result_argu": 13, "5e": 13, "my_funct": 13, "callabl": [13, 46, 53], "use_result": 13, "graphic": 14, "explicit": [14, 53], "termin": [14, 28, 29, 53], "jupyt": [14, 26, 30, 38, 43, 53, 55, 56, 57, 59], "qatdisplai": [14, 26], "magic": [14, 26], "bell": [14, 15, 31], "pair": [14, 15, 31, 45, 46, 51, 53, 59, 60, 64, 66], "press": 14, "too": [14, 57, 60], "big": [14, 57, 60], "entir": [14, 28, 35, 60], "arrow": [14, 62], "keyboard": 14, "batchmod": [14, 53, 66], "wait": [14, 37, 53], "next": [14, 19, 29], "stop": [14, 19, 47, 48, 61, 70], "hardwarespec": [14, 16, 17, 20, 21, 22, 38, 40, 41, 42, 53, 54, 65, 69, 71], "hello": 15, "world": 15, "qprog": [15, 68], "export": [15, 28, 32, 61], "processor": [15, 18, 19, 35, 45, 53, 54, 69], "unit": [15, 18, 36, 68], "compon": [15, 52, 68], "atom": [15, 38, 42, 55, 56, 58], "task": [15, 46, 68], "remain": [15, 28, 60, 61, 63], "power": [15, 18, 28, 36, 63], "literatur": 15, "grover": [15, 45, 61], "unstructur": 15, "faster": [15, 34, 38, 42, 64], "oracl": [15, 61], "mathcal": [15, 46, 51, 60, 68], "rightarrow": 15, "uniform": [15, 21, 61], "u_f": 15, "mapsto": [15, 62], "diffus": [15, 61], "u_d": 15, "dive": 15, "2k": [15, 53], "undo": 15, "revert": [15, 53], "simplifi": [15, 21, 56, 57, 58, 60], "uncomput": [15, 45, 61], "clearer": 15, "palindrom": 15, "mirror": 15, "rememb": 15, "sign": [15, 51, 53, 60, 64], "b_1": 15, "b_": [15, 62], "b_2": 15, "half": [15, 35], "origin": [15, 28, 59], "again": [15, 56, 61], "is_palindrom": 15, "first_half": 15, "second_half": 15, "w1": [15, 61], "w2": [15, 61], "And": [15, 19, 52], "henc": [15, 19, 46, 60, 61], "approx": [15, 60], "diff": [15, 53], "superposit": [15, 53, 61, 64], "nstep": [15, 21], "0000": 15, "24999999999999956": [15, 61], "0110": 15, "1001": 15, "1111": 15, "decent": 15, "particularli": [15, 19], "curiou": 15, "custom": [15, 18, 45, 53, 59, 62, 65, 67], "believ": 15, "suit": [15, 55], "noisi": [15, 28, 35, 51, 59, 60], "scale": 15, "nisq": [15, 18], "long": [15, 53, 61, 70], "nevertheless": 15, "heisenberg": 15, "theta_i": [15, 48], "go": [15, 16, 17, 20, 21, 22, 29, 50, 51, 60, 71], "nqbit": [15, 21, 53, 56, 57, 60], "pauli_term": [15, 19, 53, 59, 68], "xx": [15, 46, 60, 67], "yy": [15, 60], "zz": [15, 19, 46, 53, 57, 60, 64], "reg": [15, 21, 56, 59, 60], "theta_": [15, 59, 60], "optimizer_scipi": 15, "x0": [15, 48, 50, 56, 59, 60, 70], "vqe": [15, 18, 38, 42, 45, 49, 55, 58, 59, 60, 67, 69], "9999999999985336": 15, "scipy_arg": [16, 17, 20, 22, 71], "dict": [16, 17, 20, 22, 33, 34, 35, 37, 53, 60, 70, 71], "graph_colouring_appl": 16, "sqa_best_paramet": [16, 17, 20, 22, 71], "sqa_best_parameters_dict": [16, 17, 20, 22, 71], "temp_max": [16, 17, 20, 22, 64, 71], "temp_min": [16, 17, 20, 22, 64, 71], "5000": [16, 17, 20, 22, 71], "graph_colouring_gener": 16, "schedule_batch": [16, 17, 20, 22, 71], "special": [16, 17, 18, 20, 22, 28, 64, 71], "combinatorialoptimizergener": [16, 17, 20, 22, 71], "number_of_colour": [16, 64], "sent": [16, 17, 20, 21, 22, 28, 31, 32, 51, 52, 53, 71], "graph_partitioning_appl": 17, "18": [17, 22, 54, 68], "25": [17, 22, 38, 41, 54, 70], "26": [17, 22, 54], "28": [17, 22, 54], "17": [17, 22, 54, 71], "22": [17, 22, 53, 54, 56, 64], "29": [17, 22, 54], "graph_partitioning_gener": 17, "doubl": [17, 20, 34, 36, 53, 60, 64, 71], "h_a": [17, 20, 64, 71], "h_b": [17, 20, 64, 71], "multipli": [17, 19, 20, 59, 62, 64, 71], "equat": [17, 20, 53, 64, 71], "factor": [17, 20, 22, 60, 62, 64, 71], "softwar": [18, 28, 69], "semant": [18, 21, 53], "univers": [18, 45, 65], "versatil": 18, "api": [18, 21, 35, 37, 38, 42, 53], "mitig": [18, 28, 38, 42, 45, 55, 58, 59, 69], "seamless": 18, "major": [18, 24, 26], "interoper": 18, "fermion": [18, 53, 58, 59, 69], "toolchain": 18, "devic": [18, 38, 40, 41, 42, 53], "contribut": [18, 28], "seri": [19, 60, 68], "articul": 19, "around": [19, 35, 37, 60], "page": [19, 27, 28, 34, 44, 60, 67, 68], "read": [19, 26, 28, 53, 60, 67], "view": [19, 34], "fit": [19, 21, 28, 51, 59], "shot": [19, 21, 35, 37, 53, 59, 60, 67], "send": [19, 21, 32, 38, 42, 53], "request": [19, 25, 53], "nbshot": [19, 21, 34, 35, 53, 60, 64, 68], "1024": [19, 53], "issu": [19, 28, 59], "my_observ": 19, "xz": [19, 57, 60, 68], "zxzx": 19, "constant_coeff": [19, 53, 56, 60], "obs1": 19, "obs2": 19, "__xor__": 19, "zzx": 19, "commut": [19, 46, 47, 57, 59], "__or__": 19, "2j": 19, "yz": [19, 60], "2048": 19, "encapsul": 19, "raw_data": [19, 21, 53], "cf": [19, 35], "value_data": [19, 21, 46, 53], "meta_data": [19, 21, 33, 34, 35, 37, 38, 40, 41, 42, 46, 53, 56, 60, 67, 70], "transmit": [19, 21, 53], "intermediate_measur": [19, 21, 53], "summar": 19, "err": [19, 21, 46, 53, 60, 68], "environ": [19, 26, 30, 33, 37, 53], "serializ": [19, 53], "activ": [19, 31, 38, 39, 42, 55, 56, 58, 60], "rais": [19, 35, 38, 40, 41, 42, 53, 61, 64], "thrift": [19, 53, 61], "useful": 19, "remot": [19, 28, 38, 39], "server": [19, 35, 53], "cleanli": [19, 61], "catch": 19, "client": [19, 53], "qpuexcept": [19, 38, 40, 41, 42, 68], "suppos": [19, 37], "modulenam": [19, 68], "messag": [19, 61, 68], "pluginexcept": 19, "clear": [19, 53], "understand": 19, "went": 19, "wrong": 19, "pack": 19, "errortyp": 19, "invalid_arg": 19, "nonresult": 19, "illegal_g": 19, "unknown": [19, 60], "not_simulat": 19, "simulat": [19, 38, 42], "abort_cod": 19, "addition": [19, 53, 54, 61, 67], "character": 19, "include_matric": [19, 61], "excp": 19, "103": 19, "encount": 19, "calloc": [19, 52, 53, 61], "cbreak": [19, 52, 61], "kclique_appl": 20, "cliqu": [20, 45, 64], "kclique_gener": 20, "deal": [21, 60, 61], "necessari": [21, 28, 29, 53, 61, 68], "back": [21, 29, 53, 59, 64, 68], "Their": [21, 52], "plugin1": 21, "plugin2": 21, "my_qpu": 21, "overal": [21, 59, 64], "wide": [21, 57], "But": [21, 35], "importantli": 21, "show": [21, 53, 56, 59, 60, 61], "rudimentari": 21, "mere": [21, 28, 68], "inherit": [21, 35, 38, 42, 53, 57, 58, 61, 64, 70], "qpuhandl": [21, 34, 35, 36, 37, 53, 60, 65], "submit_job": [21, 33, 35, 36, 53, 68], "wrapper": [21, 33, 34, 37, 38, 42, 53, 54, 60, 61, 68], "aggregate_data": [21, 53], "myqpu": 21, "gate_nam": 21, "els": [21, 35, 57, 64], "anyth": [21, 28, 30], "randint": [21, 64], "add_sampl": [21, 53], "100": [21, 59, 60, 68, 70], "001": [21, 48, 60], "110": 21, "aggreg": [21, 46, 53, 61], "histogram": 21, "500": 21, "010": [21, 66], "101": [21, 70], "106": 21, "136": 21, "132": 21, "011": 21, "126": 21, "124": [21, 68], "138": 21, "112": 21, "frequenc": [21, 53, 68], "mathrm": [21, 48, 51, 59, 60, 62, 68], "abstractplugin": [21, 53], "myplugin": 21, "third": [21, 28, 62], "discuss": [21, 28], "hardware_spec": [21, 54], "someth": [21, 38, 43], "_amplitud": 21, "3535533905932737": 21, "12499999999999994": 21, "_state": 21, "qregist": [21, 53, 61], "0x14dbc4cb9e50": 21, "msb": [21, 53], "_subtype_metadata": 21, "0x14dbc4cb96d0": 21, "0x14dbc4cc10a0": 21, "0x14dbc4cc11c0": 21, "incom": [21, 52], "batch_result": [21, 46], "need_flip": 21, "lsb_first": [21, 53], "has_statevector": [21, 53], "statevector": [21, 38, 42, 53, 66], "_valu": 21, "0x14cdb7f4dca0": 21, "0x14cdb7f4df10": 21, "0x14cdb7f53070": 21, "0x14cdb7f53190": 21, "error_data": 21, "in_memori": 21, "_parameter_map": 21, "values_data": 21, "0x14cdb7f53970": 21, "0x14cdb7f53be0": 21, "0x14cdb7f53d00": 21, "0x14cdb7f53e20": 21, "0x14cdb7f56640": 21, "0x14cdb7f568b0": 21, "0x14cdb7f569d0": 21, "0x14cdb7f56af0": 21, "saw": 21, "0x14c3e038adf0": 21, "0x14c3e03910a0": 21, "0x14c3e03911c0": 21, "0x14c3e03912e0": 21, "0x14c3e0391ac0": 21, "0x14c3e0391d30": 21, "0x14c3e0391e50": 21, "0x14c3e0391f70": 21, "0x14c3e038f790": 21, "0x14c3e038fa00": 21, "0x14c3e038fb20": 21, "0x14c3e038fc40": 21, "outgo": [21, 52], "deloc": 21, "distant": 21, "otherwis": [21, 26, 28, 33, 37, 53, 66], "emb": [21, 60], "adapt": [21, 28, 38, 42, 53, 55, 58, 59, 67, 69], "middl": 21, "simpler": [21, 64], "eigensolv": [21, 38, 42, 45, 55], "give": [21, 28, 52, 53], "until": [21, 37, 60], "satfisfi": 21, "cous": 21, "outsid": [21, 60], "prevent": [21, 28], "workflow": [21, 68], "architectur": [21, 24, 26, 54], "enter": [21, 28, 50, 60, 70], "With": 21, "treatment": 21, "stage": [21, 60, 61], "naiv": [21, 46], "width": [21, 35, 64], "explor": [21, 53, 64], "ecount": 21, "iterativeexplor": 21, "super": [21, 69], "initial_job": 21, "get_vari": [21, 38, 40, 41, 42, 48, 53, 64, 67], "linspac": 21, "all_valu": 21, "val": [21, 61], "current_job": 21, "min_val": 21, "best_index": 21, "best_param": 21, "9979453927503363": 21, "077478517802246": 21, "recept": [21, 53], "associ": [21, 28, 49, 53, 56, 59, 60, 64], "meta": [21, 38, 40, 41, 42, 53, 67], "acc": [21, 62], "__call__": [21, 53, 67], "upper": [21, 60], "don": [21, 28, 35], "bother": 21, "administr": [21, 53, 61], "burden": [21, 53], "slightli": 21, "creation": [21, 45], "serv": [21, 35, 53], "observablesplitt": [21, 68, 69], "port": [21, 33, 35, 53], "ip": [21, 33, 53], "1234": 21, "remoteplugin": [21, 53], "listen": [21, 33, 35, 53], "127": [21, 33], "extra": 21, "synchron": [21, 37], "disconnect": 21, "lost": [21, 61], "launch": 21, "remoteqpu": [21, 53], "neg": [22, 61, 64], "max_cut_gener": 22, "binder": [23, 30, 32, 33, 37, 38, 42], "googl": [23, 54], "throught": [23, 33], "cirq_to_qlm": 23, "qlm_to_cirq": 23, "interop": [23, 26, 30, 31, 32, 33, 37, 38, 42], "qlm_circ": 23, "your_google_circ": 23, "google_circ": 23, "your_qlm_circ": 23, "linequbit": 23, "gridqubit": 23, "grid": [23, 54], "coordin": 23, "sep_measur": [23, 32, 33, 37], "won": [23, 32, 33, 37, 61], "measureless": [23, 32, 33, 37], "resulting_circuit": [23, 32, 33, 37], "list_qubit": [23, 32, 33, 37], "normal": [23, 28, 32, 33, 37, 38, 42, 58, 60, 63], "regular": [23, 32, 33, 37, 48, 54], "qlm_circuit": [23, 33, 37], "convers": [23, 28, 37], "linux": [24, 26, 38, 39], "window": [24, 26, 38, 39, 43, 60], "maco": [24, 26, 38, 39], "64": [24, 26, 54], "x86_64": [24, 26], "brew": [24, 26, 29, 38, 39], "caus": [24, 26, 28, 60], "segment": [24, 26, 29, 38, 43, 66], "fault": [24, 26, 28, 29, 38, 43], "situat": [24, 26], "uninstal": [24, 26], "minor": [24, 26], "share": [25, 28, 35, 53], "project": [25, 34, 35, 60, 68], "contributor": [25, 28], "contrib": 25, "fork": [25, 35, 53], "commit": 25, "push": 25, "pull": 25, "licenc": 26, "agreement": [26, 28], "eula": [26, 28], "carefulli": [26, 28], "permit": [26, 28], "pursuant": 26, "legal": [26, 28], "entiti": [26, 28], "bull": [26, 28], "By": [26, 27, 28, 37, 52, 53, 59, 61, 62, 70], "download": [26, 28, 29, 30, 37], "render": 26, "agre": [26, 28], "bound": [26, 28, 53, 60, 61], "licens": 26, "promptli": 26, "delet": [26, 58], "prompt": 26, "tutori": [26, 30, 59], "imagemagick": 26, "wand": 26, "guid": 26, "overview": [26, 30, 45, 52, 61], "ipynb": [26, 30], "tabl": [26, 30, 31], "enabl": [26, 60], "qiskit": [26, 27, 30, 38, 42, 45], "projectq": [26, 27, 30, 45], "pyquil": [26, 27, 30, 45], "cirq": [26, 27, 30, 31, 45], "someon": 26, "who": [26, 28], "cherri": 26, "qiskit_bind": 26, "projectq_bind": 26, "cirq_bind": 26, "pyquil_bind": 26, "conflict": [26, 28], "ye": 27, "openqasm": [27, 45], "na": 27, "backend": [27, 34, 53], "FOR": 28, "hereinaft": 28, "recit": 28, "compani": 28, "person": 28, "oblig": 28, "identifi": [28, 60, 64], "footnot": 28, "media": 28, "materi": 28, "onlin": 28, "electron": [28, 56, 60], "primari": [28, 61], "student": 28, "research": 28, "develop": [28, 34, 69], "laptop": 28, "benefit": [28, 38, 39, 65], "accordingli": [28, 60], "runtim": [28, 37, 38, 42], "apach": 28, "v2": 28, "categori": [28, 38, 43], "root": [28, 62], "packag": [28, 56, 60, 61, 62, 69], "folder": 28, "compli": 28, "thereof": 28, "shall": 28, "THE": 28, "wish": [28, 62, 64], "OF": 28, "grant": 28, "author": [28, 53], "acknowledg": 28, "refrain": 28, "violat": 28, "whatsoev": 28, "thereund": 28, "confidenti": 28, "subject": [28, 64], "provis": 28, "nondisclosur": 28, "parti": 28, "reproduc": [28, 44], "disclos": 28, "exercis": 28, "extent": 28, "disclosur": 28, "employe": 28, "consult": [28, 57], "advisor": 28, "prior": [28, 61, 69], "approv": 28, "forego": 28, "satisfi": [28, 52, 64], "degre": [28, 64], "less": [28, 53, 61], "reason": [28, 53, 57], "whom": 28, "protect": 28, "notwithstand": 28, "breach": 28, "compel": 28, "judici": 28, "government": 28, "investig": [28, 49], "proceed": [28, 29], "assist": 28, "opportun": 28, "except": [28, 35, 38, 40, 41, 42, 53, 60, 62, 64, 67, 68], "contrari": 28, "herein": 28, "liabl": 28, "prove": 28, "public": [28, 48, 59, 61, 62], "domain": 28, "ii": [28, 60], "demonstr": 28, "iii": 28, "iv": 28, "vi": 28, "remedi": 28, "immedi": 28, "irrepar": 28, "harm": 28, "monei": 28, "damag": 28, "alon": 28, "inadequ": 28, "compens": 28, "event": 28, "entitl": 28, "seek": 28, "equit": 28, "relief": 28, "restrain": 28, "injunct": 28, "perman": 28, "bond": 28, "secur": 28, "miscellan": [28, 35], "assign": [28, 35, 64, 66], "sublicens": 28, "deleg": [28, 53], "transfer": [28, 64], "consent": 28, "merg": [28, 53], "consolid": 28, "purchas": 28, "substanti": 28, "asset": 28, "stock": 28, "assigne": 28, "enforc": [28, 53], "against": [28, 61], "successor": 28, "unauthor": 28, "null": [28, 53], "void": 28, "constitut": 28, "regul": 28, "technologi": 28, "complianc": 28, "forc": [28, 64], "majeur": 28, "respons": [28, 37], "delai": [28, 53], "failur": 28, "payment": 28, "circumst": 28, "forese": 28, "god": 28, "earthquak": 28, "hurrican": 28, "volcan": 28, "erupt": 28, "strike": 28, "lockout": 28, "riot": 28, "civil": 28, "unrest": 28, "protest": 28, "war": 28, "epidem": 28, "communic": 28, "diseas": 28, "outbreak": 28, "health": 28, "emerg": 28, "superimpos": 28, "fire": 28, "commun": [28, 44], "disast": 28, "period": 28, "opinion": 28, "affect": [28, 60], "six": [28, 53], "month": 28, "date": 28, "virtu": 28, "aforesaid": 28, "endeavour": 28, "effecti": 28, "cooper": 28, "faith": 28, "adopt": [28, 64], "impact": 28, "off": [28, 29, 56], "nearshor": 28, "proportion": 28, "adequ": 28, "govern": 28, "disput": 28, "resolut": 28, "franc": 28, "rule": [28, 38, 39, 48, 50, 53, 59, 60, 70], "exclus": 28, "jurisdict": 28, "venu": 28, "compet": 28, "court": 28, "pari": 28, "manner": 28, "within": [28, 35, 37, 61], "sixti": 28, "dai": 28, "copyright": 28, "2021": [28, 38, 39, 40, 50, 59, 70], "reserv": 28, "worldwid": 28, "forth": [28, 59, 64], "locat": [28, 58, 63, 64], "premis": 28, "intend": 28, "network": 28, "deriv": [28, 37, 38, 39, 53, 67], "market": 28, "publish": [28, 35, 53], "rent": 28, "leas": 28, "loan": 28, "commerci": 28, "alter": 28, "engin": [28, 32], "disassembl": 28, "human": [28, 52], "perceiv": 28, "lend": 28, "sell": 28, "resel": 28, "intellectu": 28, "treati": 28, "sold": 28, "furthermor": [28, 64], "trademark": 28, "mark": 28, "pertain": 28, "NO": 28, "warranti": 28, "AS": 28, "ITS": 28, "supplier": 28, "licensor": 28, "TO": 28, "BY": 28, "disclaim": 28, "impli": [28, 35], "statutori": 28, "BUT": 28, "merchant": 28, "satisfactori": 28, "titl": 28, "infring": 28, "risk": 28, "aris": [28, 59], "WITH": 28, "liabil": 28, "IN": 28, "BE": 28, "substitut": 28, "incident": 28, "indirect": 28, "consequenti": [28, 29], "loss": [28, 47, 59], "busi": 28, "profit": 28, "interrupt": [28, 52], "inabl": 28, "IF": 28, "SUCH": 28, "amount": [28, 53], "paid": 28, "THAT": 28, "bear": 28, "technic": 28, "inaccuraci": 28, "typograph": 28, "januari": [28, 38, 43], "2004": 28, "reproduct": 28, "owner": 28, "union": [28, 47, 53, 60], "contract": [28, 35, 53], "ownership": [28, 34], "fifti": 28, "percent": 28, "outstand": 28, "benefici": 28, "permiss": [28, 38, 43], "prefer": [28, 56, 57], "modif": [28, 68], "authorship": 28, "appendix": 28, "editori": 28, "revis": 28, "annot": [28, 61], "elabor": 28, "whole": [28, 38, 39, 60], "intention": 28, "inclus": [28, 53], "behalf": 28, "verbal": 28, "mail": 28, "track": 28, "improv": [28, 55, 58, 59, 60, 66], "exclud": 28, "conspicu": 28, "Not": [28, 53], "subsequ": [28, 57, 58], "incorpor": 28, "herebi": 28, "perpetu": 28, "charg": [28, 56, 60], "royalti": 28, "irrevoc": 28, "publicli": 28, "patent": 28, "claim": 28, "institut": 28, "litig": 28, "cross": 28, "counterclaim": 28, "lawsuit": 28, "alleg": 28, "contributori": 28, "redistribut": 28, "medium": 28, "meet": [28, 52], "recipi": 28, "promin": 28, "retain": 28, "wherev": 28, "alongsid": 28, "addendum": 28, "constru": 28, "statement": [28, 35, 61], "unless": [28, 62], "noth": [28, 61], "supersed": 28, "trade": 28, "customari": 28, "kind": [28, 53, 70], "appropri": [28, 46, 53, 63, 64], "tort": 28, "deliber": 28, "grossli": 28, "charact": [28, 53], "goodwil": 28, "stoppag": 28, "malfunct": 28, "fee": 28, "indemn": 28, "indemnifi": 28, "defend": 28, "harmless": 28, "boilerpl": 28, "enclos": [28, 60], "bracket": [28, 61], "comment": [28, 29, 61], "recommend": [28, 34, 60, 63], "identif": 28, "archiv": 28, "twice": [29, 53], "homebrew": 29, "sudo": 29, "taken": [29, 60], "sh": 29, "bin": 29, "bash": [29, 31], "curl": 29, "fssl": 29, "githubusercont": 29, "com": 29, "ask": [29, 35, 44], "screen": 29, "echo": 29, "manpath": 29, "johnsmith": 29, "bash_profil": 29, "eval": [29, 60], "shellenv": 29, "setup": [29, 64], "latest": 29, "python3": 29, "anaconda": 29, "unfortun": 29, "sure": [29, 64], "browser": 30, "web": 30, "mybind": 30, "clone": 30, "github": [30, 44], "repositori": 30, "qasm": [31, 52], "oqasm2circ": 31, "oqasmpars": 31, "bell_data": 31, "creg": 31, "cx": 31, "flawlessli": 31, "haven": 31, "write_t": 31, "debug": [31, 53, 61, 69], "tabmodul": 31, "oqasm_tab": 31, "chunk": 31, "tab": [31, 53], "aqasmprint": 32, "aqasmengin": 32, "cengin": 32, "mainengin": 32, "aq": 32, "eng": 32, "engine_list": 32, "allocate_qureg": 32, "recov": 32, "projectq_to_qlm": 32, "modulenotfounderror": 32, "stream": 32, "vers": 33, "pyquil_to_qlm": 33, "qlm_to_pyquil": 33, "your_pyquil_circuit": 33, "pyquil_circuit": 33, "your_qlm_circuit": [33, 37], "qvm": 33, "15011": 33, "get_qc": 33, "qcs_settings_applications_pyquil_qvm_url": 33, "9q": 33, "qlm_job": 33, "pyquil_prog": 33, "program_pragma": 33, "rigetti": [33, 54], "chip": [33, 37, 38, 40, 41, 42, 54], "tell": 33, "set_qpu": [33, 37], "embed": [33, 34, 35, 37, 53, 57, 60], "propos": [34, 60], "pybind11": 34, "use_gpu": 34, "use_nbthreads_heurist": 34, "light_circuit": 34, "tqdm": 34, "readonly_statevector": 34, "gpu": 34, "thread": [34, 35, 53], "omp_num_thread": 34, "progress": 34, "lsb": [34, 53], "sens": 34, "perfect": [34, 64], "hidden": [34, 53], "thought": 34, "resiz": 34, "intuit": 34, "i_0i_1i_2i_3": 34, "signific": [34, 53, 61, 62], "i_3i_2i_1i_0": 34, "influenc": [34, 59, 64], "clinalgstatevectorcpudoubl": 34, "apply_1qbit_ctrl_g": 34, "ctrl_qubit": 34, "apply_1qbit_g": 34, "apply_2qbit_ctrl_g": 34, "qubit1": 34, "qubit2": 34, "apply_2qbit_g": 34, "apply_ccnot": 34, "qubit3": 34, "apply_cnot": 34, "apply_csign": 34, "apply_h": 34, "qbits_c": 34, "apply_iswap": 34, "apply_ph": 34, "apply_rx": 34, "apply_ri": 34, "apply_rz": 34, "apply_": 34, "apply_sqrtswap": 34, "apply_swap": 34, "apply_t": 34, "apply_x": 34, "apply_i": 34, "apply_z": 34, "apply_nqbit_ctrl_g": 34, "apply_nqbit_g": 34, "edit": 34, "rightmost": 34, "array_readonli": 34, "readonli": 34, "expectation_valu": 34, "wobserv": 34, "get_distribut": 34, "amp_threshold": [34, 53, 68], "ndarrai": [34, 35, 50, 53, 60, 63, 64, 70], "float64": 34, "margin": 34, "valuabl": 34, "get_mapped_distribut": 34, "mapintdoubl": 34, "map": [34, 38, 40, 41, 42, 53, 60], "get_mapped_statevector": 34, "dictionari": [34, 46, 53, 60, 64, 67], "threshold": [34, 53, 58, 60, 61, 68], "get_permuted_statevector": 34, "psi_0_ptr": 34, "pure": [34, 52, 53, 61], "nbqubit": 34, "undefin": 34, "mapintint": 34, "occur": [34, 35, 38, 43, 53, 59], "sample_subset": 34, "set_num_thread": 34, "nbthread": 34, "simulate_circuit": 34, "wcircuit": 34, "clinalgwcircuit": 34, "lightweight": 34, "state_prob": 34, "vert": [35, 60], "psi": [35, 48, 53, 60, 64, 67, 68], "i_": [35, 57, 60, 63], "a_": [35, 57, 60, 62], "tensordot": 35, "remark": 35, "exponenti": [35, 51, 58, 59, 62], "ram": 35, "account": 35, "realist": 35, "nois": [35, 38, 42, 45, 55, 58, 59, 67, 68, 69], "linalg": [35, 38, 39, 53, 56, 59, 60, 70], "host_ip": [35, 53], "localhost": [35, 53], "server_typ": [35, 53], "multi": [35, 53, 56], "pool": [35, 47, 53, 58, 59, 61], "imbric": 35, "processingtyp": [35, 53], "intermediatemeasur": [35, 53], "descriptor": 35, "branch": 35, "mainli": [35, 53], "success": [35, 37, 70], "clasic": 35, "state_vec": 35, "nb_sampl": 35, "thank": [35, 60, 64], "absenc": [35, 68], "intprob_list": 35, "renorm": 35, "afterward": [35, 61], "prob": [35, 56], "intprob": 35, "undergo": 35, "intermediari": [35, 50, 70], "info": [35, 49, 56, 60], "ax": 35, "recomput": 35, "norm": [35, 53], "nd": 35, "raise_break": 35, "op_po": 35, "mat2nparrai": 35, "equip": 36, "varieti": 36, "albeit": 36, "resembl": 36, "seed": [36, 70], "arithexpress": [36, 38, 39, 53, 64], "temp": 36, "j_coupl": 36, "h_mag": 36, "temp_list": 36, "2d": [36, 60, 64], "1d": [36, 64], "extract_j_and_h_from_ob": 36, "e_i": [36, 64], "s_i": 36, "s_j": 36, "h_i": [36, 53], "offset_i": [36, 64], "integer_to_spin": 36, "n_spin": 36, "decim": [36, 56], "spins_to_integ": 36, "solution_configur": 36, "spins_arrai": 36, "qiskit_to_qlm": 37, "qlm_to_qiskit": 37, "your_qiskit_circuit": 37, "qiskit_circuit": 37, "qiskitruntimeqpu": [37, 38, 42], "sampler": 37, "estim": [37, 38, 42, 45, 46, 53, 55, 59, 61, 68], "primit": 37, "ibmq_qasm_simul": 37, "qiskitruntimeservic": 37, "credenti": 37, "save_account": 37, "qiskit_ibm_runtim": 37, "ibm": [37, 38, 42, 54], "token": [37, 53], "my_ibm_token": 37, "channel": [37, 59], "ibm_quantum": 37, "backendtoqpu": 37, "ibmq_backend": 37, "ibmq_armonk": 37, "ibmq": 37, "asyncbackendtoqpu": 37, "asynchron": 37, "qiskitjob": 37, "async_qpu": 37, "async_result": [37, 38, 39], "sleep": 37, "qputobackend": 37, "qiskit_result": 37, "rxx": 37, "rzz": 37, "quantumcircuit": 37, "old": 37, "futur": [37, 53], "skip_transpil": 37, "experi": [37, 38, 42, 60], "backend_nam": 37, "transpil": 37, "optimization_level": 37, "despit": 37, "aer_simul": 37, "argment": 37, "login": 37, "qiskit_token": 37, "light": 37, "heavi": 37, "promis": 37, "retrieve_job": 37, "file_nam": 37, "qlm_batch": 37, "jobv1": 37, "async_job": 37, "max_shot": 37, "cancel": 37, "job_id": 37, "statu": 37, "connector": 37, "plugabl": 37, "backendconfigur": 37, "03": [38, 43], "2023": [38, 43], "mainten": [38, 43, 58], "pdf": [38, 43, 53], "layout_bas": [38, 43], "pillow": [38, 43], "07": [38, 43], "layout": [38, 43], "getsiz": [38, 43], "getbbox": [38, 43], "getlength": [38, 43], "suppress": [38, 43], "nowarn": [38, 43], "ipython": [38, 43, 53], "directori": [38, 43], "mayb": [38, 43], "ipython_dir": [38, 43], "home": [38, 43], "profile_default": [38, 43], "startup": [38, 43], "simplefilt": [38, 43], "action": [38, 43], "ignor": [38, 43, 46, 53, 61, 64], "restart": [38, 43], "octob": [38, 42], "31": [38, 42, 54], "2022": [38, 41, 42], "clinalg": [38, 42, 53, 68, 69], "algebra": [38, 42, 57, 58, 69], "jordan": [38, 42, 55, 57], "wigner": [38, 42, 55, 57], "bravyi": [38, 42, 55, 57], "kitaev": [38, 42, 55, 57], "pariti": [38, 42, 55, 57], "ucc": [38, 42, 45, 55, 56, 57, 58], "molecul": [38, 42, 45, 55, 56, 59, 60], "studi": [38, 42, 55, 56, 58, 59], "select": [38, 42, 47, 53, 55, 56, 58, 59, 60], "gradient": [38, 39, 42, 45, 47, 53, 55, 58, 59, 67, 69], "sequenti": [38, 42, 45, 55, 58, 59, 69, 70], "hybrid": [38, 42, 55, 58, 59, 60, 69, 70], "extrapol": [38, 42, 55, 59, 69], "multiqubit": [38, 42, 45, 55, 58, 59, 69], "submatrices_onli": [38, 40, 41, 42, 53, 61], "processing_typ": [38, 40, 41, 42, 53], "quameleonplugin": [38, 40, 41, 42, 53, 69], "zuchongzhi": [38, 40, 41, 42, 54], "chines": [38, 40, 41, 42], "qiksit": [38, 42], "throw": [38, 40, 41, 42], "cleaner": [38, 40, 41, 42], "sort": [38, 40, 41, 42, 53, 60], "junction": [38, 40, 41, 42, 45], "differenti": [38, 39, 40, 41, 42, 45, 53], "u2": [38, 42], "u3": [38, 42], "april": [38, 41], "decemb": [38, 40], "june": [38, 39], "qlmaa": [38, 39], "nnizer": [38, 39], "remote_stack": [38, 39], "join": [38, 39, 44], "occurr": [38, 39, 51], "gather": [38, 39, 61], "partial": [38, 39, 48, 53], "multivari": [38, 39], "kerenidi": [38, 39, 63], "prakashqram": [38, 39], "kptree": [38, 39, 61, 63], "substract": [38, 39, 61], "divis": [38, 39], "sigsegv": [38, 39], "bug": 44, "slack": 44, "group": [44, 46, 53, 60], "ticket": 44, "report": 44, "beginn": 45, "hubbard": [45, 56, 57], "chemistri": [45, 55, 57, 58, 60], "h2": 45, "lih": [45, 56], "expans": [45, 55], "multiplelaunchesplugin": 45, "fourier": [45, 62], "avala": 45, "quick": 45, "amplif": [45, 61], "splitter": 45, "epr": 45, "max": [45, 53, 60, 64, 69], "cut": [45, 64, 69], "cover": [45, 64, 69], "analyz": [45, 69], "x_0": [46, 68], "x_1": 46, "z_1z_2": 46, "boil": [46, 59], "z_1": [46, 68], "z_2": 46, "q_i": 46, "split": [46, 58], "splitting_method": 46, "x_basis_chang": 46, "y_basis_chang": 46, "approach": [46, 52, 60, 62], "color": [46, 64], "greedi": [46, 64], "clifford": 46, "entangl": [46, 60, 64], "todai": 46, "coincid": 46, "iff": [46, 53], "get_fresh_kei": 46, "adaptvqeplugin": [47, 58, 59, 60], "operator_pool": 47, "n_iter": [47, 59], "early_stopp": 47, "06": 47, "grimslei": 47, "et": [47, 50, 58, 59, 60, 64, 70], "al": [47, 50, 58, 59, 60, 64, 70], "spinhamiltonian": [47, 57, 58, 59], "lambda_step": 48, "natural_gradi": [48, 59], "stop_crit": 48, "grad_norm": 48, "user_custom_g": 48, "vec": [48, 53, 60, 67], "eta": [48, 59], "nabla": [48, 59], "_i": [48, 60, 63], "metric": [48, 59], "g_": 48, "bigg": 48, "theta_j": [48, 53], "1000": [48, 68], "criterion": 48, "energy_dist": 48, "toler": [48, 61], "randomli": [48, 70], "n_run": 49, "verbos": [49, 50, 60, 70], "duplic": 49, "upstream": 49, "familiar": 50, "yourself": 50, "ncycl": [50, 60, 70], "coeff": [50, 53, 70], "rotosolv": [50, 70], "nakanishi": [50, 59, 70], "1903": [50, 70], "12166": [50, 70], "2020": [50, 59, 70], "ostaszewski": [50, 59, 70], "1905": [50, 70], "09692": [50, 70], "cycl": [50, 60, 70], "leverag": [50, 59, 70], "p": [50, 59, 60, 62, 70], "rescal": [50, 70], "n_in": 51, "extrap_g": 51, "extrap_method": 51, "decomposit": 51, "gg": [51, 59, 64], "tr": 51, "rho_": 51, "hat": [51, 53, 59, 60], "strength": 51, "propto": 51, "ins": 51, "an_": [51, 59], "pm": [51, 53, 59], "infer": [51, 59, 61], "latter": [51, 59, 60], "Be": 51, "correctli": 51, "facilit": 52, "central": 52, "my_program": 52, "qbits_reg": [52, 61], "cbits_reg": 52, "explanatori": 52, "outermost": 52, "famili": [52, 61], "c_matrix": 52, "phi": [52, 56, 60], "customg": 52, "mat": 52, "my_minus_z": 52, "inexist": 52, "my_routin": 52, "outcom": [52, 53], "cc_appli": [52, 61], "condition": 52, "submodul": [52, 58, 61], "unifi": 52, "wrapper_post_process": 53, "postprocessresult": 53, "mininm": 53, "abctract": 53, "met": 53, "hostnam": 53, "hand": [53, 61], "commonqpu": [53, 68], "built": [53, 57, 60, 61, 63, 64, 67], "address": [53, 63], "behav": [53, 61], "handler": 53, "adjunct": 53, "goe": 53, "forward": 53, "remotebatchgener": 53, "unicod": 53, "remoteappl": 53, "psi_0": [53, 64], "vname": 53, "w": [53, 60], "psi_i": 53, "induc": 53, "fname": [53, 61], "from_byt": 53, "byte": 53, "from_thrift": 53, "tobject": 53, "shift_qbit": 53, "icreas": 53, "to_thrift": [53, 61], "enum": 53, "boson": 53, "do_clean_up": [53, 60], "hermitian": 53, "hilbert": 53, "span": 53, "pauli_op": 53, "do_validity_check": 53, "coeffcient": 53, "xxy": 53, "front": [53, 65], "check_valid": 53, "On": [53, 68], "drive": 53, "tname": 53, "gamma_t": [53, 64], "lambda_i": 53, "driven": 53, "halt": 53, "largest": 53, "possibli": 53, "infinit": [53, 60], "apparit": 53, "prune": 53, "unlik": 53, "t_variabl": 53, "tmax_vari": 53, "145": 53, "schedule1": 53, "schedule2": 53, "heavisid": 53, "ponder": 53, "signal": 53, "filter": [53, 68], "45": [53, 54], "past": 53, "bar": 53, "thriftresult": 53, "deviat": [53, 60], "dictionnari": 53, "wrap_sampl": 53, "qreg_list": 53, "varepsilon_": 53, "equiv": [53, 60, 62], "f_": [53, 60], "p_k": 53, "f_k": 53, "set_qreg": 53, "pretti": 53, "int_msb_valu": 53, "__str__": 53, "lsb_int": 53, "reprensent": 53, "gate_po": 53, "cat_circuit": 53, "tensori": 53, "kron_circuit": 53, "my_circuit": 53, "new_circuit": 53, "34": [53, 54], "_gate_set": 53, "has_matric": 53, "var_dic": 53, "ancilla_map": 53, "_serialized_gate_set": 53, "0x14c9ca409c10": 53, "v_name": 53, "v_valu": 53, "gate_set": [53, 61, 64, 65, 67], "regener": 53, "portion": 53, "side": [53, 65], "avoid": 53, "feel": 53, "gateset": [53, 61, 65], "freshli": 53, "v_dictionari": 53, "fill": 53, "dagger_from_param": 53, "crawl": [53, 61], "valueerror": 53, "linker": 53, "_10": 53, "_8": 53, "asbtract": 53, "invert": [53, 62], "334": 53, "smarter": 53, "smart_dagg": 53, "printer": 53, "plot_in_notebook": 53, "consol": [53, 69], "fill_matric": 53, "include_default_gate_set": 53, "insert_g": 53, "remove_lock": [53, 61], "lock": [53, 61], "placehold": 53, "094947017729282e": 53, "constain": 53, "max_depth": 53, "circuit_nam": 53, "renaming_dict": 53, "ascii": 53, "art": 53, "fmt": 53, "filenam": 53, "hardware_model": 53, "plot": 53, "cell": [53, 57], "shell": 53, "get_ipython": 53, "svg": 53, "timeplot": 53, "alias": 53, "topologi": [53, 54, 65, 66, 69], "as_graph": 53, "to_nx": [53, 54], "rigetti_aspen": [53, 54], "nx_graph": 53, "as_quameleon": 53, "quameleon": [53, 65], "is_direct": 53, "thrifttopologi": 53, "topologytyp": [53, 65], "lnn": [53, 54, 65], "add_edg": 53, "qb1": 53, "qb2": 53, "toplogi": 53, "from_nx": 53, "vmap": 53, "init_non": 53, "getter": 53, "set_nbqbit": 53, "all_to_al": 53, "consecut": [53, 70], "init": 53, "behind": 53, "gatesignatur": [53, 61], "arg_typ": 53, "func": [53, 61], "get_circuit": 53, "get_matrix": [53, 56, 58, 59, 60], "gen": 53, "fun": 53, "dictio": 53, "add_signatur": [53, 61], "signa": 53, "redefin": [53, 61], "gatesyntaxredefinit": 53, "new_gate_set": 53, "gatesyntax": 53, "var_typ": [53, 61], "numer": [53, 60], "forbidden": 53, "other_var": 53, "rpn": 53, "symbol": 53, "children": [53, 64], "arbitrari": [53, 63], "label": [53, 60, 64], "from_str": 53, "thrift_str": 53, "invers": [53, 59, 64], "pretty_print": 53, "infix": 53, "pretty_token": 53, "ast": 53, "omit": [53, 61], "wouldn": 53, "dx": 53, "all_symbol": 53, "cyfunct": 53, "0x154da700d860": 53, "0x154da700da00": 53, "0x154da700dba0": 53, "uminu": 53, "0x154da700dd40": 53, "0x154da700dee0": 53, "0x154da7001110": 53, "ufunc": 53, "0x154da70015f0": 53, "ln": 53, "0x154da8cbfdc0": 53, "imag": 53, "0x154da8cbff70": 53, "0x154da87f6670": 53, "ab": [53, 60], "absolut": 53, "atan2": 53, "my_min": 53, "awar": 53, "formula_str": 53, "circuit_build": [53, 61], "matrix_util": 53, "get_predef_gener": 53, "get_param_gener": 53, "default_gate_set": [53, 61], "saemlessli": 53, "qlm_object": 53, "initial_object": 53, "binding_kwarg": 53, "particul": 53, "variablenam": 53, "fetch": 53, "hood": 53, "var_nam": [53, 61], "triplet": 53, "optimizer_data": 53, "superconduct": 54, "agav": 54, "rigetti_agav": 54, "aspen": 54, "burlington": 54, "ibm_burlington": 54, "yorktown": 54, "ibm_yorktown": 54, "melbourn": 54, "ibm_melbourn": 54, "rueschlikon": 54, "ibm_rueschlikon": 54, "tokyo": 54, "ibm_tokyo": 54, "singapor": 54, "ibm_singapor": 54, "johannesburg": 54, "ibm_johannesburg": 54, "sycamor": 54, "google_sycamor": 54, "35": [54, 60], "44": 54, "49": [54, 68], "36": [54, 64], "32": [54, 62], "41": 54, "37": 54, "46": 54, "33": [54, 61], "42": 54, "51": [54, 68], "38": 54, "43": [54, 64], "52": 54, "39": 54, "48": 54, "53": 54, "54": 54, "55": 54, "56": 54, "57": 54, "58": 54, "59": 54, "61": 54, "62": 54, "63": 54, "65": 54, "linedevic": 54, "nearest": [54, 60], "neighbor": 54, "griddevic": 54, "dimx": 54, "dimi": 54, "3x2": 54, "dimens": [54, 60, 63], "squaregriddevic": 54, "dim": 54, "squar": 54, "3x3": 54, "alltoal": 54, "revamp": 55, "dq": [55, 58], "changelog": 55, "broken": 55, "flagship": 56, "electronicstructurehamiltonian": [56, 57, 58], "hpq": [56, 60], "hpqr": [56, 60], "hamiltonian_sp": 56, "to_spin": [56, 57, 58, 60], "eigenenergi": [56, 60], "exact_energi": 56, "eigh": 56, "previous": [56, 59], "nenergi": 56, "ntheta": 56, "9999999974320526": 56, "1416940034276815": 56, "2147911128415545": 56, "chemist": 56, "molecular": [56, 58], "cluster": [56, 58], "guess": [56, 58, 60], "m\u00f8ller": [56, 60], "plesset": [56, 58, 60], "perturb": [56, 58, 60, 70], "h_2": 56, "introduc": [56, 58, 67], "meant": [56, 60, 64], "thorough": 56, "whatev": 56, "sake": [56, 59], "pyscf": [56, 58, 60], "perform_pyscf_comput": [56, 60], "geometri": [56, 60], "pyscf_tool": [56, 60], "li": 56, "75": 56, "31g": 56, "rdm1": [56, 60], "orbital_energi": [56, 60], "nuclear_repuls": [56, 60], "n_electron": [56, 60], "one_body_integr": [56, 60], "two_body_integr": [56, 60], "mol_h": [56, 60], "9071609330057144": 56, "get_electronic_hamiltonian": [56, 57, 58, 60], "transform_basi": [56, 60], "select_active_spac": [56, 60], "orbit": [56, 60], "occup": [56, 60], "noon": [56, 60], "basis_chang": 56, "axi": [56, 63, 68], "mol_h_new_basi": 56, "proce": 56, "mol_h_act": 56, "active_indic": [56, 60], "occupied_indic": [56, 60], "threshold_1": [56, 60], "02": [56, 60], "threshold_2": [56, 60], "002": 56, "nuclear": [56, 60], "repuls": [56, 60], "bring": 56, "occupi": [56, 60], "ldca": 56, "correl": [56, 57, 60], "mr": 56, "four": [56, 60], "excit": 56, "preserv": [56, 64, 66], "mrep": 56, "eight": 56, "compress": 56, "eigenvalu": [56, 58, 60], "eigenvector": 56, "make_hubbard_model": [56, 60], "t_mat": [56, 60], "mu": [56, 60], "eigval": [56, 60], "eigvalsh": [56, 59, 60], "round": 56, "1403": 56, "phase_estim": [56, 60, 61], "perform_phase_estim": [56, 60], "nqbits_phas": 56, "n_trotter_step": [56, 60], "guess_energi": 56, "size_interv": [56, 60], "e_target": [56, 60], "002343750000000089": 56, "trotteris": [56, 60], "make_trotterisation_routin": [56, 60], "qrout": 56, "final_tim": [56, 60], "apply_quantum_subspace_expans": [56, 60], "fermionhamiltonian": [57, 58], "z_": 57, "y_": 57, "zy": [57, 60], "c_": [57, 60, 64], "cc": [57, 60], "cccc": [57, 60], "to_electron": [57, 58, 60], "pq": [57, 60], "a_p": [57, 60], "a_q": [57, 60], "pqr": [57, 60], "a_r": [57, 60], "mathbb": [57, 60], "h_pq": [57, 60], "h_pqr": [57, 60], "h_elec": 57, "htype": 57, "to_fermion": [57, 58, 60], "uv": [57, 60], "sigma": [57, 60], "uvwx": [57, 60], "convert_to_h_integr": [57, 60], "molecularhamiltonian": [57, 58], "bare": 57, "much": 57, "5j": 57, "h_fermion": 57, "h_spin": 57, "825": 57, "175": 57, "h_fermion1": 57, "h_fermion2": 57, "h_spin1": 57, "h_spin2": 57, "fermion_comutator_matrix": 57, "spin_comutator_matrix": 57, "is_equal_sign": 57, "wick": [57, 58, 60], "speed": 57, "anderson": 57, "toi": 57, "strong": 57, "impur": [57, 58], "site": [57, 60], "bath": [57, 60], "bugfix": 58, "qchem": 58, "renam": 58, "rewritten": 58, "simplif": 58, "moleculeinfo": 58, "restrict_active_spac": [58, 60], "gradientdescentoptim": [58, 59, 60, 69], "descent": [58, 59, 69], "seqoptim": [58, 59, 60, 67, 69, 70], "nakanashi": 58, "zeronoiseextrapol": [58, 59, 60, 69], "multiplelaunchesanalyz": [58, 59, 60, 67, 69], "fermionic_util": 58, "exact_eigen_energi": 58, "fermionic_hamiltonian_exponenti": 58, "reloc": 58, "ansatz_circuit": 58, "build_ucc_ansatz": 58, "ucc_deprec": 58, "construct_ucc_ansatz": [58, 60], "clarifi": 58, "compute_active_space_integr": [58, 60], "_compute_active_space_const": 58, "build_cluster_op": 58, "privat": 58, "select_active_orbit": [58, 60], "init_uccsd": 58, "trial": [58, 60], "mollet": 58, "2nd": [58, 60], "get_initial_params_and_cluster_op": 58, "guess_init_param": [58, 60], "get_hf_ket": [58, 60], "hartre": [58, 59, 60], "fock": [58, 59, 60], "get_cluster_op": [58, 60], "select_excitation_oper": 58, "get_active_space_hamiltonian": 58, "said": 59, "slower": 59, "cluster_oper": 59, "harre": 59, "hf_init": 59, "char": 59, "adaptvqe_plugin": 59, "theta_init": 59, "1372701679264894": 59, "1372701679265027": 59, "sgd": 59, "adam": 59, "euclidean": 59, "distanc": 59, "baseless": 59, "assumpt": [59, 61], "rate": 59, "behaviour": 59, "fisher": 59, "steepest": 59, "fubini": 59, "devis": 59, "theta_0": 59, "theta_1": 59, "theta_2": 59, "theta_3": 59, "theta_4": 59, "natgrad_opt": 59, "learning_paramet": 59, "8660254037652464": 59, "certain": [59, 67, 68], "ic": 59, "outperform": 59, "sensit": [59, 67], "whch": 59, "regim": 59, "vari": 59, "intens": [59, 60], "artifici": 59, "2n_": 59, "consider": [59, 60], "faulti": 59, "depolar": 59, "fold": [59, 61], "endo": 59, "calcul": [59, 60, 64], "rangle_": 59, "richardson": 59, "giurgica": 59, "tiron": 59, "unclear": 59, "varianc": 59, "essenti": 60, "4j": 60, "normal_ord": 60, "4d": 60, "dr": 60, "phi_": 60, "particl": [60, 70], "kin": 60, "pot": 60, "coulomb": 60, "randn": 60, "rand": 60, "8646696564280557": 60, "delta_": 60, "sigma_1": 60, "sigma_2": 60, "ux": 60, "vw": 60, "iint": 60, "r_": 60, "resp": 60, "phi_u": 60, "wavefunct": [60, 68], "freez": 60, "n_i": 60, "ca": 60, "divid": 60, "inact": 60, "unchang": 60, "varepsilon_2": 60, "varepsilon_1": 60, "cup": 60, "geq": [60, 64], "n_e": 60, "e_": 60, "ijji": 60, "ijij": 60, "descend": 60, "transformation_matrix": 60, "u_": [60, 62], "qi": 60, "jq": 60, "ijkl": 60, "qj": 60, "kr": 60, "molecular_hamiltonian": 60, "9596355828799843": 60, "5219870724635176": 60, "7833687681852824": 60, "078624563943592": 60, "0962151244848921": 60, "8267120574688447": 60, "580016218138583": 60, "6299387915179797": 60, "4269900039559939": 60, "3505812623469552": 60, "11843856538127331": 60, "000154730296616271": 60, "07070930899227973": 60, "11769152174655023": 60, "6365744550535969": 60, "2078781257999056": 60, "8293383643544566": 60, "24217690377583412": 60, "5264147146642624": 60, "3949355967734238": 60, "7451208278594932": 60, "t_": 60, "dagger_i": 60, "uparrow": 60, "downarrow": 60, "hop": 60, "n_site": 60, "chemic": 60, "make_anderson_model": 60, "epsilon": 60, "canon": 60, "csq": 60, "f_p": 60, "f_q": 60, "f_r": 60, "n_b": 60, "siam": 60, "v_i": 60, "epsilon_i": 60, "2n_b": 60, "f_0": 60, "annihil": 60, "f_1": 60, "f_2": 60, "1st": 60, "f_3": 60, "make_embedded_model": 60, "lambda_c": 60, "t_loc": 60, "int_kernel": 60, "limits_": 60, "2m": 60, "f_j": 60, "_k": 60, "f_l": 60, "loc": 60, "d_": [60, 63], "imp": 60, "onsit": 60, "uncorrel": 60, "conv": 60, "2i": [60, 62], "_1": [60, 64], "transform_to_jw_basi": 60, "fermion_hamiltonian": 60, "jw": 60, "spin_hamiltonian": 60, "075j": 60, "yx": 60, "075": 60, "xy": 60, "transform_to_bk_basi": 60, "bk": 60, "transform_to_parity_basi": 60, "make_ldca_circ": 60, "nb_fermionic_mod": 60, "eigstate_ind": 60, "slater": 60, "dallair": 60, "demer": 60, "2019": 60, "matchgat": 60, "eigenst": [60, 64], "make_mr_circ": 60, "small": [60, 64], "sugisaki": 60, "make_mrep_circ": 60, "n_fsim_cycl": 60, "set_phi_to_0": 60, "fsim": 60, "neighbour": 60, "make_general_hwe_circ": 60, "n_cycl": 60, "rotation_g": 60, "entangling_g": 60, "predefg": 60, "thinli": 60, "dress": 60, "surround": 60, "odd": 60, "pattern": 60, "make_shallow_circ": 60, "keen": 60, "make_compressed_ldca_circ": 60, "synthoplin": 60, "h_el": 60, "n_phase_bit": 60, "init_vec": 60, "n_adiab_step": 60, "basis_transform": 60, "n_shot": 60, "qpe": 60, "apriori": 60, "preliminari": 60, "collaps": [60, 61], "linearli": [60, 64], "guarante": 60, "lie": 60, "adjust": 60, "suggest": 60, "interv": 60, "unbias": 60, "narrow": 60, "mislead": 60, "anymor": 60, "thumb": 60, "accur": [60, 68], "01101": 60, "straight": 60, "c_p": 60, "fast": 60, "Will": 60, "_interv": 60, "qse": 60, "state_prep_circ": 60, "expansion_oper": 60, "return_matric": 60, "star": 60, "_j": 60, "o_i": 60, "matrix_h": 60, "matrix_": 60, "e_qs": 60, "e_min": 60, "e_vq": 60, "opt_circ": 60, "transform_integrals_to_new_basi": 60, "u_mat": 60, "h_hat_ij": 60, "h_hat_ijkl": 60, "2i_": 60, "cluster_op": 60, "ket_hf": 60, "hf": 60, "iT": 60, "uccsd": 60, "active_so": 60, "spatial": 60, "inactive_occupied_so": 60, "mp2": 60, "theta_a": 60, "epsilon_j": 60, "epsilon_a": 60, "epsilon_b": 60, "degeneraci": 60, "theta_list": 60, "n_qbit": 60, "prod_": 60, "c_q": 60, "c_r": 60, "run_fci": 60, "kickstart": 60, "densiti": 60, "groundstat": 60, "m\u00f6ller": 60, "ci": 60, "fci": 60, "expens": 60, "atom1": 60, "atom2": 60, "atomn": 60, "alpha": [60, 63, 64, 70], "neutral": 60, "nel": 60, "cregist": 61, "boolformula": 61, "ctrlbit": 61, "gate1": 61, "gate2": 61, "get_free_ancilla": 61, "destroi": 61, "usabl": 61, "variablenamenotavail": 61, "class_typ": 61, "qblist": 61, "cblist": 61, "include_lock": 61, "do_link": 61, "comparison_ep": 61, "box_routin": 61, "untouch": 61, "demand": 61, "happen": 61, "indentif": 61, "correspondig": 61, "systemat": 61, "repetit": [61, 68], "submatric": 61, "parent": [61, 64], "littl": 61, "mother": 61, "never": 61, "admiss": 61, "r_z": 61, "my_rz": 61, "matrix_gen": 61, "set_dag": 61, "paramg": 61, "abstract_g": 61, "member": 61, "notion": 61, "routop_l": 61, "max_wir": 61, "inbound": 61, "repeatedli": 61, "bl": 61, "unus": [61, 69], "reus": 61, "freed_ancilla": 61, "additin": 61, "tag": 61, "contruct": 61, "qbool_arrai": 61, "qclaus": 61, "cl": 61, "qbits_list": 61, "operand": 61, "implicitli": 61, "toward": 61, "and_formula": 61, "got": 61, "reverse_bit_ord": 61, "qarithexp": 61, "qcompexp": 61, "uniti": 61, "xore": 61, "slice": [61, 64], "composit": 61, "cbits_list": 61, "seraliz": 61, "builder": [61, 64], "utilitari": 61, "suppr_ctrl": 61, "ancillari": 61, "toffoli_fold": 61, "nb_qbit": 61, "scenario": 61, "lift": 61, "tild": [61, 62], "my_gat": 61, "generate_gate_set": 61, "add_const": [61, 62], "mult_const": [61, 62], "cuccaro_add": [61, 62], "agnost": 61, "modular_exp": [61, 62], "mult_const_mod": [61, 62], "add_const_mod": [61, 62], "add_mod": [61, 62], "qram": 61, "get_routin": [61, 63], "skeleton": 61, "abtract": 61, "cz": 61, "my_cnot_implement": 61, "overrid": [61, 65], "footprint": 61, "gate_signatur": 61, "clear_gate_set": 61, "default_g": 61, "link_gat": 61, "link_matric": 61, "set_gate_set": 61, "amplification_step": 61, "state_prep": 61, "household": 61, "nbit": [61, 64], "reg1": 61, "reg2": 61, "quantum_count": 61, "uniform_distribut": 61, "grover_diffus": 61, "green": 62, "rippl": 62, "indep": 62, "indepent": 62, "distinct": 62, "notat": 62, "5949": 62, "reg_siz": 62, "psi_": 62, "xk": 62, "reg_size_2": 62, "modulo": 62, "res_reg_s": 62, "quant": 62, "9511018": 62, "0410184": 62, "0910": 62, "2530v1": 62, "6n": 62, "2n": 62, "4n": 62, "7n": 62, "5n": 62, "crash": 62, "acc_siz": 62, "modulu": 62, "textrm": 62, "mod": 62, "shor": 62, "phase_reg": 62, "3720": 62, "8988": 62, "1472": 62, "128": 62, "384": 62, "gate_s": 62, "14853": 62, "reg_control_s": 62, "expon": 62, "accumul": 62, "euclid": 62, "coprim": 62, "kp": 63, "multiplexor": 63, "prakash": 63, "kp17": 63, "k_1": 63, "k_n": 63, "k_i": 63, "pad": 63, "log_2": 63, "understood": 63, "i_1": 63, "i_k": 63, "alpha_": 63, "adress": 63, "i_l": 63, "beta_": 63, "flatten": 63, "rout_0": 63, "rout_1": 63, "rout_2": 63, "kerinidi": 63, "proport": 63, "routine_state_prep": 63, "routine_1": 63, "6254129035886702": 63, "1510100574414843": 63, "0426573295491004": 63, "7948782933857026": 63, "2705054775734351": 63, "2912132242763422": 63, "3622699639307174": 63, "addresses_count": 63, "mutliplexor": 63, "iordani": 63, "anupam": 63, "8th": 63, "innov": 63, "theoret": [63, 64], "confer": 63, "itc": 63, "schloss": 63, "dagstuhl": 63, "leibniz": 63, "zentrum": 63, "fuer": 63, "informatik": 63, "avaibl": 64, "to_xxx": 64, "add_claus": 64, "myproblem": 64, "var1": 64, "var2": 64, "get_observ": 64, "125": 64, "w_": 64, "nbvar": 64, "boolexpr": 64, "and_claus": 64, "or_claus": 64, "xor_claus": 64, "neg_claus": 64, "subclaus": 64, "induct": 64, "wedg": 64, "vee": 64, "oplu": 64, "singleton": 64, "offset_q": 64, "e_q": 64, "get_best_paramet": 64, "child": 64, "aneal": 64, "durat": 64, "get_j_h_and_offset": 64, "sperat": 64, "to_circ_arg": 64, "get_qaoa_gate_set": 64, "my_plugin": 64, "synthes": 64, "regroup": 64, "qaoa_circuit": 64, "line_ob": 64, "add_term": 64, "ansatz_with_cnot": 64, "ansatz_with_rzz": 64, "121": 64, "67": 64, "insert_in": 64, "slic": 64, "elif": 64, "ansatz_default": 64, "ansatz_color": 64, "gray_synth": 64, "cnot_count": 64, "zzz": 64, "ansatz_gray_synth": 64, "grai": 64, "synth": 64, "ami": 64, "graysynth": 64, "onlt": 64, "schedulegener": 64, "schedule_gener": 64, "interpol": 64, "initialstatebuild": 64, "bit_flip": 64, "restrict_to": 64, "simpleinitialst": 64, "hamming_weight": 64, "tmax_psi_0": 64, "sigma_i": 64, "equi": 64, "argu": 64, "gap": 64, "entail": 64, "scalabl": 64, "inexact": 64, "70": 64, "independentann": 64, "mixing_factori": 64, "inject": 64, "inject_initial_st": 64, "prepend": 64, "start_ham": 64, "end_ham": 64, "true_psi_0": 64, "famou": 64, "instrins": 64, "optimis": 64, "max_cut": 64, "produce_j_h_and_offset": 64, "wikipedia": [64, 70], "256": 64, "n_monte_carlo_upd": 64, "n_trotter": 64, "replica": 64, "gamma_max": 64, "gamma_min": 64, "parse_result": 64, "graph_partit": 64, "graph_partitioning_problem": 64, "balanc": 64, "colour": [64, 69], "graph_colour": 64, "produce_q_and_offset": 64, "graph_colouring_problem": 64, "thatrepres": 64, "k_cliqu": 64, "k_clique_problem": 64, "bigger": 64, "vertex_cov": 64, "number_partit": 64, "array_of_numb": 64, "array_of_numbers_s": 64, "10000": [64, 68], "number_partitioning_problem": 64, "9558": 64, "numbers_arrai": 64, "binary_linear_integer_program": 64, "maximis": 64, "bilp_problem": 64, "handi": 65, "compliant": 65, "lnn_topologi": 65, "usus": 66, "4999999999999999": [66, 68], "keep_topologi": 66, "q1": 66, "q2": 66, "tradeoff": 67, "ve": 67, "job_2": 67, "job_3": 67, "41545698671839404": 67, "46415714854644896": 67, "8566285941857958": 67, "circuit_2": 67, "caught": 67, "150": 67, "trace": [67, 70], "optimization_trac": [67, 70], "902420723717892": 67, "8404603593680109": 67, "6235276351345553": 67, "5920480142921594": 67, "8743628138482857": 67, "3531142428669868": 67, "05397883721012416": 67, "19636434738123784": 67, "542763654926791": 67, "7475616461107437": 67, "2323955194799441": 67, "371141566734644": 67, "290920265665023": 67, "4158167469964824": 67, "8035128768686928": 67, "636723097210006": 67, "79873292168673": 67, "8544517719512346": 67, "8963174917799264": 67, "675076676247678": 67, "9918922293488097": 67, "0649700851374604": 67, "1272999067342058": 67, "1952583386930673": 67, "262602459962472": 67, "3284385488108477": 67, "375561924842793": 67, "450806358818685": 67, "5133301434233672": 67, "58108320388947": 67, "648119555637167": 67, "7130168163541075": 67, "738451077802936": 67, "8214223686241837": 67, "8827691150240846": 67, "9479413949222186": 67, "006700376298795": 67, "9866676687025633": 67, "064548588662945": 67, "069773365994838": 67, "017786838298858": 67, "115032715884348": 67, "15525114879121": 67, "191086937416754": 67, "224810902897105": 67, "258568125518597": 67, "292625703856057": 67, "326666725210453": 67, "358122824528164": 67, "392602429473208": 67, "426800058976746": 67, "460845174923216": 67, "494899724608711": 67, "52897752163865": 67, "563053858630635": 67, "597127902636666": 67, "631134297341923": 67, "665225015115329": 67, "699301562097441": 67, "733374591740279": 67, "7674506352607136": 67, "801526041890684": 67, "835585213603814": 67, "869664861494173": 67, "903740713456003": 67, "937815926552481": 67, "9718919820475005": 67, "005967961553395": 67, "040043634901245": 67, "074116807763784": 67, "108192830448678": 67, "142268935240005": 67, "176345057467374": 67, "210421157735728": 67, "244497220357107": 67, "278573250462478": 67, "312649253959332": 67, "346725200097362": 67, "3807960642808785": 67, "414873196039882": 67, "448949166663807": 67, "4830248928688": 67, "517100919987017": 67, "5511769308476735": 67, "585252930808747": 67, "619328906492113": 67, "653404917239884": 67, "687480905691951": 67, "721556905024231": 67, "755632900836995": 67, "789708775492182": 67, "823784803520065": 67, "857860795820931": 67, "891936787814933": 67, "9260127868443675": 67, "9600887846858255": 67, "994164783708639": 67, "028240782724863": 67, "062316781649668": 67, "0963927805671005": 67, "130468779495858": 67, "1645447784233784": 67, "1986207773506905": 67, "232696776278048": 67, "266772775205003": 67, "30084877413244": 67, "334924773059799": 67, "369000771987134": 67, "403076770914495": 67, "43715276984185": 67, "471228768769205": 67, "505304767696537": 67, "5393807666239": 67, "573456765551254": 67, "607532764478613": 67, "641608763405962": 67, "675684762333315": 67, "709760761260675": 67, "743836760187998": 67, "777912759115358": 67, "811988758042718": 67, "846064756970074": 67, "880140755897432": 67, "914216754824791": 67, "948292753752138": 67, "982368752679497": 67, "016444751606851": 67, "050520750534208": 67, "084596749461564": 67, "118672748388919": 67, "152748747316275": 67, "186824746243631": 67, "220900745170969": 67, "2549767440983235": 67, "2890527430256915": 67, "32312874195301": 67, "357204740880375": 67, "391280739807724": 67, "425356738735084": 67, "459432737662437": 67, "493508736589796": 67, "52758473551714": 67, "561660734444493": 67, "59573673337183": 67, "629812732299047": 67, "6638887312264465": 67, "697964730153753": 67, "73204072908112": 67, "766116728008475": 67, "800192726935832": 67, "834268725863188": 67, "868344724790539": 67, "choic": 67, "json": 67, "optimizer_arg": 67, "667052848064833": 67, "8404602549272421": 67, "891205129638182": 67, "9161461935455972": 67, "9643854418778723": 67, "2513088432210923": 67, "2875504145725818": 67, "4650426821961812": 67, "8313824364540509": 67, "3837917401209903": 67, "9456692295870168": 67, "1302909485144097": 67, "2971277357460247": 67, "4392709325265427": 67, "5721429533009044": 67, "709166671997003": 67, "8451713360443946": 67, "9815332693336805": 67, "117865745309601": 67, "2541766169047226": 67, "390466815351049": 67, "525430171920395": 67, "662033772067362": 67, "7967686373268017": 67, "9331460089985546": 67, "067426567577192": 67, "20224023961832": 67, "3358816135820515": 67, "453547690909944": 67, "572890535946217": 67, "67758927424258": 67, "594209175287071": 67, "755561942434519": 67, "420350100928379": 67, "8385250476045805": 67, "908394152249295": 67, "9627750794428245": 67, "030468410368249": 67, "096774196947786": 67, "159396996390033": 67, "177694111258063": 67, "269488333016937": 67, "313580330007681": 67, "385783291066885": 67, "455839140712817": 67, "5245078508839995": 67, "592206582706763": 67, "646830265218188": 67, "719090207567113": 67, "776441621219373": 67, "847840622919969": 67, "9121084816440375": 67, "981234252619032": 67, "049608163682732": 67, "11734746400096": 67, "185640803957343": 67, "2534764364804145": 67, "321670549830191": 67, "389728849624709": 67, "457889988576792": 67, "526001982695947": 67, "593426454537739": 67, "661812373498322": 67, "729884085064398": 67, "797968565126407": 67, "865810688683762": 67, "933424605958372": 67, "001222802113444": 67, "068297103879916": 67, "106573094106598": 67, "184757831888795": 67, "221657717534306": 67, "300133678342162": 67, "347613381686503": 67, "4235986816574435": 67, "4806245372549975": 67, "552857472029569": 67, "618459858991774": 67, "686529936230516": 67, "754787319077797": 67, "823338511524529": 67, "892031995529147": 67, "9600985957572625": 67, "028282603576669": 67, "096399189085373": 67, "163712225903645": 67, "231632923957735": 67, "298510218704202": 67, "36077344922894": 67, "429869562664644": 67, "499561252695711": 67, "566898344722716": 67, "635348345224486": 67, "70351737664555": 67, "771663688485194": 67, "839417019538647": 67, "907737564062497": 67, "97556064781752": 67, "0438567430733": 67, "111498201268567": 67, "179821764779955": 67, "247346812182109": 67, "315604081017355": 67, "382947369097193": 67, "450756167833083": 67, "518226215899386": 67, "584703513625179": 67, "65224309291779": 67, "719391698708097": 67, "783066269054318": 67, "839426073476735": 67, "90304267655931": 67, "962935399216738": 67, "983439707154783": 67, "078367949789378": 67, "045274947861257": 67, "077393880117972": 67, "092160783812758": 67, "107414003597416": 67, "077166290744113": 67, "128730455322579": 67, "146105704021336": 67, "162404255780451": 67, "172073086235457": 67, "190263899934841": 67, "207245145834118": 67, "22407798833977": 67, "24112941117687": 67, "258172758300693": 67, "275208092182035": 67, "292220169097186": 67, "309271773934409": 67, "326298784269992": 67, "34333705883048": 67, "360370996212726": 67, "37741002229695": 67, "394448010451795": 67, "411485740522002": 67, "428523763328311": 67, "445561762473943": 67, "462599692462472": 67, "479634146698311": 67, "496672521337935": 67, "513710794781506": 67, "530748862848785": 67, "547786857151827": 67, "564824855413306": 67, "581862849705356": 67, "598900849571987": 67, "615938849459177": 67, "63297684910568": 67, "650014848598257": 67, "resili": 67, "autom": 67, "henceforth": 68, "primarili": 68, "commonli": 68, "speak": 68, "decid": 68, "subresult": 68, "emphas": 68, "enhanc": 68, "capac": 68, "uncertainti": 68, "exemplifi": 68, "examin": 68, "conduct": [68, 69], "stress": 68, "05024183937956914": 68, "ideal": 68, "took": 68, "goal": 68, "devoid": 68, "198": 68, "201": 68, "_submit_batch": 68, "240": 68, "246": 68, "278": 68, "_calculate_expectation_valu": 68, "platform": 69, "circuitinlin": 69, "display": 69, "costfunctionplugin": 69, "simulated_ann": 69, "favorit": 70, "9999999940066018": 70, "7602406500798307": 70, "13589474538496232": 70, "9070891386535485": 70, "8443099610999516": 70, "9978543192453979": 70, "9506350827317043": 70, "9982315983438091": 70, "9925696844688693": 70, "9996015657494116": 70, "9999954391895707": 70, "9994128340535569": 70, "9998261832331217": 70, "9999885169680025": 70, "9999760122184521": 70, "9999994306720367": 70, "9999996074606219": 70, "9999982653439297": 70, "9999999208913124": 70, "9999999959034477": 70, "9999998324970094": 70, "9999999440025492": 70, "9999999999550248": 70, "141483169359789": 70, "binding_arg": 70, "initil": 70, "set_opt": 70, "my_job": 70, "simultan": 70, "spsaminimizeplugin": 70, "spsa": 70, "602": 70, "stop_condit": 70, "evalut": 70, "a_calibr": 70, "calibr": 70, "n_calibr": 70, "en": 70, "wiki": 70, "simultaneous_perturbation_stochastic_approxim": 70, "swarm": 70, "psominimizeplugin": 70, "pso": 70, "choose_inertia_funct": 70, "inertia": 70, "linearly_decreas": 70, "chaotic_random": 70, "name_method_us": 70, "clpso": 70, "fdr_pso": 70, "lip": 70, "hpso_tvac": 70, "max_it": 70, "swarm_numb": 70, "size_initial_vector_spac": 70, "hypercub": 70, "inertia_kwarg": 70, "inertia_funct": 70, "inertia_weight": 70, "vertex_cover_appl": 71, "vertex_cover_gener": 71}, "objects": {"": [[69, 0, 0, "-", "qat"]], "qat": [[34, 0, 0, "-", "clinalg"], [53, 0, 0, "-", "core"], [54, 0, 0, "-", "devices"], [55, 0, 0, "-", "fermion"], [61, 0, 0, "-", "lang"], [35, 0, 0, "-", "pylinalg"], [36, 0, 0, "-", "simulated_annealing"]], "qat.clinalg": [[34, 1, 1, "", "CLinalg"]], "qat.clinalg.CLinalg": [[34, 2, 1, "", "submit"]], "qat.clinalg.wrapper": [[34, 1, 1, "", "CLinalgStateVectorCPUDouble"]], "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble": [[34, 2, 1, "", "apply_1qbit_ctrl_gate"], [34, 2, 1, "", "apply_1qbit_gate"], [34, 2, 1, "", "apply_2qbit_ctrl_gate"], [34, 2, 1, "", "apply_2qbit_gate"], [34, 2, 1, "", "apply_CCNOT"], [34, 2, 1, "", "apply_CNOT"], [34, 2, 1, "", "apply_CSIGN"], [34, 2, 1, "", "apply_H"], [34, 2, 1, "", "apply_ISWAP"], [34, 2, 1, "", "apply_PH"], [34, 2, 1, "", "apply_RX"], [34, 2, 1, "", "apply_RY"], [34, 2, 1, "", "apply_RZ"], [34, 2, 1, "", "apply_S"], [34, 2, 1, "", "apply_SQRTSWAP"], [34, 2, 1, "", "apply_SWAP"], [34, 2, 1, "", "apply_T"], [34, 2, 1, "", "apply_X"], [34, 2, 1, "", "apply_Y"], [34, 2, 1, "", "apply_Z"], [34, 2, 1, "", "apply_nqbit_ctrl_gate"], [34, 2, 1, "", "apply_nqbit_gate"], [34, 3, 1, "", "array"], [34, 3, 1, "", "array_readonly"], [34, 2, 1, "", "expectation_value"], [34, 2, 1, "", "get_distribution"], [34, 2, 1, "", "get_mapped_distribution"], [34, 2, 1, "", "get_mapped_statevector"], [34, 2, 1, "", "get_permuted_statevector"], [34, 2, 1, "", "print"], [34, 2, 1, "", "project"], [34, 2, 1, "", "reset"], [34, 2, 1, "", "resize"], [34, 2, 1, "", "sample"], [34, 2, 1, "", "sample_subset"], [34, 2, 1, "", "set_num_threads"], [34, 2, 1, "", "simulate_circuit"], [34, 2, 1, "", "state_probability"]], "qat.comm.datamodel.ttypes": [[19, 1, 1, "", "GateDefinition"], [19, 1, 1, "", "Op"]], "qat.comm.exceptions.ttypes": [[19, 1, 1, "", "ErrorType"], [19, 1, 1, "", "PluginException"], [19, 1, 1, "", "QPUException"]], "qat.comm.shared.ttypes": [[53, 1, 1, "", "IntermediateMeasurement"], [53, 1, 1, "", "ProcessingType"]], "qat.core": [[53, 1, 1, "", "Batch"], [53, 1, 1, "", "BatchResult"], [53, 1, 1, "", "Circuit"], [53, 1, 1, "", "HardwareSpecs"], [53, 1, 1, "", "Job"], [53, 1, 1, "", "Observable"], [53, 1, 1, "", "Result"], [53, 1, 1, "", "Schedule"], [53, 1, 1, "", "Term"], [53, 1, 1, "", "Topology"], [53, 1, 1, "", "TopologyType"], [53, 1, 1, "", "Variable"], [14, 0, 0, "-", "console"], [65, 0, 0, "-", "quameleon"]], "qat.core.Batch": [[53, 2, 1, "", "dump"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "load"], [53, 2, 1, "", "to_thrift"]], "qat.core.BatchResult": [[53, 2, 1, "", "append"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "extend"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "load"]], "qat.core.Circuit": [[53, 2, 1, "", "bind_variable"], [53, 2, 1, "", "bind_variables"], [53, 2, 1, "", "count"], [53, 2, 1, "", "dag"], [53, 2, 1, "", "display"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "empty"], [53, 2, 1, "", "fill_matrices"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_thrift"], [53, 3, 1, "", "gate_set"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "insert_gate"], [53, 2, 1, "", "iterate_simple"], [53, 2, 1, "", "load"], [53, 2, 1, "", "remove_locks"], [53, 2, 1, "", "shift_qbits"], [53, 2, 1, "", "statistics"], [53, 2, 1, "", "to_job"]], "qat.core.HardwareSpecs": [[53, 2, 1, "", "as_graph"], [53, 2, 1, "", "as_quameleon"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "load"], [53, 3, 1, "", "nbqbits"]], "qat.core.Job": [[53, 2, 1, "", "differentiate"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "gradient"], [53, 2, 1, "", "load"], [53, 3, 1, "", "parameter_map"], [53, 3, 1, "", "psi_0"], [53, 2, 1, "", "shift_qbits"], [53, 2, 1, "", "to_thrift"]], "qat.core.Observable": [[53, 4, 1, "", "constant_coeff"], [53, 4, 1, "", "ising"], [53, 4, 1, "", "nbqbits"], [53, 4, 1, "", "terms"]], "qat.core.Result": [[53, 2, 1, "", "add_sample"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "load"], [53, 3, 1, "", "parameter_map"], [53, 3, 1, "", "value"], [53, 3, 1, "", "values"], [53, 2, 1, "", "wrap_samples"]], "qat.core.Schedule": [[53, 2, 1, "", "dump"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "load"], [53, 2, 1, "", "to_job"]], "qat.core.Term": [[53, 4, 1, "", "coeff"], [53, 4, 1, "", "op"], [53, 4, 1, "", "qbits"]], "qat.core.Topology": [[53, 2, 1, "", "add_edge"], [53, 2, 1, "", "dump"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_nx"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "load"], [53, 3, 1, "", "nbqbits"], [53, 2, 1, "", "set_nbqbits"], [53, 2, 1, "", "to_nx"]], "qat.core.Variable": [[53, 2, 1, "", "differentiate"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "to_thrift"]], "qat.core.application": [[53, 1, 1, "", "Application"], [53, 1, 1, "", "RemoteApplication"]], "qat.core.application.Application": [[53, 2, 1, "", "execute"], [53, 2, 1, "", "serve"]], "qat.core.circuit_builder.builder": [[61, 1, 1, "", "VariableNameNotAvailable"]], "qat.core.circuit_builder.matrix_util": [[53, 5, 1, "", "default_gate_set"], [53, 5, 1, "", "get_param_generator"], [53, 5, 1, "", "get_predef_generator"]], "qat.core.console": [[14, 1, 1, "", "Display"], [53, 5, 1, "", "display"]], "qat.core.console.Display": [[14, 2, 1, "", "compile"], [14, 2, 1, "", "do_post_processing"], [14, 2, 1, "", "post_process"]], "qat.core.formula_eval": [[53, 5, 1, "", "evaluate"]], "qat.core.gate_set": [[53, 1, 1, "", "GateSet"], [53, 1, 1, "", "GateSignature"], [53, 1, 1, "", "GateSyntaxRedefinition"]], "qat.core.gate_set.GateSet": [[53, 2, 1, "", "add_signature"], [53, 2, 1, "", "union"]], "qat.core.gate_set.GateSignature": [[53, 2, 1, "", "get_circuit"], [53, 2, 1, "", "get_matrix"], [53, 2, 1, "", "set_circuit_generator"], [53, 2, 1, "", "set_matrix_generator"]], "qat.core.generator": [[53, 1, 1, "", "AbstractGenerator"], [53, 1, 1, "", "RemoteBatchGenerator"]], "qat.core.generator.AbstractGenerator": [[53, 2, 1, "", "generate"], [53, 2, 1, "", "serve"]], "qat.core.plugins": [[53, 1, 1, "", "RemotePlugin"]], "qat.core.printer": [[53, 5, 1, "", "plot_in_notebook"]], "qat.core.qpu": [[53, 1, 1, "", "QPUHandler"], [53, 1, 1, "", "RemoteQPU"]], "qat.core.qpu.QPUHandler": [[53, 2, 1, "", "serve"], [53, 2, 1, "", "submit"], [53, 2, 1, "", "submit_job"]], "qat.core.quameleon": [[65, 1, 1, "", "QuameleonPlugin"]], "qat.core.spins": [[36, 5, 1, "", "integer_to_spins"], [36, 5, 1, "", "spins_to_integer"]], "qat.core.variables": [[53, 1, 1, "", "ArithExpression"], [53, 1, 1, "", "Symbol"]], "qat.core.variables.ArithExpression": [[53, 2, 1, "", "differentiate"], [53, 2, 1, "", "from_string"], [53, 2, 1, "", "get_variables"], [53, 2, 1, "", "pretty_print"], [53, 2, 1, "", "to_thrift"]], "qat.core.wrappers": [[53, 0, 0, "-", "observable"]], "qat.core.wrappers.result": [[53, 1, 1, "", "Sample"], [53, 1, 1, "", "State"]], "qat.core.wrappers.result.Sample": [[53, 3, 1, "", "amplitude"], [53, 2, 1, "", "from_bytes"], [53, 2, 1, "", "from_thrift"], [53, 2, 1, "", "set_qreg"], [53, 3, 1, "", "state"]], "qat.core.wrappers.result.State": [[53, 3, 1, "", "bitstring"], [53, 3, 1, "", "int"], [53, 3, 1, "", "lsb_int"], [53, 3, 1, "", "value"]], "qat.devices": [[54, 1, 1, "", "AllToAll"], [54, 1, 1, "", "GridDevice"], [54, 1, 1, "", "LineDevice"], [54, 1, 1, "", "SquareGridDevice"]], "qat.fermion.chemistry.pyscf_tools": [[60, 5, 1, "", "perform_pyscf_computation"]], "qat.fermion.chemistry.qse": [[60, 5, 1, "", "apply_quantum_subspace_expansion"]], "qat.fermion.chemistry.ucc": [[60, 5, 1, "", "compute_active_space_integrals"], [60, 5, 1, "", "construct_ucc_ansatz"], [60, 5, 1, "", "convert_to_h_integrals"], [60, 5, 1, "", "get_cluster_ops"], [60, 5, 1, "", "get_hf_ket"], [60, 5, 1, "", "guess_init_params"], [60, 5, 1, "", "select_active_orbitals"], [60, 5, 1, "", "transform_integrals_to_new_basis"]], "qat.fermion.chemistry.wrapper": [[60, 1, 1, "", "MolecularHamiltonian"], [60, 1, 1, "", "MoleculeInfo"]], "qat.fermion.chemistry.wrapper.MolecularHamiltonian": [[60, 4, 1, "", "constant_coeff"], [60, 2, 1, "", "get_electronic_hamiltonian"], [60, 4, 1, "", "nqbits"], [60, 4, 1, "", "one_body_integrals"], [60, 2, 1, "", "select_active_space"], [60, 2, 1, "", "transform_basis"], [60, 4, 1, "", "two_body_integrals"]], "qat.fermion.chemistry.wrapper.MoleculeInfo": [[60, 4, 1, "", "constant_coeff"], [60, 4, 1, "", "hamiltonian"], [60, 4, 1, "", "n_electrons"], [60, 4, 1, "", "noons"], [60, 4, 1, "", "nqbits"], [60, 4, 1, "", "one_body_integrals"], [60, 4, 1, "", "orbital_energies"], [60, 2, 1, "", "restrict_active_space"], [60, 4, 1, "", "two_body_integrals"]], "qat.fermion.circuits": [[60, 5, 1, "", "make_compressed_ldca_circ"], [60, 5, 1, "", "make_general_hwe_circ"], [60, 5, 1, "", "make_ldca_circ"], [60, 5, 1, "", "make_mr_circ"], [60, 5, 1, "", "make_mrep_circ"], [60, 5, 1, "", "make_shallow_circ"]], "qat.fermion.hamiltonians": [[60, 1, 1, "", "ElectronicStructureHamiltonian"], [60, 1, 1, "", "FermionHamiltonian"], [60, 1, 1, "", "SpinHamiltonian"], [60, 5, 1, "", "make_anderson_model"], [60, 5, 1, "", "make_embedded_model"], [60, 5, 1, "", "make_hubbard_model"]], "qat.fermion.hamiltonians.ElectronicStructureHamiltonian": [[60, 4, 1, "", "constant_coeff"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "dag"], [60, 2, 1, "", "get_matrix"], [60, 4, 1, "", "hpq"], [60, 4, 1, "", "hpqrs"], [60, 2, 1, "", "to_fermion"], [60, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.FermionHamiltonian": [[60, 4, 1, "", "constant_coeff"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "dag"], [60, 2, 1, "", "get_matrix"], [60, 4, 1, "", "matrix"], [60, 4, 1, "", "nbqbits"], [60, 4, 1, "", "normal_order"], [60, 4, 1, "", "terms"], [60, 2, 1, "", "to_electronic"], [60, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.SpinHamiltonian": [[60, 4, 1, "", "constant_coeff"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "dag"], [60, 2, 1, "", "get_matrix"], [60, 4, 1, "", "matrix"], [60, 4, 1, "", "nbqbits"], [60, 4, 1, "", "terms"]], "qat.fermion.phase_estimation": [[60, 5, 1, "", "perform_phase_estimation"]], "qat.fermion.transforms": [[60, 5, 1, "", "transform_to_bk_basis"], [60, 5, 1, "", "transform_to_jw_basis"], [60, 5, 1, "", "transform_to_parity_basis"]], "qat.fermion.trotterisation": [[60, 5, 1, "", "make_trotterisation_routine"]], "qat.interop.cirq": [[23, 5, 1, "", "cirq_to_qlm"], [23, 0, 0, "-", "converters"], [23, 5, 1, "", "qlm_to_cirq"]], "qat.interop.openqasm": [[31, 1, 1, "", "OqasmParser"]], "qat.interop.openqasm.OqasmParser": [[31, 2, 1, "", "compile"]], "qat.interop.projectq": [[32, 1, 1, "", "AqasmEngine"], [32, 1, 1, "", "AqasmPrinter"], [32, 0, 0, "-", "converters"]], "qat.interop.projectq.AqasmEngine": [[32, 2, 1, "", "projectq_to_qlm"]], "qat.interop.pyquil": [[33, 1, 1, "", "PyquilQPU"], [33, 0, 0, "-", "converters"], [33, 0, 0, "-", "providers"], [33, 5, 1, "", "pyquil_to_qlm"], [33, 5, 1, "", "qlm_to_pyquil"]], "qat.interop.pyquil.PyquilQPU": [[33, 2, 1, "", "set_qpu"], [33, 2, 1, "", "submit"], [33, 2, 1, "", "submit_job"]], "qat.interop.qiskit": [[37, 1, 1, "", "AsyncBackendToQPU"], [37, 1, 1, "", "BackendToQPU"], [37, 1, 1, "", "QPUToBackend"], [37, 1, 1, "", "QiskitJob"], [37, 0, 0, "-", "converters"], [37, 0, 0, "-", "providers"], [37, 5, 1, "", "qiskit_to_qlm"], [37, 5, 1, "", "qlm_to_qiskit"], [37, 0, 0, "-", "runtime"]], "qat.interop.qiskit.AsyncBackendToQPU": [[37, 2, 1, "", "retrieve_job"], [37, 2, 1, "", "submit"]], "qat.interop.qiskit.BackendToQPU": [[37, 2, 1, "", "submit"]], "qat.interop.qiskit.QPUToBackend": [[37, 2, 1, "", "set_qpu"]], "qat.interop.qiskit.QiskitJob": [[37, 2, 1, "", "cancel"], [37, 2, 1, "", "dump"], [37, 2, 1, "", "job_id"], [37, 2, 1, "", "result"], [37, 2, 1, "", "status"]], "qat.interop.qiskit.runtime": [[37, 1, 1, "", "QiskitRuntimeQPU"]], "qat.interop.qiskit.runtime.QiskitRuntimeQPU": [[37, 2, 1, "", "submit"]], "qat.lang": [[62, 0, 0, "-", "AQASM"]], "qat.lang.AQASM": [[61, 1, 1, "", "Program"], [62, 0, 0, "-", "arithmetic"], [62, 0, 0, "-", "classarith"], [61, 0, 0, "-", "misc"], [62, 0, 0, "-", "qftarith"], [61, 0, 0, "-", "util"]], "qat.lang.AQASM.Program": [[61, 2, 1, "", "apply"], [61, 2, 1, "", "calloc"], [61, 2, 1, "", "cbreak"], [61, 2, 1, "", "cc_apply"], [61, 2, 1, "", "comment"], [61, 2, 1, "", "conjugate"], [61, 2, 1, "", "display"], [61, 2, 1, "", "export"], [61, 2, 1, "", "free_ancillae"], [61, 2, 1, "", "get_free_ancillae"], [61, 2, 1, "", "logic"], [61, 2, 1, "", "measure"], [61, 2, 1, "", "new_var"], [61, 2, 1, "", "qalloc"], [61, 2, 1, "", "reset"], [61, 2, 1, "", "to_circ"]], "qat.lang.AQASM.arithmetic": [[62, 5, 1, "", "add_const_mod"], [62, 5, 1, "", "add_mod"], [62, 5, 1, "", "modular_exp"], [62, 5, 1, "", "mult_const"], [62, 5, 1, "", "mult_const_mod"]], "qat.lang.AQASM.bits": [[61, 1, 1, "", "BoolFormula"], [61, 1, 1, "", "CRegister"], [61, 1, 1, "", "Cbit"], [61, 1, 1, "", "QRegister"], [61, 1, 1, "", "Qbit"]], "qat.lang.AQASM.bits.BoolFormula": [[61, 2, 1, "", "cbits_list"], [61, 2, 1, "", "to_thrift"]], "qat.lang.AQASM.classarith": [[62, 5, 1, "", "add"], [62, 5, 1, "", "add_const"], [62, 5, 1, "", "cuccaro_add"]], "qat.lang.AQASM.gates": [[61, 1, 1, "", "AbstractGate"], [61, 1, 1, "", "Gate"], [61, 1, 1, "", "ParamGate"]], "qat.lang.AQASM.gates.AbstractGate": [[61, 2, 1, "", "set_dag"]], "qat.lang.AQASM.gates.Gate": [[61, 2, 1, "", "conj"], [61, 2, 1, "", "ctrl"], [61, 2, 1, "", "dag"], [61, 2, 1, "", "trans"]], "qat.lang.AQASM.gates.ParamGate": [[61, 2, 1, "", "dag"], [61, 2, 1, "", "display"]], "qat.lang.AQASM.misc": [[61, 1, 1, "", "build_gate"], [61, 5, 1, "", "generate_gate_set"]], "qat.lang.AQASM.qbool": [[61, 1, 1, "", "QBool"], [61, 1, 1, "", "QBoolArray"], [61, 1, 1, "", "QClause"]], "qat.lang.AQASM.qbool.QBool": [[61, 2, 1, "", "cast"], [61, 2, 1, "", "cast_to"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "phase"], [61, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QBoolArray": [[61, 2, 1, "", "cast"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QClause": [[61, 2, 1, "", "evaluate"], [61, 2, 1, "", "phase"], [61, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qftarith": [[62, 5, 1, "", "QFT"], [62, 5, 1, "", "add"], [62, 5, 1, "", "add_const"], [62, 5, 1, "", "mult"], [62, 5, 1, "", "mult_const"]], "qat.lang.AQASM.qint": [[61, 1, 1, "", "QArithExp"], [61, 1, 1, "", "QCompExp"], [61, 1, 1, "", "QInt"]], "qat.lang.AQASM.qint.QArithExp": [[61, 2, 1, "", "evaluate"]], "qat.lang.AQASM.qint.QCompExp": [[61, 2, 1, "", "evaluate"], [61, 2, 1, "", "phase"], [61, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qint.QInt": [[61, 2, 1, "", "cast"], [61, 2, 1, "", "evaluate"], [61, 2, 1, "", "qbits_list"], [61, 2, 1, "", "set_value"]], "qat.lang.AQASM.routines": [[61, 1, 1, "", "QRoutine"]], "qat.lang.AQASM.routines.QRoutine": [[61, 2, 1, "", "apply"], [61, 2, 1, "", "compute"], [61, 2, 1, "", "free_ancillae"], [61, 2, 1, "", "get_free_ancillae"], [61, 2, 1, "", "new_wires"], [61, 2, 1, "", "set_ancillae"], [61, 2, 1, "", "uncompute"]], "qat.lang.AQASM.util": [[61, 5, 1, "", "suppr_ctrl"], [61, 5, 1, "", "toffoli_fold"]], "qat.lang.algorithms.amplification": [[61, 5, 1, "", "grover_diffusion"], [61, 5, 1, "", "householder"], [61, 5, 1, "", "uniform_distribution"]], "qat.lang.algorithms": [[61, 5, 1, "", "amplification_step"], [61, 5, 1, "", "phase_estimation"], [61, 5, 1, "", "quantum_counting"]], "qat.lang.linking.linker": [[61, 1, 1, "", "Linker"]], "qat.lang.linking.linker.Linker": [[61, 2, 1, "", "add_signature"], [61, 2, 1, "", "clear_gate_set"], [61, 2, 1, "", "compile"], [61, 2, 1, "", "link"], [61, 2, 1, "", "link_gates"], [61, 2, 1, "", "link_matrices"], [61, 2, 1, "", "set_gate_set"]], "qat.lang.linking": [[5, 0, 0, "-", "plugin"]], "qat.lang.linking.plugin": [[5, 1, 1, "", "CircuitInliner"]], "qat.lang.linking.plugin.CircuitInliner": [[5, 2, 1, "", "addargs"], [5, 2, 1, "", "compile"], [5, 2, 1, "", "do_post_processing"], [5, 2, 1, "", "post_process"]], "qat.lang.models": [[63, 1, 1, "", "KPTree"]], "qat.lang.models.KPTree": [[63, 2, 1, "", "get_routine"]], "qat.opt": [[64, 1, 1, "", "CombinatorialProblem"], [64, 1, 1, "", "Ising"], [64, 1, 1, "", "MixingFactory"], [64, 1, 1, "", "QUBO"], [0, 0, 0, "-", "generators"]], "qat.opt.CombinatorialProblem": [[64, 2, 1, "", "add_clause"], [64, 2, 1, "", "get_observable"], [64, 2, 1, "", "new_var"], [64, 2, 1, "", "new_vars"], [64, 2, 1, "", "to_ising"], [64, 2, 1, "", "to_qubo"]], "qat.opt.Ising": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "get_j_h_and_offset"], [64, 2, 1, "", "get_observable"], [64, 2, 1, "", "to_combinatorial_problem"], [64, 2, 1, "", "to_job"], [64, 2, 1, "", "to_qubo"]], "qat.opt.MixingFactory": [[64, 2, 1, "", "bit_flip"], [64, 2, 1, "", "bit_move"]], "qat.opt.QUBO": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "get_observable"], [64, 2, 1, "", "get_q_and_offset"], [64, 2, 1, "", "to_combinatorial_problem"], [64, 2, 1, "", "to_ising"], [64, 2, 1, "", "to_job"]], "qat.opt.binary_linear_integer_programming": [[64, 1, 1, "", "BILP"], [64, 5, 1, "", "produce_q_and_offset"]], "qat.opt.binary_linear_integer_programming.BILP": [[64, 2, 1, "", "get_best_parameters"]], "qat.opt.boolexpr": [[64, 1, 1, "", "Clause"], [64, 1, 1, "", "Var"]], "qat.opt.boolexpr.Clause": [[64, 2, 1, "", "get_observable"]], "qat.opt.boolexpr.Var": [[64, 2, 1, "", "evaluate"], [64, 2, 1, "", "get_observable"], [64, 2, 1, "", "get_variables"], [64, 4, 1, "", "index"]], "qat.opt.circuit_generator": [[64, 1, 1, "", "CircuitGenerator"]], "qat.opt.circuit_generator.CircuitGenerator": [[64, 2, 1, "", "qaoa_ansatz"]], "qat.opt.generators": [[16, 1, 1, "", "GraphColouringGenerator"], [17, 1, 1, "", "GraphPartitioningGenerator"], [20, 1, 1, "", "KCliqueGenerator"], [22, 1, 1, "", "MaxCutGenerator"], [71, 1, 1, "", "VertexCoverGenerator"]], "qat.opt.generators.GraphColouringGenerator": [[16, 2, 1, "", "generate"]], "qat.opt.generators.GraphPartitioningGenerator": [[17, 2, 1, "", "generate"]], "qat.opt.generators.KCliqueGenerator": [[20, 2, 1, "", "generate"]], "qat.opt.generators.MaxCutGenerator": [[22, 2, 1, "", "generate"]], "qat.opt.generators.VertexCoverGenerator": [[71, 2, 1, "", "generate"]], "qat.opt.graph_colouring": [[64, 1, 1, "", "GraphColouring"], [64, 5, 1, "", "produce_q_and_offset"]], "qat.opt.graph_colouring.GraphColouring": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "parse_result"]], "qat.opt.graph_partitioning": [[64, 1, 1, "", "GraphPartitioning"], [64, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.graph_partitioning.GraphPartitioning": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "parse_result"]], "qat.opt.k_clique": [[64, 1, 1, "", "KClique"], [64, 5, 1, "", "produce_q_and_offset"]], "qat.opt.k_clique.KClique": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "parse_result"]], "qat.opt.max_cut": [[64, 1, 1, "", "MaxCut"], [64, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.max_cut.MaxCut": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "parse_result"]], "qat.opt.mixing_factory": [[64, 1, 1, "", "IndependentAnnealing"], [64, 1, 1, "", "InitialStateBuilder"], [64, 1, 1, "", "SimpleInitialState"]], "qat.opt.mixing_factory.IndependentAnnealing": [[64, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.InitialStateBuilder": [[64, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.SimpleInitialState": [[64, 2, 1, "", "inject_initial_state"]], "qat.opt.number_partitioning": [[64, 1, 1, "", "NumberPartitioning"], [64, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.number_partitioning.NumberPartitioning": [[64, 2, 1, "", "get_best_parameters"]], "qat.opt.results": [[6, 1, 1, "", "GraphPartitioningResult"], [6, 1, 1, "", "KCliqueResult"], [6, 1, 1, "", "VertexCoverResult"]], "qat.opt.results.GraphPartitioningResult": [[6, 2, 1, "", "display"]], "qat.opt.results.KCliqueResult": [[6, 3, 1, "", "clique"]], "qat.opt.results.VertexCoverResult": [[6, 3, 1, "", "cover"]], "qat.opt.schedule_generator": [[64, 1, 1, "", "ScheduleGenerator"]], "qat.opt.schedule_generator.ScheduleGenerator": [[64, 2, 1, "", "annealing_job"]], "qat.opt.vertex_cover": [[64, 1, 1, "", "VertexCover"], [64, 5, 1, "", "produce_q_and_offset"]], "qat.opt.vertex_cover.VertexCover": [[64, 2, 1, "", "get_best_parameters"], [64, 2, 1, "", "parse_result"]], "qat.plugins": [[53, 1, 1, "", "AbstractPlugin"], [47, 1, 1, "", "AdaptVQEPlugin"], [13, 1, 1, "", "CostFunctionPlugin"], [48, 1, 1, "", "GradientDescentOptimizer"], [48, 0, 0, "-", "GradientDescentOptimizer"], [53, 1, 1, "", "Junction"], [49, 1, 1, "", "MultipleLaunchesAnalyzer"], [49, 0, 0, "-", "MultipleLaunchesAnalyzer"], [46, 1, 1, "", "ObservableSplitter"], [53, 1, 1, "", "Optimizer"], [70, 1, 1, "", "PSOMinimizePlugin"], [66, 1, 1, "", "Remap"], [70, 1, 1, "", "SPSAMinimizePlugin"], [70, 1, 1, "", "ScipyMinimizePlugin"], [70, 1, 1, "", "SeqOptim"], [50, 0, 0, "-", "SeqOptim"], [51, 1, 1, "", "ZeroNoiseExtrapolator"], [51, 0, 0, "-", "ZeroNoiseExtrapolator"], [46, 0, 0, "-", "observable_splitter"]], "qat.plugins.AbstractPlugin": [[53, 2, 1, "", "compile"], [53, 2, 1, "", "do_post_processing"], [53, 2, 1, "", "serve"], [53, 2, 1, "", "wrapper_post_process"]], "qat.plugins.Junction": [[53, 2, 1, "", "execute"], [53, 2, 1, "", "run"]], "qat.plugins.ObservableSplitter": [[46, 2, 1, "", "addargs"], [46, 2, 1, "", "compile"], [46, 2, 1, "", "do_post_processing"], [46, 2, 1, "", "get_fresh_key"], [46, 2, 1, "", "post_process"]], "qat.plugins.Optimizer": [[53, 2, 1, "", "evaluate"], [53, 2, 1, "", "optimize"]], "qat.plugins.ScipyMinimizePlugin": [[70, 2, 1, "", "set_options"]], "qat.pylinalg": [[35, 1, 1, "", "PyLinalg"], [35, 0, 0, "-", "simulator"]], "qat.pylinalg.PyLinalg": [[35, 2, 1, "", "serve"], [35, 2, 1, "", "submit"], [35, 2, 1, "", "submit_job"]], "qat.pylinalg.simulator": [[35, 5, 1, "", "mat2nparray"], [35, 5, 1, "", "measure"], [35, 5, 1, "", "project"], [35, 5, 1, "", "raise_break"], [35, 5, 1, "", "reset"], [35, 5, 1, "", "simulate"]], "qat.simulated_annealing": [[36, 1, 1, "", "SimulatedAnnealing"]], "qat.simulated_annealing.SimulatedAnnealing": [[36, 2, 1, "", "sa"], [36, 2, 1, "", "submit_job"]], "qat.simulated_annealing.service": [[36, 5, 1, "", "extract_j_and_h_from_obs"]], "qat.vsolve.ansatz": [[64, 1, 1, "", "AnsatzFactory"]], "qat.vsolve.ansatz.AnsatzFactory": [[64, 2, 1, "", "qaoa_circuit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 1, 3, 18, 52, 56], "combinatori": [0, 6, 7, 45, 64, 69], "optim": [0, 6, 7, 9, 13, 45, 48, 49, 50, 64, 69], "np": [0, 64], "hard": [0, 64], "problem": [0, 7, 38, 39, 45, 64], "unconstrain": [0, 64], "graph": [0, 1, 16, 17, 64], "max": [0, 22], "cut": [0, 22], "partit": [0, 17], "constrain": [0, 64], "colour": [0, 16], "k": [0, 6], "cliqu": [0, 6], "vertex": [0, 6, 71], "cover": [0, 6, 71], "other": [0, 52, 61, 64, 69], "number": [0, 68], "binari": 0, "integ": [0, 1, 61], "linear": [0, 34, 35], "program": [0, 1, 45, 61, 69], "simul": [0, 10, 11, 12, 34, 35, 36, 38, 42, 45, 55, 60, 69], "quantum": [0, 1, 4, 8, 9, 11, 19, 23, 31, 32, 33, 34, 35, 37, 45, 52, 55, 56, 60, 61, 68, 69], "anneal": [0, 8, 10, 11, 16, 17, 20, 22, 36, 71], "benchmark": 0, "perform": 0, "interfac": [0, 34, 53], "dwave": 0, "us": [1, 21, 37, 57], "pyaqasm": 1, "abstractg": 1, "circuit": [1, 5, 19, 23, 31, 32, 33, 37, 45, 50, 52, 53, 56, 60, 61, 63, 68], "matrix": [1, 26], "implement": 1, "definit": 1, "subcircuit": 1, "ariti": 1, "gener": [1, 6, 16, 17, 20, 22, 38, 42, 52, 54, 60, 61, 64, 69, 71], "lift": 1, "python": [1, 35, 69], "function": [1, 35, 60], "gate": [1, 2, 4, 19, 52, 53, 61], "link": [1, 2], "extract": 1, "comput": [1, 3, 38, 42, 45], "uncomput": 1, "scope": 1, "autom": 1, "ancilla": 1, "manag": [1, 61], "oracl": 1, "type": [1, 61], "boolean": [1, 61], "condit": 1, "alloc": [1, 52], "logic": 1, "express": [1, 21, 53, 61], "evalu": 1, "statement": 1, "build": [1, 3, 21, 47, 53], "phase": [1, 56, 60], "set": [1, 53, 61], "classic": [1, 52, 61], "valu": 1, "arithmet": [1, 62], "exampl": [1, 68], "grover": 1, "color": 1, "The": [2, 4, 19, 54, 57, 60, 61, 69], "aqasm": 2, "format": 2, "text": 2, "header": 2, "instruct": [2, 4, 19], "list": [2, 4, 19, 45], "compil": [2, 12, 31], "file": 2, "time": [2, 53], "stack": [3, 5, 21, 45], "high": [4, 19, 34, 62], "level": [4, 19, 34, 61, 62], "wrapper": [4, 19], "qubit": [4, 19, 46, 52, 66, 68], "cbit": [4, 19], "dictionari": [4, 19], "circuitinlin": 5, "inlin": 5, "insid": 5, "tool": [6, 12, 38, 42, 53, 56, 61, 69], "result": [6, 19, 53], "formul": 7, "solv": 7, "bibliographi": 7, "qa": [8, 64], "approxim": 9, "algorithm": [9, 45, 50, 61, 67, 70], "qaoa": [9, 16, 17, 20, 22, 64, 69, 71], "sa": 10, "sqa": 11, "command": 12, "line": 12, "aqasm2circ": 12, "circ2aqasm": 12, "execut": [12, 21, 68], "qat": [12, 34, 35, 36, 45, 53, 54, 61, 64, 69], "jobrun": 12, "batchrun": 12, "resprint": 12, "circstat": 12, "costfunctionplugin": 13, "variat": [13, 45, 56, 67, 70], "without": 13, "observ": [13, 19, 46, 53, 68], "displai": [14, 53], "consol": 14, "display": 14, "plugin": [14, 21, 45, 53, 59, 60, 65, 69, 70], "get": 15, "start": 15, "job": [16, 17, 19, 20, 22, 53, 64, 67, 68, 71], "schedul": [16, 17, 20, 22, 53, 71], "welcom": 18, "myqlm": [18, 25, 26, 27, 28, 29, 37, 38, 39, 42], "document": [18, 23, 31, 32, 33, 37, 69], "basic": [18, 57, 61], "usag": [18, 52, 56, 57], "notebook": [18, 30, 45], "sourc": [18, 23, 28, 31, 32, 33, 37, 69], "code": [18, 23, 31, 32, 33, 37, 69], "addit": 18, "inform": [18, 21, 68], "main": [19, 38, 43, 58], "object": 19, "batch": [19, 38, 42, 53], "except": [19, 61], "kcliqu": 20, "custom": [21, 52], "flow": 21, "write": [21, 52], "your": [21, 45], "own": 21, "qpu": [21, 33, 37, 38, 42, 69], "junction": [21, 53], "connect": [21, 33, 37], "remot": [21, 53], "server": 21, "mode": [21, 68], "client": 21, "cirq": 23, "interoper": [23, 26, 27, 32, 33, 37, 45, 69], "translat": [23, 31, 32, 33, 37, 53], "contribut": 25, "how": 25, "instal": [26, 29], "prerequisit": 26, "compat": 26, "packag": 26, "avail": 27, "binder": 27, "licens": 28, "proprietari": 28, "part": 28, "open": 28, "maco": 29, "openqasm": 31, "projectq": 32, "pyquil": 33, "pyquilqpu": 33, "clinalg": 34, "c": 34, "algebra": [34, 35], "process": [34, 35], "unit": [34, 35], "low": [34, 60, 61], "statevector": 34, "pybind": 34, "pylinalg": 35, "intern": 35, "simulated_ann": 36, "qiskit": 37, "backend": 37, "releas": 38, "note": 38, "what": 38, "": 38, "new": [38, 39, 40, 41, 42, 52], "1": 38, "7": 38, "2": 38, "fix": [38, 40, 41, 42, 43], "deprec": [38, 43], "warn": [38, 43], "A": [38, 42, 68], "fermion": [38, 42, 45, 55, 56, 57, 60], "featur": [38, 39, 40, 41, 42], "updat": [38, 40, 41, 42, 58], "6": 38, "0": 38, "5": 38, "4": 38, "power": [38, 39], "access": [38, 39], "known": [38, 39], "support": 44, "tutori": 45, "run": [45, 49, 67], "digit": [45, 55, 60, 69], "spin": [45, 55, 57, 60], "system": [45, 55, 60], "lang": [45, 61], "none": 45, "ad": 45, "design": 45, "qlm": [45, 60], "first": 45, "step": 45, "introduct": 45, "observablesplitt": 46, "turn": 46, "sampl": [46, 68], "adapt": 47, "vqe": [47, 56], "iter": 47, "effici": [47, 60], "ansatz": [47, 56, 60, 64], "gradientdescentoptim": 48, "natur": 48, "gradient": 48, "descent": 48, "multiplelaunchesanalyz": 49, "sever": [49, 67], "keep": 49, "best": 49, "one": [49, 57, 68], "seqoptim": 50, "sequenti": 50, "zeronoiseextrapol": 51, "zero": 51, "nois": 51, "extrapol": 51, "multiqubit": 51, "mitig": 51, "regist": 52, "nativ": 52, "control": 52, "dagger": 52, "defin": [52, 57], "parametr": 52, "abstract": [52, 53], "routin": [52, 62], "oper": [52, 57], "librairi": 52, "export": 52, "more": 52, "core": [53, 69], "data": 53, "structur": [53, 61], "class": [53, 60, 61], "manipul": [53, 61, 64], "tempor": 53, "composit": 53, "parallel": 53, "rescal": 53, "analog": 53, "hardwar": [53, 60, 65], "specif": 53, "signatur": 53, "variabl": [53, 67], "variou": 53, "method": [53, 57], "devic": [54, 69], "librari": [54, 61, 69], "predefin": 54, "tabl": [56, 60], "content": [56, 60], "eigensolv": 56, "chemistri": 56, "molecularhamiltonian": [56, 60], "moleculeinfo": [56, 60], "estim": [56, 60], "trotter": 56, "subspac": [56, 60], "expans": [56, 60], "hamiltonian": [57, 60], "two": 57, "electron": 57, "integr": 57, "get_matrix": 57, "represent": [57, 64], "some": 57, "constructor": 57, "changelog": 58, "miscellan": 58, "spinhamiltonian": 60, "fermionhamiltonian": 60, "electronicstructurehamiltonian": 60, "atom": 60, "molecular": 60, "studi": 60, "common": 60, "mani": 60, "bodi": 60, "hubbard": 60, "model": 60, "singl": 60, "impur": 60, "anderson": 60, "transform": 60, "jordan": 60, "wigner": 60, "bravyi": 60, "kitaev": 60, "pariti": 60, "basi": 60, "depth": 60, "ldca": 60, "multi": 60, "refer": [60, 63], "mr": 60, "excit": 60, "preserv": 60, "mrep": 60, "8": 60, "paramet": [60, 67], "compress": 60, "onli": [60, 68], "user": 60, "unitari": 60, "coupl": 60, "cluster": 60, "ucc": 60, "util": [60, 61], "bit": 61, "formula": 61, "linker": 61, "qft": 62, "base": 62, "overview": 62, "carri": 62, "agnost": 62, "state": [63, 68], "prepar": 63, "qram": 63, "opt": 64, "encod": 64, "declar": 64, "quadrat": 64, "qubo": 64, "Ising": 64, "quameleonplugin": 65, "emul": 65, "constraint": 65, "via": 65, "remap": 66, "unus": 66, "remov": 66, "bind": 67, "differenti": 67, "test": 67, "initi": 67, "describ": 68, "full": 68, "bell": 68, "infinit": 68, "shot": 68, "all": 68, "finit": 68, "further": 68, "applic": 69, "toolchain": 69, "framework": 69}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Advanced combinatorial optimization": [[0, "advanced-combinatorial-optimization"]], "NP-hard problems": [[0, "np-hard-problems"]], "Unconstrained Graph Problems": [[0, "unconstrained-graph-problems"], [64, "unconstrained-graph-problems"]], "Max cut": [[0, "max-cut"]], "Graph Partitioning": [[0, "graph-partitioning"]], "Constrained Graph Problems": [[0, "constrained-graph-problems"], [64, "constrained-graph-problems"]], "Graph Colouring": [[0, "graph-colouring"], [0, "id3"]], "K-Clique": [[0, "k-clique"], [0, "id4"]], "Vertex Cover": [[0, "vertex-cover"], [0, "id5"]], "Other problems": [[0, "other-problems"], [64, "other-problems"]], "Number Partitioning": [[0, "number-partitioning"], [0, "id7"]], "Binary Integer Linear Programming": [[0, "binary-integer-linear-programming"]], "Simulated Quantum Annealing Benchmarking and Performance": [[0, "simulated-quantum-annealing-benchmarking-and-performance"]], "Max Cut": [[0, "id2"]], "Interfacing with DWAVE": [[0, "interfacing-with-dwave"]], "Advanced programming using pyAQASM": [[1, "advanced-programming-using-pyaqasm"]], "AbstractGates, circuit and matrix implementation": [[1, "abstractgates-circuit-and-matrix-implementation"]], "Matrix definition": [[1, "matrix-definition"]], "Subcircuit definition": [[1, "subcircuit-definition"]], "Arity generator": [[1, "arity-generator"]], "Lifting Python functions into quantum gates": [[1, "lifting-python-functions-into-quantum-gates"]], "Linking at circuit extraction": [[1, "linking-at-circuit-extraction"]], "Compute/uncompute scopes": [[1, "compute-uncompute-scopes"]], "Automated ancillae management": [[1, "automated-ancillae-management"]], "Oracles and quantum types": [[1, "oracles-and-quantum-types"]], "Quantum booleans, quantum conditionals, and quantum oracles": [[1, "quantum-booleans-quantum-conditionals-and-quantum-oracles"]], "Allocation": [[1, "allocation"], [1, "id1"]], "Logical expressions": [[1, "logical-expressions"]], "Evaluating expressions": [[1, "evaluating-expressions"]], "Quantum conditionals and with statements": [[1, "quantum-conditionals-and-with-statements"]], "Building phase oracles": [[1, "building-phase-oracles"]], "Quantum integers": [[1, "quantum-integers"], [61, "quantum-integers"]], "Setting a classical value": [[1, "setting-a-classical-value"]], "Arithmetic expressions": [[1, "arithmetic-expressions"]], "Conditionals on quantum integers": [[1, "conditionals-on-quantum-integers"]], "Example: Grover oracle for graph coloring": [[1, "example-grover-oracle-for-graph-coloring"]], "The AQASM format": [[2, "the-aqasm-format"]], "The text format": [[2, "the-text-format"]], "Header": [[2, "header"]], "Instructions": [[2, "instructions"]], "List of gates": [[2, "list-of-gates"]], "Compiling .aqasm files": [[2, "compiling-aqasm-files"]], "Compilation time linking": [[2, "compilation-time-linking"]], "Building advanced computation stacks": [[3, "building-advanced-computation-stacks"]], "The high-level wrapper": [[4, "the-high-level-wrapper"], [19, "the-high-level-wrapper"]], "Qubits and cbits": [[4, "qubits-and-cbits"], [19, "qubits-and-cbits"]], "Instruction list": [[4, "instruction-list"], [19, "instruction-list"]], "Quantum gates and gate dictionary": [[4, "quantum-gates-and-gate-dictionary"], [19, "quantum-gates-and-gate-dictionary"]], "CircuitInliner : inlining circuit inside a stack": [[5, "module-qat.lang.linking.plugin"]], "Combinatorial Optimization Generators tools": [[6, "combinatorial-optimization-generators-tools"]], "K-Clique result": [[6, "k-clique-result"]], "Vertex cover result": [[6, "vertex-cover-result"]], "Combinatorial optimization": [[7, "combinatorial-optimization"]], "Formulating combinatorial problems": [[7, "formulating-combinatorial-problems"]], "Solving combinatorial problems": [[7, "solving-combinatorial-problems"]], "Bibliography": [[7, "bibliography"]], "Quantum Annealing (QA)": [[8, "quantum-annealing-qa"]], "Quantum Approximate Optimization Algorithm (QAOA)": [[9, "quantum-approximate-optimization-algorithm-qaoa"]], "Simulated annealing (SA)": [[10, "simulated-annealing-sa"]], "Simulated Quantum Annealing (SQA)": [[11, "simulated-quantum-annealing-sqa"]], "Command-line tools": [[12, "command-line-tools"]], "Compiler": [[12, "compiler"]], "aqasm2circ": [[12, "aqasm2circ"]], "circ2aqasm": [[12, "circ2aqasm"]], "Simulation / Execution commands": [[12, "simulation-execution-commands"]], "qat-jobrun and qat-batchrun": [[12, "qat-jobrun-and-qat-batchrun"]], "qat-resprint": [[12, "qat-resprint"]], "qat-circstat": [[12, "qat-circstat"]], "CostFunctionPlugin: variational optimization without observable": [[13, "costfunctionplugin-variational-optimization-without-observable"]], "Display : a console displayer plugin": [[14, "module-qat.core.console"]], "Getting started": [[15, "getting-started"]], "Graph Colouring Generator": [[16, "graph-colouring-generator"]], "QAOA job generation": [[16, "qaoa-job-generation"], [17, "qaoa-job-generation"], [20, "qaoa-job-generation"], [22, "qaoa-job-generation"], [71, "qaoa-job-generation"]], "Annealing job generation": [[16, "annealing-job-generation"], [17, "annealing-job-generation"], [20, "annealing-job-generation"], [22, "annealing-job-generation"], [71, "annealing-job-generation"]], "Scheduling job generation": [[16, "scheduling-job-generation"], [17, "scheduling-job-generation"], [20, "scheduling-job-generation"], [22, "scheduling-job-generation"], [71, "scheduling-job-generation"]], "Graph Partitioning Generator": [[17, "graph-partitioning-generator"]], "Welcome to the myQLM documentation": [[18, "welcome-to-the-myqlm-documentation"]], "Basic usage": [[18, null], [57, "basic-usage"]], "Notebooks": [[18, null], [30, "notebooks"]], "Advanced usage": [[18, null], [56, "advanced-usage"]], "Source code documentation": [[18, null], [23, "source-code-documentation"], [31, "source-code-documentation"], [32, "source-code-documentation"], [33, "source-code-documentation"], [37, "source-code-documentation"], [69, "module-qat"]], "Additional information": [[18, null]], "Main objects: Jobs, Observables, Circuits\u2026": [[19, "main-objects-jobs-observables-circuits"]], "Job and Batch": [[19, "job-and-batch"]], "Observables": [[19, "observables"], [53, "observables"]], "Results": [[19, "results"], [53, "results"]], "Circuits": [[19, "circuits"], [53, "circuits"]], "Exceptions": [[19, "exceptions"], [61, "exceptions"]], "KClique Generator": [[20, "kclique-generator"]], "Building custom execution stacks": [[21, "building-custom-execution-stacks"]], "Plugins & information flow": [[21, "plugins-information-flow"]], "Writing your own QPU": [[21, "writing-your-own-qpu"]], "Writing your own plugin": [[21, "writing-your-own-plugin"]], "Building expressive stacks using Junctions": [[21, "building-expressive-stacks-using-junctions"]], "Connecting to a remote Plugin": [[21, "connecting-to-a-remote-plugin"]], "Server mode": [[21, "server-mode"], [21, "id1"]], "Client mode": [[21, "client-mode"], [21, "id2"]], "Connecting to a remote QPU": [[21, "connecting-to-a-remote-qpu"]], "Max Cut Generator": [[22, "max-cut-generator"]], "Cirq interoperability": [[23, "cirq-interoperability"]], "Translating quantum circuits": [[23, "module-qat.interop.cirq.converters"], [31, "translating-quantum-circuits"], [32, "module-qat.interop.projectq.converters"], [33, "module-qat.interop.pyquil.converters"], [37, "module-qat.interop.qiskit.converters"]], "Circuit translation": [[23, "circuit-translation"], [33, "circuit-translation"], [37, "circuit-translation"]], "Contributing to myQLM": [[25, "contributing-to-myqlm"]], "How to contribute?": [[25, "how-to-contribute"]], "Installing myQLM": [[26, "installing-myqlm"]], "Prerequisites": [[26, "prerequisites"]], "Compatibility Matrix": [[26, "compatibility-matrix"]], "Install": [[26, "id8"]], "Install myQLM package": [[26, "install-myqlm-package"]], "Interoperability": [[26, "interoperability"]], "Interoperability with myQLM": [[27, "interoperability-with-myqlm"]], "Available binders": [[27, null]], "myQLM license": [[28, "myqlm-license"]], "Proprietary part": [[28, "proprietary-part"]], "Open source part": [[28, "open-source-part"]], "myQLM Installation on MacOS": [[29, "myqlm-installation-on-macos"]], "OpenQASM Compiler": [[31, "openqasm-compiler"]], "ProjectQ interoperability": [[32, "projectq-interoperability"]], "PyQuil interoperability": [[33, "pyquil-interoperability"]], "Connecting to a QPU": [[33, "module-qat.interop.pyquil.providers"]], "PyquilQPU": [[33, "pyquilqpu"]], "qat.clinalg: C++ Linear-algebra simulator": [[34, "qat-clinalg-c-linear-algebra-simulator"]], "High-level Quantum Processing Unit": [[34, "high-level-quantum-processing-unit"]], "C++ Low-level Statevector": [[34, "c-low-level-statevector"]], "Pybind interface": [[34, "pybind-interface"]], "qat.pylinalg: Python Linear-algebra simulator": [[35, "qat-pylinalg-python-linear-algebra-simulator"]], "Quantum Processing Unit": [[35, "quantum-processing-unit"]], "Simulator Internal Functions": [[35, "simulator-internal-functions"]], "qat.simulated_annealing: Simulated Annealing": [[36, "qat-simulated-annealing-simulated-annealing"]], "Qiskit interoperability": [[37, "qiskit-interoperability"]], "Connecting to a QPU/Backend": [[37, "connecting-to-a-qpu-backend"]], "Using a Qiskit QPU in myQLM": [[37, "using-a-qiskit-qpu-in-myqlm"]], "Using a myQLM QPU in Qiskit": [[37, "using-a-myqlm-qpu-in-qiskit"]], "Release notes": [[38, "release-notes"]], "What\u2019s new in myQLM 1.7.2": [[38, "what-s-new-in-myqlm-1-7-2"]], "Main Fixes": [[38, "main-fixes"], [43, "main-fixes"]], "Deprecation warnings": [[38, "deprecation-warnings"], [43, "deprecation-warnings"]], "What\u2019s new in myQLM 1.7.1": [[38, "what-s-new-in-myqlm-1-7-1"]], "A new simulated QPU in myQLM": [[38, "a-new-simulated-qpu-in-myqlm"], [42, "a-new-simulated-qpu-in-myqlm"]], "Tools for fermionic computations (myQLM-fermion)": [[38, "tools-for-fermionic-computations-myqlm-fermion"], [42, "tools-for-fermionic-computations-myqlm-fermion"]], "Batch generators in myQLM": [[38, "batch-generators-in-myqlm"], [42, "batch-generators-in-myqlm"]], "New features": [[38, "new-features"], [38, "id1"], [38, "id4"], [38, "id7"], [39, "new-features"], [40, "new-features"], [41, "new-features"], [42, "new-features"]], "Updated features": [[38, "updated-features"], [38, "id2"], [38, "id5"], [40, "updated-features"], [41, "updated-features"], [42, "updated-features"]], "Fixes": [[38, "fixes"], [38, "id3"], [38, "id6"], [40, "fixes"], [41, "fixes"], [42, "fixes"]], "What\u2019s new in myQLM 1.6.0": [[38, "what-s-new-in-myqlm-1-6-0"]], "What\u2019s new in myQLM 1.5.1": [[38, "what-s-new-in-myqlm-1-5-1"]], "What\u2019s new in myQLM 1.4.0": [[38, "what-s-new-in-myqlm-1-4-0"]], "myQLM Power Access": [[38, "myqlm-power-access"], [39, "myqlm-power-access"]], "Known problems": [[38, "known-problems"], [39, "known-problems"]], "Support": [[44, "support"]], "List of notebooks": [[45, "list-of-notebooks"]], "Tutorials": [[45, "tutorials"]], "Running digital quantum simulations for spin and fermionic systems": [[45, "running-digital-quantum-simulations-for-spin-and-fermionic-systems"]], "Programming with qat.lang": [[45, "programming-with-qat-lang"]], "None": [[45, "none"]], "Adding plugins to your computation stack": [[45, "adding-plugins-to-your-computation-stack"]], "Designing and running variational algorithms in the QLM": [[45, "designing-and-running-variational-algorithms-in-the-qlm"]], "First steps with the QLM": [[45, "first-steps-with-the-qlm"]], "Combinatorial Optimization Problems": [[45, "combinatorial-optimization-problems"]], "interoperability": [[45, "interoperability"]], "Simulation of quantum circuits on the QLM: introduction": [[45, "simulation-of-quantum-circuits-on-the-qlm-introduction"]], "ObservableSplitter : turning observable sampling into qubit sampling": [[46, "module-qat.plugins.observable_splitter"]], "ADAPT-VQE: building iteratively efficient ansatze": [[47, "adapt-vqe-building-iteratively-efficient-ansatze"]], "GradientDescentOptimizer: Natural gradient descent optimizer": [[48, "gradientdescentoptimizer-natural-gradient-descent-optimizer"]], "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one": [[49, "multiplelaunchesanalyzer-running-several-optimizations-and-keeping-the-best-one"]], "SeqOptim: optimizing circuits with the sequential optimization algorithm": [[50, "seqoptim-optimizing-circuits-with-the-sequential-optimization-algorithm"]], "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation": [[51, "zeronoiseextrapolator-zero-noise-extrapolation-for-multiqubit-noise-mitigation"]], "Writing quantum circuits": [[52, "writing-quantum-circuits"]], "Allocating qubit and classical registers:": [[52, "allocating-qubit-and-classical-registers"]], "Quantum gates": [[52, "quantum-gates"]], "Native gates, controls and daggers": [[52, "native-gates-controls-and-daggers"]], "Defining new parametrized gates: Abstract Gates": [[52, "defining-new-parametrized-gates-abstract-gates"]], "Custom gates": [[52, "custom-gates"]], "Quantum routines": [[52, "quantum-routines"]], "Other operations": [[52, "other-operations"]], "Quantum routine librairies": [[52, "quantum-routine-librairies"]], "Generating the circuit": [[52, "generating-the-circuit"]], "Exporting the circuit": [[52, "exporting-the-circuit"]], "More advanced usage": [[52, "more-advanced-usage"]], "qat-core: Core data structures and Abstract classes": [[53, "qat-core-core-data-structures-and-abstract-classes"]], "Abstract classes": [[53, "abstract-classes"]], "Remote interfaces": [[53, "remote-interfaces"]], "Batch and Job": [[53, "batch-and-job"]], "Schedules": [[53, "schedules"]], "Building schedules": [[53, "building-schedules"]], "Manipulating schedules": [[53, "manipulating-schedules"]], "Temporal composition": [[53, "temporal-composition"]], "Parallel composition": [[53, "parallel-composition"]], "Rescaling a schedule": [[53, "rescaling-a-schedule"]], "Time translation of a schedule": [[53, "time-translation-of-a-schedule"]], "Analog Jobs": [[53, "analog-jobs"]], "Displaying circuits": [[53, "displaying-circuits"]], "Hardware specifications": [[53, "hardware-specifications"]], "Gate set and gate signatures": [[53, "gate-set-and-gate-signatures"]], "Variables and expressions": [[53, "variables-and-expressions"]], "Various methods and tools": [[53, "various-methods-and-tools"]], "Plugins & Junctions": [[53, "plugins-junctions"]], "qat.devices: The device library": [[54, "module-qat.devices"]], "Predefined devices": [[54, "predefined-devices"]], "Device generators": [[54, "device-generators"]], "Digital quantum simulation for spin and fermionic systems": [[55, "digital-quantum-simulation-for-spin-and-fermionic-systems"], [60, "digital-quantum-simulation-for-spin-and-fermionic-systems"]], "Table of Contents": [[56, "table-of-contents"], [60, "table-of-contents"]], "Variational Quantum Eigensolver (VQE)": [[56, "variational-quantum-eigensolver-vqe"]], "Quantum Chemistry tools for VQE": [[56, "quantum-chemistry-tools-for-vqe"]], "MolecularHamiltonian": [[56, "molecularhamiltonian"], [60, "molecularhamiltonian"]], "MoleculeInfo": [[56, "moleculeinfo"], [60, "moleculeinfo"]], "Fermionic ansatz circuits": [[56, "fermionic-ansatz-circuits"], [60, "fermionic-ansatz-circuits"]], "Quantum phase estimation": [[56, "quantum-phase-estimation"], [60, "quantum-phase-estimation"]], "Trotterization tools": [[56, "trotterization-tools"]], "Quantum subspace expansion": [[56, "quantum-subspace-expansion"], [60, "quantum-subspace-expansion"]], "Defining a Hamiltonian": [[57, "defining-a-hamiltonian"]], "Spin Hamiltonians": [[57, "spin-hamiltonians"]], "Fermionic Hamiltonians": [[57, "fermionic-hamiltonians"]], "Fermionic Hamiltonian using one and two-electrons integrals": [[57, "fermionic-hamiltonian-using-one-and-two-electrons-integrals"]], "The get_matrix() method": [[57, "the-get-matrix-method"]], "Fermionic to spin representation": [[57, "fermionic-to-spin-representation"]], "Spin and fermionic Hamiltonian operations": [[57, "spin-and-fermionic-hamiltonian-operations"]], "Some Hamiltonian constructors": [[57, "some-hamiltonian-constructors"]], "Changelog": [[58, "changelog"]], "Main updates": [[58, "main-updates"]], "Miscellanous": [[58, "miscellanous"]], "Plugins": [[59, "plugins"], [60, "plugins"], [69, "plugins"]], "The Hamiltonians classes": [[60, "the-hamiltonians-classes"]], "SpinHamiltonian": [[60, "spinhamiltonian"]], "FermionHamiltonian": [[60, "fermionhamiltonian"]], "ElectronicStructureHamiltonian": [[60, "electronicstructurehamiltonian"]], "Atomic and molecular studies study": [[60, "atomic-and-molecular-studies-study"]], "Common many-body Hamiltonians": [[60, "common-many-body-hamiltonians"]], "The Hubbard model": [[60, "the-hubbard-model"]], "The single-impurity Anderson Model": [[60, "the-single-impurity-anderson-model"]], "The generalized impurity Hamiltonian": [[60, "the-generalized-impurity-hamiltonian"]], "The spin-fermion transforms": [[60, "the-spin-fermion-transforms"]], "Jordan-Wigner transform": [[60, "jordan-wigner-transform"]], "Bravyi-Kitaev transform": [[60, "bravyi-kitaev-transform"]], "Parity basis transform": [[60, "parity-basis-transform"]], "Low-Depth Circuit Ansatz (LDCA)": [[60, "low-depth-circuit-ansatz-ldca"]], "Multi-Reference (MR) ansatz": [[60, "multi-reference-mr-ansatz"]], "Multi-Reference, Excitation-Preserving (MREP) ansatz": [[60, "multi-reference-excitation-preserving-mrep-ansatz"]], "General hardware-efficient ansatz": [[60, "general-hardware-efficient-ansatz"]], "The 8-parameter circuit ansatz": [[60, "the-8-parameter-circuit-ansatz"]], "Compressed LDCA ansatz (only for QLM users)": [[60, "compressed-ldca-ansatz-only-for-qlm-users"]], "Unitary Coupled-Cluster (UCC)": [[60, "unitary-coupled-cluster-ucc"]], "Utility functions": [[60, "utility-functions"]], "qat.lang : Programming tools": [[61, "qat-lang-programming-tools"]], "The Program class": [[61, "the-program-class"]], "Gate structures": [[61, "gate-structures"]], "Quantum Types": [[61, "quantum-types"]], "Quantum boolean and expressions": [[61, "quantum-boolean-and-expressions"]], "Other structures": [[61, "other-structures"]], "Classical bits and Boolean formulae": [[61, "classical-bits-and-boolean-formulae"]], "Utilities": [[61, "module-qat.lang.AQASM.util"]], "Gate set management and generation": [[61, "module-qat.lang.AQASM.misc"]], "Quantum libraries": [[61, "quantum-libraries"]], "Linker and low level circuit manipulation": [[61, "linker-and-low-level-circuit-manipulation"]], "Basic algorithms": [[61, "basic-algorithms"]], "Arithmetic routines": [[62, "arithmetic-routines"]], "QFT-based arithmetic": [[62, "module-qat.lang.AQASM.qftarith"]], "Overview": [[62, "overview"]], "Carry-based arithmetic": [[62, "module-qat.lang.AQASM.classarith"]], "Agnostic/High-level arithmetic": [[62, "module-qat.lang.AQASM.arithmetic"]], "State preparation and QRAM circuits": [[63, "state-preparation-and-qram-circuits"]], "References": [[63, "references"]], "qat-opt: representation and encoding of combinatorial problems, QAOA": [[64, "qat-opt-representation-and-encoding-of-combinatorial-problems-qaoa"]], "Declaring and manipulating combinatorial problems": [[64, "declaring-and-manipulating-combinatorial-problems"]], "Generic combinatorial optimization": [[64, "generic-combinatorial-optimization"]], "Quadratic problems: QUBO and Ising": [[64, "quadratic-problems-qubo-and-ising"]], "Generating the QAOA Ansatz": [[64, "generating-the-qaoa-ansatz"]], "Generating QA jobs": [[64, "generating-qa-jobs"]], "Encoding NP-hard Problems": [[64, "encoding-np-hard-problems"]], "QuameleonPlugin : emulating hardware constraints via a plugin": [[65, "module-qat.core.quameleon"]], "Remap: unused qubits remover": [[66, "remap-unused-qubits-remover"]], "Running variational algorithms": [[67, "running-variational-algorithms"], [67, "id1"]], "Variational jobs": [[67, "variational-jobs"]], "Binding variables": [[67, "binding-variables"]], "Differentiating jobs": [[67, "differentiating-jobs"]], "Testing for several initializations of the parameters": [[67, "testing-for-several-initializations-of-the-parameters"]], "Executing quantum circuits": [[68, "executing-quantum-circuits"]], "Describing a quantum job": [[68, "describing-a-quantum-job"]], "A full example on the Bell state circuit": [[68, "a-full-example-on-the-bell-state-circuit"]], "SAMPLE mode": [[68, "sample-mode"]], "Infinite number of shots, all qubits": [[68, "infinite-number-of-shots-all-qubits"]], "Finite number of shots, all qubits": [[68, "finite-number-of-shots-all-qubits"]], "Infinite number of shots, only one qubit": [[68, "infinite-number-of-shots-only-one-qubit"]], "OBSERVABLE mode": [[68, "observable-mode"]], "Infinite number of shots": [[68, "infinite-number-of-shots"]], "Finite number of shots": [[68, "finite-number-of-shots"]], "Further information": [[68, "further-information"]], "Quantum Application ToolChain (QAT) Python libraries": [[69, "quantum-application-toolchain-qat-python-libraries"]], "The core library": [[69, "the-core-library"]], "The programming library": [[69, "the-programming-library"]], "The device library": [[69, "the-device-library"]], "Generators": [[69, "generators"]], "QPUs": [[69, "qpus"]], "Interoperability with other frameworks": [[69, "interoperability-with-other-frameworks"]], "Digital quantum simulation tools": [[69, "digital-quantum-simulation-tools"]], "Combinatorial optimization and QAOA": [[69, "combinatorial-optimization-and-qaoa"]], "Plugins for variational algorithms": [[70, "plugins-for-variational-algorithms"]], "Vertex Cover Generator": [[71, "vertex-cover-generator"]]}, "indexentries": {"module": [[0, "module-qat.opt.generators"], [5, "module-qat.lang.linking.plugin"], [14, "module-qat.core.console"], [23, "module-qat.interop.cirq.converters"], [32, "module-qat.interop.projectq.converters"], [33, "module-qat.interop.pyquil.converters"], [33, "module-qat.interop.pyquil.providers"], [34, "module-qat.clinalg"], [35, "module-qat.pylinalg"], [35, "module-qat.pylinalg.simulator"], [36, "module-qat.simulated_annealing"], [37, "module-qat.interop.qiskit.converters"], [37, "module-qat.interop.qiskit.providers"], [37, "module-qat.interop.qiskit.runtime"], [46, "module-qat.plugins.observable_splitter"], [47, "module-qat.plugins.MultipleLaunchesAnalyzer"], [48, "module-qat.plugins.GradientDescentOptimizer"], [49, "module-qat.plugins.MultipleLaunchesAnalyzer"], [50, "module-qat.plugins.SeqOptim"], [51, "module-qat.plugins.ZeroNoiseExtrapolator"], [53, "module-qat.core"], [53, "module-qat.core.wrappers.observable"], [54, "module-qat.devices"], [55, "module-qat.fermion"], [61, "module-qat.lang"], [61, "module-qat.lang.AQASM.misc"], [61, "module-qat.lang.AQASM.util"], [62, "module-qat.lang.AQASM"], [62, "module-qat.lang.AQASM.arithmetic"], [62, "module-qat.lang.AQASM.classarith"], [62, "module-qat.lang.AQASM.qftarith"], [65, "module-qat.core.quameleon"], [69, "module-qat"]], "qat.opt.generators": [[0, "module-qat.opt.generators"]], "op (class in qat.comm.datamodel.ttypes)": [[4, "qat.comm.datamodel.ttypes.Op"], [19, "qat.comm.datamodel.ttypes.Op"]], "qat.comm.datamodel.ttypes.gatedefinition (built-in class)": [[4, "qat.comm.datamodel.ttypes.GateDefinition"], [19, "qat.comm.datamodel.ttypes.GateDefinition"]], "circuitinliner (class in qat.lang.linking.plugin)": [[5, "qat.lang.linking.plugin.CircuitInliner"]], "addargs() (qat.lang.linking.plugin.circuitinliner class method)": [[5, "qat.lang.linking.plugin.CircuitInliner.addargs"]], "compile() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.compile"]], "do_post_processing() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.do_post_processing"]], "post_process() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.post_process"]], "qat.lang.linking.plugin": [[5, "module-qat.lang.linking.plugin"]], "graphpartitioningresult (class in qat.opt.results)": [[6, "qat.opt.results.GraphPartitioningResult"]], "kcliqueresult (class in qat.opt.results)": [[6, "qat.opt.results.KCliqueResult"]], "vertexcoverresult (class in qat.opt.results)": [[6, "qat.opt.results.VertexCoverResult"]], "clique (qat.opt.results.kcliqueresult property)": [[6, "qat.opt.results.KCliqueResult.clique"]], "cover (qat.opt.results.vertexcoverresult property)": [[6, "qat.opt.results.VertexCoverResult.cover"]], "display() (qat.opt.results.graphpartitioningresult method)": [[6, "qat.opt.results.GraphPartitioningResult.display"]], "costfunctionplugin (class in qat.plugins)": [[13, "qat.plugins.CostFunctionPlugin"]], "display (class in qat.core.console)": [[14, "qat.core.console.Display"]], "compile() (qat.core.console.display method)": [[14, "qat.core.console.Display.compile"]], "do_post_processing() (qat.core.console.display method)": [[14, "qat.core.console.Display.do_post_processing"]], "post_process() (qat.core.console.display method)": [[14, "qat.core.console.Display.post_process"]], "qat.core.console": [[14, "module-qat.core.console"]], "graphcolouringgenerator (class in qat.opt.generators)": [[16, "qat.opt.generators.GraphColouringGenerator"]], "generate() (qat.opt.generators.graphcolouringgenerator method)": [[16, "qat.opt.generators.GraphColouringGenerator.generate"]], "graphpartitioninggenerator (class in qat.opt.generators)": [[17, "qat.opt.generators.GraphPartitioningGenerator"]], "generate() (qat.opt.generators.graphpartitioninggenerator method)": [[17, "qat.opt.generators.GraphPartitioningGenerator.generate"]], "qat.comm.exceptions.ttypes.errortype (built-in class)": [[19, "qat.comm.exceptions.ttypes.ErrorType"]], "qat.comm.exceptions.ttypes.pluginexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.PluginException"]], "qat.comm.exceptions.ttypes.qpuexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.QPUException"]], "kcliquegenerator (class in qat.opt.generators)": [[20, "qat.opt.generators.KCliqueGenerator"]], "generate() (qat.opt.generators.kcliquegenerator method)": [[20, "qat.opt.generators.KCliqueGenerator.generate"]], "maxcutgenerator (class in qat.opt.generators)": [[22, "qat.opt.generators.MaxCutGenerator"]], "generate() (qat.opt.generators.maxcutgenerator method)": [[22, "qat.opt.generators.MaxCutGenerator.generate"]], "cirq_to_qlm() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.cirq_to_qlm"]], "qat.interop.cirq.converters": [[23, "module-qat.interop.cirq.converters"]], "qlm_to_cirq() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.qlm_to_cirq"]], "oqasmparser (class in qat.interop.openqasm)": [[31, "qat.interop.openqasm.OqasmParser"]], "compile() (qat.interop.openqasm.oqasmparser method)": [[31, "qat.interop.openqasm.OqasmParser.compile"]], "aqasmengine (class in qat.interop.projectq)": [[32, "qat.interop.projectq.AqasmEngine"]], "aqasmprinter (class in qat.interop.projectq)": [[32, "qat.interop.projectq.AqasmPrinter"]], "projectq_to_qlm() (qat.interop.projectq.aqasmengine method)": [[32, "qat.interop.projectq.AqasmEngine.projectq_to_qlm"]], "qat.interop.projectq.converters": [[32, "module-qat.interop.projectq.converters"]], "pyquilqpu (class in qat.interop.pyquil)": [[33, "qat.interop.pyquil.PyquilQPU"]], "pyquil_to_qlm() (in module qat.interop.pyquil)": [[33, "qat.interop.pyquil.pyquil_to_qlm"]], "qat.interop.pyquil.converters": [[33, "module-qat.interop.pyquil.converters"]], "qat.interop.pyquil.providers": [[33, "module-qat.interop.pyquil.providers"]], "qlm_to_pyquil() (in module qat.interop.pyquil)": [[33, "qat.interop.pyquil.qlm_to_pyquil"]], "set_qpu() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.set_qpu"]], "submit() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.submit"]], "submit_job() (qat.interop.pyquil.pyquilqpu method)": [[33, "qat.interop.pyquil.PyquilQPU.submit_job"]], "clinalg (class in qat.clinalg)": [[34, "qat.clinalg.CLinalg"]], "clinalgstatevectorcpudouble (class in qat.clinalg.wrapper)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble"]], "apply_1qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_ctrl_gate"]], "apply_1qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_gate"]], "apply_2qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_ctrl_gate"]], "apply_2qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_gate"]], "apply_ccnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CCNOT"]], "apply_cnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CNOT"]], "apply_csign() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CSIGN"]], "apply_h() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_H"]], "apply_iswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_ISWAP"]], "apply_ph() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_PH"]], "apply_rx() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RX"]], "apply_ry() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RY"]], "apply_rz() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RZ"]], "apply_s() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_S"]], "apply_sqrtswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SQRTSWAP"]], "apply_swap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SWAP"]], "apply_t() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_T"]], "apply_x() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_X"]], "apply_y() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Y"]], "apply_z() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Z"]], "apply_nqbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_ctrl_gate"]], "apply_nqbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_gate"]], "array (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array"]], "array_readonly (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array_readonly"]], "expectation_value() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.expectation_value"]], "get_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_distribution"]], "get_mapped_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_distribution"]], "get_mapped_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_statevector"]], "get_permuted_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_permuted_statevector"]], "print() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.print"]], "project() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.project"]], "qat.clinalg": [[34, "module-qat.clinalg"]], "reset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.reset"]], "resize() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.resize"]], "sample() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample"]], "sample_subset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample_subset"]], "set_num_threads() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.set_num_threads"]], "simulate_circuit() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.simulate_circuit"]], "state_probability() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[34, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.state_probability"]], "submit() (qat.clinalg.clinalg method)": [[34, "qat.clinalg.CLinalg.submit"]], "pylinalg (class in qat.pylinalg)": [[35, "qat.pylinalg.PyLinalg"]], "mat2nparray() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.mat2nparray"]], "measure() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.measure"]], "project() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.project"]], "qat.pylinalg": [[35, "module-qat.pylinalg"]], "qat.pylinalg.simulator": [[35, "module-qat.pylinalg.simulator"]], "raise_break() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.raise_break"]], "reset() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.reset"]], "serve() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.serve"]], "simulate() (in module qat.pylinalg.simulator)": [[35, "qat.pylinalg.simulator.simulate"]], "submit() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.submit"]], "submit_job() (qat.pylinalg.pylinalg method)": [[35, "qat.pylinalg.PyLinalg.submit_job"]], "simulatedannealing (class in qat.simulated_annealing)": [[36, "qat.simulated_annealing.SimulatedAnnealing"]], "extract_j_and_h_from_obs() (in module qat.simulated_annealing.service)": [[36, "qat.simulated_annealing.service.extract_j_and_h_from_obs"]], "integer_to_spins() (in module qat.core.spins)": [[36, "qat.core.spins.integer_to_spins"]], "qat.simulated_annealing": [[36, "module-qat.simulated_annealing"]], "sa() (qat.simulated_annealing.simulatedannealing method)": [[36, "qat.simulated_annealing.SimulatedAnnealing.sa"]], "spins_to_integer() (in module qat.core.spins)": [[36, "qat.core.spins.spins_to_integer"]], "submit_job() (qat.simulated_annealing.simulatedannealing method)": [[36, "qat.simulated_annealing.SimulatedAnnealing.submit_job"]], "asyncbackendtoqpu (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.AsyncBackendToQPU"]], "backendtoqpu (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.BackendToQPU"]], "qputobackend (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.QPUToBackend"]], "qiskitjob (class in qat.interop.qiskit)": [[37, "qat.interop.qiskit.QiskitJob"]], "qiskitruntimeqpu (class in qat.interop.qiskit.runtime)": [[37, "qat.interop.qiskit.runtime.QiskitRuntimeQPU"]], "cancel() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.cancel"]], "dump() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.dump"]], "job_id() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.job_id"]], "qat.interop.qiskit.converters": [[37, "module-qat.interop.qiskit.converters"]], "qat.interop.qiskit.providers": [[37, "module-qat.interop.qiskit.providers"]], "qat.interop.qiskit.runtime": [[37, "module-qat.interop.qiskit.runtime"]], "qiskit_to_qlm() (in module qat.interop.qiskit)": [[37, "qat.interop.qiskit.qiskit_to_qlm"]], "qlm_to_qiskit() (in module qat.interop.qiskit)": [[37, "qat.interop.qiskit.qlm_to_qiskit"]], "result() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.result"]], "retrieve_job() (qat.interop.qiskit.asyncbackendtoqpu method)": [[37, "qat.interop.qiskit.AsyncBackendToQPU.retrieve_job"]], "set_qpu() (qat.interop.qiskit.qputobackend method)": [[37, "qat.interop.qiskit.QPUToBackend.set_qpu"]], "status() (qat.interop.qiskit.qiskitjob method)": [[37, "qat.interop.qiskit.QiskitJob.status"]], "submit() (qat.interop.qiskit.asyncbackendtoqpu method)": [[37, "qat.interop.qiskit.AsyncBackendToQPU.submit"]], "submit() (qat.interop.qiskit.backendtoqpu method)": [[37, "qat.interop.qiskit.BackendToQPU.submit"]], "submit() (qat.interop.qiskit.runtime.qiskitruntimeqpu method)": [[37, "qat.interop.qiskit.runtime.QiskitRuntimeQPU.submit"]], "observablesplitter (class in qat.plugins)": [[46, "qat.plugins.ObservableSplitter"]], "addargs() (qat.plugins.observablesplitter class method)": [[46, "qat.plugins.ObservableSplitter.addargs"]], "compile() (qat.plugins.observablesplitter method)": [[46, "qat.plugins.ObservableSplitter.compile"]], "do_post_processing() (qat.plugins.observablesplitter method)": [[46, "qat.plugins.ObservableSplitter.do_post_processing"]], "get_fresh_key() (qat.plugins.observablesplitter method)": [[46, "qat.plugins.ObservableSplitter.get_fresh_key"]], "post_process() (qat.plugins.observablesplitter method)": [[46, "qat.plugins.ObservableSplitter.post_process"]], "qat.plugins.observable_splitter": [[46, "module-qat.plugins.observable_splitter"]], "adaptvqeplugin (class in qat.plugins)": [[47, "qat.plugins.AdaptVQEPlugin"]], "qat.plugins.multiplelaunchesanalyzer": [[47, "module-qat.plugins.MultipleLaunchesAnalyzer"], [49, "module-qat.plugins.MultipleLaunchesAnalyzer"]], "gradientdescentoptimizer (class in qat.plugins)": [[48, "qat.plugins.GradientDescentOptimizer"]], "qat.plugins.gradientdescentoptimizer": [[48, "module-qat.plugins.GradientDescentOptimizer"]], "multiplelaunchesanalyzer (class in qat.plugins)": [[49, "qat.plugins.MultipleLaunchesAnalyzer"]], "qat.plugins.seqoptim": [[50, "module-qat.plugins.SeqOptim"]], "zeronoiseextrapolator (class in qat.plugins)": [[51, "qat.plugins.ZeroNoiseExtrapolator"]], "qat.plugins.zeronoiseextrapolator": [[51, "module-qat.plugins.ZeroNoiseExtrapolator"]], "abstractgenerator (class in qat.core.generator)": [[53, "qat.core.generator.AbstractGenerator"]], "abstractplugin (class in qat.plugins)": [[53, "qat.plugins.AbstractPlugin"]], "application (class in qat.core.application)": [[53, "qat.core.application.Application"]], "arithexpression (class in qat.core.variables)": [[53, "qat.core.variables.ArithExpression"]], "batch (class in qat.core)": [[53, "qat.core.Batch"]], "batchresult (class in qat.core)": [[53, "qat.core.BatchResult"]], "circuit (class in qat.core)": [[53, "qat.core.Circuit"]], "gateset (class in qat.core.gate_set)": [[53, "qat.core.gate_set.GateSet"]], "gatesignature (class in qat.core.gate_set)": [[53, "qat.core.gate_set.GateSignature"]], "gatesyntaxredefinition (class in qat.core.gate_set)": [[53, "qat.core.gate_set.GateSyntaxRedefinition"]], "hardwarespecs (class in qat.core)": [[53, "qat.core.HardwareSpecs"]], "intermediatemeasurement (class in qat.comm.shared.ttypes)": [[53, "qat.comm.shared.ttypes.IntermediateMeasurement"]], "job (class in qat.core)": [[53, "qat.core.Job"]], "junction (class in qat.plugins)": [[53, "qat.plugins.Junction"]], "observable (class in qat.core)": [[53, "qat.core.Observable"]], "optimizer (class in qat.plugins)": [[53, "qat.plugins.Optimizer"]], "processingtype (class in qat.comm.shared.ttypes)": [[53, "qat.comm.shared.ttypes.ProcessingType"]], "qpuhandler (class in qat.core.qpu)": [[53, "qat.core.qpu.QPUHandler"]], "remoteapplication (class in qat.core.application)": [[53, "qat.core.application.RemoteApplication"]], "remotebatchgenerator (class in qat.core.generator)": [[53, "qat.core.generator.RemoteBatchGenerator"]], "remoteplugin (class in qat.core.plugins)": [[53, "qat.core.plugins.RemotePlugin"]], "remoteqpu (class in qat.core.qpu)": [[53, "qat.core.qpu.RemoteQPU"]], "result (class in qat.core)": [[53, "qat.core.Result"]], "sample (class in qat.core.wrappers.result)": [[53, "qat.core.wrappers.result.Sample"]], "schedule (class in qat.core)": [[53, "qat.core.Schedule"]], "state (class in qat.core.wrappers.result)": [[53, "qat.core.wrappers.result.State"]], "symbol (class in qat.core.variables)": [[53, "qat.core.variables.Symbol"]], "term (class in qat.core)": [[53, "qat.core.Term"]], "topology (class in qat.core)": [[53, "qat.core.Topology"]], "topologytype (class in qat.core)": [[53, "qat.core.TopologyType"]], "variable (class in qat.core)": [[53, "qat.core.Variable"]], "add_edge() (qat.core.topology method)": [[53, "qat.core.Topology.add_edge"]], "add_sample() (qat.core.result method)": [[53, "qat.core.Result.add_sample"]], "add_signature() (qat.core.gate_set.gateset method)": [[53, "qat.core.gate_set.GateSet.add_signature"]], "amplitude (qat.core.wrappers.result.sample property)": [[53, "qat.core.wrappers.result.Sample.amplitude"]], "append() (qat.core.batchresult method)": [[53, "qat.core.BatchResult.append"]], "as_graph() (qat.core.hardwarespecs method)": [[53, "qat.core.HardwareSpecs.as_graph"]], "as_quameleon() (qat.core.hardwarespecs method)": [[53, "qat.core.HardwareSpecs.as_quameleon"]], "bind_variable() (qat.core.circuit method)": [[53, "qat.core.Circuit.bind_variable"]], "bind_variables() (qat.core.circuit method)": [[53, "qat.core.Circuit.bind_variables"]], "bitstring (qat.core.wrappers.result.state property)": [[53, "qat.core.wrappers.result.State.bitstring"]], "coeff (qat.core.term attribute)": [[53, "qat.core.Term.coeff"]], "compile() (qat.plugins.abstractplugin method)": [[53, "qat.plugins.AbstractPlugin.compile"]], "constant_coeff (qat.core.observable attribute)": [[53, "qat.core.Observable.constant_coeff"]], "count() (qat.core.circuit method)": [[53, "qat.core.Circuit.count"]], "dag() (qat.core.circuit method)": [[53, "qat.core.Circuit.dag"]], "default_gate_set() (in module qat.core.circuit_builder.matrix_util)": [[53, "qat.core.circuit_builder.matrix_util.default_gate_set"]], "differentiate() (qat.core.job method)": [[53, "qat.core.Job.differentiate"]], "differentiate() (qat.core.variable method)": [[53, "qat.core.Variable.differentiate"]], "differentiate() (qat.core.variables.arithexpression method)": [[53, "qat.core.variables.ArithExpression.differentiate"]], "display() (in module qat.core.console)": [[53, "qat.core.console.display"]], "display() (qat.core.circuit method)": [[53, "qat.core.Circuit.display"]], "do_post_processing() (qat.plugins.abstractplugin method)": [[53, "qat.plugins.AbstractPlugin.do_post_processing"]], "dump() (qat.core.batch method)": [[53, "qat.core.Batch.dump"]], "dump() (qat.core.batchresult method)": [[53, "qat.core.BatchResult.dump"]], "dump() (qat.core.circuit method)": [[53, "qat.core.Circuit.dump"]], "dump() (qat.core.hardwarespecs method)": [[53, "qat.core.HardwareSpecs.dump"]], "dump() (qat.core.job method)": [[53, "qat.core.Job.dump"]], "dump() (qat.core.result method)": [[53, "qat.core.Result.dump"]], "dump() (qat.core.schedule method)": [[53, "qat.core.Schedule.dump"]], "dump() (qat.core.topology method)": [[53, "qat.core.Topology.dump"]], "empty() (qat.core.circuit static method)": [[53, "qat.core.Circuit.empty"]], "evaluate() (in module qat.core.formula_eval)": [[53, "qat.core.formula_eval.evaluate"]], "evaluate() (qat.plugins.optimizer method)": [[53, "qat.plugins.Optimizer.evaluate"]], "execute() (qat.core.application.application method)": [[53, "qat.core.application.Application.execute"]], "execute() (qat.plugins.junction method)": [[53, "qat.plugins.Junction.execute"]], "extend() (qat.core.batchresult method)": [[53, "qat.core.BatchResult.extend"]], "fill_matrices() (qat.core.circuit method)": [[53, "qat.core.Circuit.fill_matrices"]], "from_bytes() (qat.core.batch class method)": [[53, "qat.core.Batch.from_bytes"]], "from_bytes() (qat.core.circuit class method)": [[53, "qat.core.Circuit.from_bytes"]], "from_bytes() (qat.core.job class method)": [[53, "qat.core.Job.from_bytes"]], "from_bytes() (qat.core.result class method)": [[53, "qat.core.Result.from_bytes"]], "from_bytes() (qat.core.topology class method)": [[53, "qat.core.Topology.from_bytes"]], "from_bytes() (qat.core.wrappers.result.sample class method)": [[53, "qat.core.wrappers.result.Sample.from_bytes"]], "from_nx() (qat.core.topology static method)": [[53, "qat.core.Topology.from_nx"]], "from_string() (qat.core.variables.arithexpression static method)": [[53, "qat.core.variables.ArithExpression.from_string"]], "from_thrift() (qat.core.batch class method)": [[53, "qat.core.Batch.from_thrift"]], "from_thrift() (qat.core.batchresult class method)": [[53, "qat.core.BatchResult.from_thrift"]], "from_thrift() (qat.core.circuit class method)": [[53, "qat.core.Circuit.from_thrift"]], "from_thrift() (qat.core.hardwarespecs class method)": [[53, "qat.core.HardwareSpecs.from_thrift"]], "from_thrift() (qat.core.job class method)": [[53, "qat.core.Job.from_thrift"]], "from_thrift() (qat.core.result class method)": [[53, "qat.core.Result.from_thrift"]], "from_thrift() (qat.core.topology class method)": [[53, "qat.core.Topology.from_thrift"]], "from_thrift() (qat.core.wrappers.result.sample class method)": [[53, "qat.core.wrappers.result.Sample.from_thrift"]], "gate_set (qat.core.circuit property)": [[53, "qat.core.Circuit.gate_set"]], "generate() (qat.core.generator.abstractgenerator method)": [[53, "qat.core.generator.AbstractGenerator.generate"]], "get_circuit() (qat.core.gate_set.gatesignature method)": [[53, "qat.core.gate_set.GateSignature.get_circuit"]], "get_matrix() (qat.core.gate_set.gatesignature method)": [[53, "qat.core.gate_set.GateSignature.get_matrix"]], "get_param_generator() (in module qat.core.circuit_builder.matrix_util)": [[53, "qat.core.circuit_builder.matrix_util.get_param_generator"]], "get_predef_generator() (in module qat.core.circuit_builder.matrix_util)": [[53, "qat.core.circuit_builder.matrix_util.get_predef_generator"]], "get_variables() (qat.core.batch method)": [[53, "qat.core.Batch.get_variables"]], "get_variables() (qat.core.circuit method)": [[53, "qat.core.Circuit.get_variables"]], "get_variables() (qat.core.job method)": [[53, "qat.core.Job.get_variables"]], "get_variables() (qat.core.schedule method)": [[53, "qat.core.Schedule.get_variables"]], "get_variables() (qat.core.variable method)": [[53, "qat.core.Variable.get_variables"]], "get_variables() (qat.core.variables.arithexpression method)": [[53, "qat.core.variables.ArithExpression.get_variables"]], "gradient() (qat.core.job method)": [[53, "qat.core.Job.gradient"]], "insert_gate() (qat.core.circuit method)": [[53, "qat.core.Circuit.insert_gate"]], "int (qat.core.wrappers.result.state property)": [[53, "qat.core.wrappers.result.State.int"]], "ising (qat.core.observable attribute)": [[53, "qat.core.Observable.ising"]], "iterate_simple() (qat.core.circuit method)": [[53, "qat.core.Circuit.iterate_simple"]], "load() (qat.core.batch static method)": [[53, "qat.core.Batch.load"]], "load() (qat.core.batchresult static method)": [[53, "qat.core.BatchResult.load"]], "load() (qat.core.circuit class method)": [[53, "qat.core.Circuit.load"]], "load() (qat.core.hardwarespecs static method)": [[53, "qat.core.HardwareSpecs.load"]], "load() (qat.core.job class method)": [[53, "qat.core.Job.load"]], "load() (qat.core.result static method)": [[53, "qat.core.Result.load"]], "load() (qat.core.schedule class method)": [[53, "qat.core.Schedule.load"]], "load() (qat.core.topology static method)": [[53, "qat.core.Topology.load"]], "lsb_int (qat.core.wrappers.result.state property)": [[53, "qat.core.wrappers.result.State.lsb_int"]], "nbqbits (qat.core.hardwarespecs property)": [[53, "qat.core.HardwareSpecs.nbqbits"]], "nbqbits (qat.core.observable attribute)": [[53, "qat.core.Observable.nbqbits"]], "nbqbits (qat.core.topology property)": [[53, "qat.core.Topology.nbqbits"]], "op (qat.core.term attribute)": [[53, "qat.core.Term.op"]], "optimize() (qat.plugins.optimizer method)": [[53, "qat.plugins.Optimizer.optimize"]], "parameter_map (qat.core.job property)": [[53, "qat.core.Job.parameter_map"]], "parameter_map (qat.core.result property)": [[53, "qat.core.Result.parameter_map"]], "plot_in_notebook() (in module qat.core.printer)": [[53, "qat.core.printer.plot_in_notebook"]], "pretty_print() (qat.core.variables.arithexpression method)": [[53, "qat.core.variables.ArithExpression.pretty_print"]], "psi_0 (qat.core.job property)": [[53, "qat.core.Job.psi_0"]], "qat.core": [[53, "module-qat.core"]], "qat.core.wrappers.observable": [[53, "module-qat.core.wrappers.observable"]], "qbits (qat.core.term attribute)": [[53, "qat.core.Term.qbits"]], "remove_locks() (qat.core.circuit method)": [[53, "qat.core.Circuit.remove_locks"]], "run() (qat.plugins.junction method)": [[53, "qat.plugins.Junction.run"]], "serve() (qat.core.application.application method)": [[53, "qat.core.application.Application.serve"]], "serve() (qat.core.generator.abstractgenerator method)": [[53, "qat.core.generator.AbstractGenerator.serve"]], "serve() (qat.core.qpu.qpuhandler method)": [[53, "qat.core.qpu.QPUHandler.serve"]], "serve() (qat.plugins.abstractplugin method)": [[53, "qat.plugins.AbstractPlugin.serve"]], "set_circuit_generator() (qat.core.gate_set.gatesignature method)": [[53, "qat.core.gate_set.GateSignature.set_circuit_generator"]], "set_matrix_generator() (qat.core.gate_set.gatesignature method)": [[53, "qat.core.gate_set.GateSignature.set_matrix_generator"]], "set_nbqbits() (qat.core.topology method)": [[53, "qat.core.Topology.set_nbqbits"]], "set_qreg() (qat.core.wrappers.result.sample method)": [[53, "qat.core.wrappers.result.Sample.set_qreg"]], "shift_qbits() (qat.core.circuit method)": [[53, "qat.core.Circuit.shift_qbits"]], "shift_qbits() (qat.core.job method)": [[53, "qat.core.Job.shift_qbits"]], "state (qat.core.wrappers.result.sample property)": [[53, "qat.core.wrappers.result.Sample.state"]], "statistics() (qat.core.circuit method)": [[53, "qat.core.Circuit.statistics"]], "submit() (qat.core.qpu.qpuhandler method)": [[53, "qat.core.qpu.QPUHandler.submit"]], "submit_job() (qat.core.qpu.qpuhandler method)": [[53, "qat.core.qpu.QPUHandler.submit_job"]], "terms (qat.core.observable attribute)": [[53, "qat.core.Observable.terms"]], "to_job() (qat.core.circuit method)": [[53, "qat.core.Circuit.to_job"]], "to_job() (qat.core.schedule method)": [[53, "qat.core.Schedule.to_job"]], "to_nx() (qat.core.topology method)": [[53, "qat.core.Topology.to_nx"]], "to_thrift() (qat.core.batch method)": [[53, "qat.core.Batch.to_thrift"]], "to_thrift() (qat.core.job method)": [[53, "qat.core.Job.to_thrift"]], "to_thrift() (qat.core.variable method)": [[53, "qat.core.Variable.to_thrift"]], "to_thrift() (qat.core.variables.arithexpression method)": [[53, "qat.core.variables.ArithExpression.to_thrift"]], "union() (qat.core.gate_set.gateset method)": [[53, "qat.core.gate_set.GateSet.union"]], "value (qat.core.result property)": [[53, "qat.core.Result.value"]], "value (qat.core.wrappers.result.state property)": [[53, "qat.core.wrappers.result.State.value"]], "values (qat.core.result property)": [[53, "qat.core.Result.values"]], "wrap_samples() (qat.core.result method)": [[53, "qat.core.Result.wrap_samples"]], "wrapper_post_process() (qat.plugins.abstractplugin method)": [[53, "qat.plugins.AbstractPlugin.wrapper_post_process"]], "alltoall (class in qat.devices)": [[54, "qat.devices.AllToAll"]], "griddevice (class in qat.devices)": [[54, "qat.devices.GridDevice"]], "linedevice (class in qat.devices)": [[54, "qat.devices.LineDevice"]], "squaregriddevice (class in qat.devices)": [[54, "qat.devices.SquareGridDevice"]], "qat.devices": [[54, "module-qat.devices"]], "qat.fermion": [[55, "module-qat.fermion"]], "electronicstructurehamiltonian (class in qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian"]], "fermionhamiltonian (class in qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian"]], "molecularhamiltonian (class in qat.fermion.chemistry.wrapper)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian"]], "moleculeinfo (class in qat.fermion.chemistry.wrapper)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo"]], "spinhamiltonian (class in qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian"]], "apply_quantum_subspace_expansion() (in module qat.fermion.chemistry.qse)": [[60, "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion"]], "compute_active_space_integrals() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.compute_active_space_integrals"]], "constant_coeff (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.constant_coeff"]], "construct_ucc_ansatz() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.construct_ucc_ansatz"]], "convert_to_h_integrals() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.convert_to_h_integrals"]], "copy() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.spinhamiltonian method)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.copy"]], "dag() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.spinhamiltonian method)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.dag"]], "get_cluster_ops() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.get_cluster_ops"]], "get_electronic_hamiltonian() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.get_electronic_hamiltonian"]], "get_hf_ket() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.get_hf_ket"]], "get_matrix() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.spinhamiltonian method)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.get_matrix"]], "guess_init_params() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.guess_init_params"]], "hamiltonian (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.hamiltonian"]], "hpq (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpq"]], "hpqrs (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpqrs"]], "make_anderson_model() (in module qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.make_anderson_model"]], "make_compressed_ldca_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_compressed_ldca_circ"]], "make_embedded_model() (in module qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.make_embedded_model"]], "make_general_hwe_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_general_hwe_circ"]], "make_hubbard_model() (in module qat.fermion.hamiltonians)": [[60, "qat.fermion.hamiltonians.make_hubbard_model"]], "make_ldca_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_ldca_circ"]], "make_mr_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_mr_circ"]], "make_mrep_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_mrep_circ"]], "make_shallow_circ() (in module qat.fermion.circuits)": [[60, "qat.fermion.circuits.make_shallow_circ"]], "make_trotterisation_routine() (in module qat.fermion.trotterisation)": [[60, "qat.fermion.trotterisation.make_trotterisation_routine"]], "matrix (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.matrix"]], "matrix (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.matrix"]], "n_electrons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.n_electrons"]], "nbqbits (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.nbqbits"]], "nbqbits (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.nbqbits"]], "noons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.noons"]], "normal_order (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.normal_order"]], "nqbits (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.nqbits"]], "nqbits (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.nqbits"]], "one_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.one_body_integrals"]], "one_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.one_body_integrals"]], "orbital_energies (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.orbital_energies"]], "perform_phase_estimation() (in module qat.fermion.phase_estimation)": [[60, "qat.fermion.phase_estimation.perform_phase_estimation"]], "perform_pyscf_computation() (in module qat.fermion.chemistry.pyscf_tools)": [[60, "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation"]], "restrict_active_space() (qat.fermion.chemistry.wrapper.moleculeinfo method)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.restrict_active_space"]], "select_active_orbitals() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.select_active_orbitals"]], "select_active_space() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.select_active_space"]], "terms (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.terms"]], "terms (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[60, "qat.fermion.hamiltonians.SpinHamiltonian.terms"]], "to_electronic() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.to_electronic"]], "to_fermion() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_fermion"]], "to_spin() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[60, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_spin"]], "to_spin() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[60, "qat.fermion.hamiltonians.FermionHamiltonian.to_spin"]], "transform_basis() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.transform_basis"]], "transform_integrals_to_new_basis() (in module qat.fermion.chemistry.ucc)": [[60, "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis"]], "transform_to_bk_basis() (in module qat.fermion.transforms)": [[60, "qat.fermion.transforms.transform_to_bk_basis"]], "transform_to_jw_basis() (in module qat.fermion.transforms)": [[60, "qat.fermion.transforms.transform_to_jw_basis"]], "transform_to_parity_basis() (in module qat.fermion.transforms)": [[60, "qat.fermion.transforms.transform_to_parity_basis"]], "two_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[60, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.two_body_integrals"]], "two_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[60, "qat.fermion.chemistry.wrapper.MoleculeInfo.two_body_integrals"]], "abstractgate (class in qat.lang.aqasm.gates)": [[61, "qat.lang.AQASM.gates.AbstractGate"]], "boolformula (class in qat.lang.aqasm.bits)": [[61, "qat.lang.AQASM.bits.BoolFormula"]], "cregister (class in qat.lang.aqasm.bits)": [[61, "qat.lang.AQASM.bits.CRegister"]], "cbit (class in qat.lang.aqasm.bits)": [[61, "qat.lang.AQASM.bits.Cbit"]], "gate (class in qat.lang.aqasm.gates)": [[61, "qat.lang.AQASM.gates.Gate"]], "linker (class in qat.lang.linking.linker)": [[61, "qat.lang.linking.linker.Linker"]], "paramgate (class in qat.lang.aqasm.gates)": [[61, "qat.lang.AQASM.gates.ParamGate"]], "program (class in qat.lang.aqasm)": [[61, "qat.lang.AQASM.Program"]], "qarithexp (class in qat.lang.aqasm.qint)": [[61, "qat.lang.AQASM.qint.QArithExp"]], "qbool (class in qat.lang.aqasm.qbool)": [[61, "qat.lang.AQASM.qbool.QBool"]], "qboolarray (class in qat.lang.aqasm.qbool)": [[61, "qat.lang.AQASM.qbool.QBoolArray"]], "qclause (class in qat.lang.aqasm.qbool)": [[61, "qat.lang.AQASM.qbool.QClause"]], "qcompexp (class in qat.lang.aqasm.qint)": [[61, "qat.lang.AQASM.qint.QCompExp"]], "qint (class in qat.lang.aqasm.qint)": [[61, "qat.lang.AQASM.qint.QInt"]], "qregister (class in qat.lang.aqasm.bits)": [[61, "qat.lang.AQASM.bits.QRegister"]], "qroutine (class in qat.lang.aqasm.routines)": [[61, "qat.lang.AQASM.routines.QRoutine"]], "qbit (class in qat.lang.aqasm.bits)": [[61, "qat.lang.AQASM.bits.Qbit"]], "variablenamenotavailable (class in qat.core.circuit_builder.builder)": [[61, "qat.core.circuit_builder.builder.VariableNameNotAvailable"]], "add_signature() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.add_signature"]], "amplification_step() (in module qat.lang.algorithms)": [[61, "qat.lang.algorithms.amplification_step"]], "apply() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.apply"]], "apply() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.apply"]], "build_gate (class in qat.lang.aqasm.misc)": [[61, "qat.lang.AQASM.misc.build_gate"]], "calloc() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.calloc"]], "cast() (qat.lang.aqasm.qbool.qbool method)": [[61, "qat.lang.AQASM.qbool.QBool.cast"]], "cast() (qat.lang.aqasm.qbool.qboolarray method)": [[61, "qat.lang.AQASM.qbool.QBoolArray.cast"]], "cast() (qat.lang.aqasm.qint.qint method)": [[61, "qat.lang.AQASM.qint.QInt.cast"]], "cast_to() (qat.lang.aqasm.qbool.qbool method)": [[61, "qat.lang.AQASM.qbool.QBool.cast_to"]], "cbits_list() (qat.lang.aqasm.bits.boolformula method)": [[61, "qat.lang.AQASM.bits.BoolFormula.cbits_list"]], "cbreak() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.cbreak"]], "cc_apply() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.cc_apply"]], "clear_gate_set() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.clear_gate_set"]], "comment() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.comment"]], "compile() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.compile"]], "compute() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.compute"]], "conj() (qat.lang.aqasm.gates.gate method)": [[61, "qat.lang.AQASM.gates.Gate.conj"]], "conjugate() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.conjugate"]], "ctrl() (qat.lang.aqasm.gates.gate method)": [[61, "qat.lang.AQASM.gates.Gate.ctrl"]], "dag() (qat.lang.aqasm.gates.gate method)": [[61, "qat.lang.AQASM.gates.Gate.dag"]], "dag() (qat.lang.aqasm.gates.paramgate method)": [[61, "qat.lang.AQASM.gates.ParamGate.dag"]], "display() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.display"]], "display() (qat.lang.aqasm.gates.paramgate method)": [[61, "qat.lang.AQASM.gates.ParamGate.display"]], "evaluate() (qat.lang.aqasm.qbool.qbool method)": [[61, "qat.lang.AQASM.qbool.QBool.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qboolarray method)": [[61, "qat.lang.AQASM.qbool.QBoolArray.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qclause method)": [[61, "qat.lang.AQASM.qbool.QClause.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qarithexp method)": [[61, "qat.lang.AQASM.qint.QArithExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qcompexp method)": [[61, "qat.lang.AQASM.qint.QCompExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qint method)": [[61, "qat.lang.AQASM.qint.QInt.evaluate"]], "export() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.export"]], "free_ancillae() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.free_ancillae"]], "free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.free_ancillae"]], "generate_gate_set() (in module qat.lang.aqasm.misc)": [[61, "qat.lang.AQASM.misc.generate_gate_set"]], "get_free_ancillae() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.get_free_ancillae"]], "get_free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.get_free_ancillae"]], "grover_diffusion() (in module qat.lang.algorithms.amplification)": [[61, "qat.lang.algorithms.amplification.grover_diffusion"]], "householder() (in module qat.lang.algorithms.amplification)": [[61, "qat.lang.algorithms.amplification.householder"]], "link() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.link"]], "link_gates() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.link_gates"]], "link_matrices() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.link_matrices"]], "logic() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.logic"]], "measure() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.measure"]], "new_var() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.new_var"]], "new_wires() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.new_wires"]], "phase() (qat.lang.aqasm.qbool.qbool method)": [[61, "qat.lang.AQASM.qbool.QBool.phase"]], "phase() (qat.lang.aqasm.qbool.qclause method)": [[61, "qat.lang.AQASM.qbool.QClause.phase"]], "phase() (qat.lang.aqasm.qint.qcompexp method)": [[61, "qat.lang.AQASM.qint.QCompExp.phase"]], "phase_estimation() (in module qat.lang.algorithms)": [[61, "qat.lang.algorithms.phase_estimation"]], "qalloc() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.qalloc"]], "qat.lang": [[61, "module-qat.lang"]], "qat.lang.aqasm.misc": [[61, "module-qat.lang.AQASM.misc"]], "qat.lang.aqasm.util": [[61, "module-qat.lang.AQASM.util"]], "qbits_list() (qat.lang.aqasm.qbool.qbool method)": [[61, "qat.lang.AQASM.qbool.QBool.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qboolarray method)": [[61, "qat.lang.AQASM.qbool.QBoolArray.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qclause method)": [[61, "qat.lang.AQASM.qbool.QClause.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qcompexp method)": [[61, "qat.lang.AQASM.qint.QCompExp.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qint method)": [[61, "qat.lang.AQASM.qint.QInt.qbits_list"]], "quantum_counting() (in module qat.lang.algorithms)": [[61, "qat.lang.algorithms.quantum_counting"]], "reset() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.reset"]], "set_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.set_ancillae"]], "set_dag() (qat.lang.aqasm.gates.abstractgate method)": [[61, "qat.lang.AQASM.gates.AbstractGate.set_dag"]], "set_gate_set() (qat.lang.linking.linker.linker method)": [[61, "qat.lang.linking.linker.Linker.set_gate_set"]], "set_value() (qat.lang.aqasm.qint.qint method)": [[61, "qat.lang.AQASM.qint.QInt.set_value"]], "suppr_ctrl() (in module qat.lang.aqasm.util)": [[61, "qat.lang.AQASM.util.suppr_ctrl"]], "to_circ() (qat.lang.aqasm.program method)": [[61, "qat.lang.AQASM.Program.to_circ"]], "to_thrift() (qat.lang.aqasm.bits.boolformula method)": [[61, "qat.lang.AQASM.bits.BoolFormula.to_thrift"]], "toffoli_fold() (in module qat.lang.aqasm.util)": [[61, "qat.lang.AQASM.util.toffoli_fold"]], "trans() (qat.lang.aqasm.gates.gate method)": [[61, "qat.lang.AQASM.gates.Gate.trans"]], "uncompute() (qat.lang.aqasm.routines.qroutine method)": [[61, "qat.lang.AQASM.routines.QRoutine.uncompute"]], "uniform_distribution() (in module qat.lang.algorithms.amplification)": [[61, "qat.lang.algorithms.amplification.uniform_distribution"]], "qft() (in module qat.lang.aqasm.qftarith)": [[62, "qat.lang.AQASM.qftarith.QFT"]], "add() (in module qat.lang.aqasm.classarith)": [[62, "qat.lang.AQASM.classarith.add"]], "add() (in module qat.lang.aqasm.qftarith)": [[62, "qat.lang.AQASM.qftarith.add"]], "add_const() (in module qat.lang.aqasm.classarith)": [[62, "qat.lang.AQASM.classarith.add_const"]], "add_const() (in module qat.lang.aqasm.qftarith)": [[62, "qat.lang.AQASM.qftarith.add_const"]], "add_const_mod() (in module qat.lang.aqasm.arithmetic)": [[62, "qat.lang.AQASM.arithmetic.add_const_mod"]], "add_mod() (in module qat.lang.aqasm.arithmetic)": [[62, "qat.lang.AQASM.arithmetic.add_mod"]], "cuccaro_add() (in module qat.lang.aqasm.classarith)": [[62, "qat.lang.AQASM.classarith.cuccaro_add"]], "modular_exp() (in module qat.lang.aqasm.arithmetic)": [[62, "qat.lang.AQASM.arithmetic.modular_exp"]], "mult() (in module qat.lang.aqasm.qftarith)": [[62, "qat.lang.AQASM.qftarith.mult"]], "mult_const() (in module qat.lang.aqasm.arithmetic)": [[62, "qat.lang.AQASM.arithmetic.mult_const"]], "mult_const() (in module qat.lang.aqasm.qftarith)": [[62, "qat.lang.AQASM.qftarith.mult_const"]], "mult_const_mod() (in module qat.lang.aqasm.arithmetic)": [[62, "qat.lang.AQASM.arithmetic.mult_const_mod"]], "qat.lang.aqasm": [[62, "module-qat.lang.AQASM"]], "qat.lang.aqasm.arithmetic": [[62, "module-qat.lang.AQASM.arithmetic"]], "qat.lang.aqasm.classarith": [[62, "module-qat.lang.AQASM.classarith"]], "qat.lang.aqasm.qftarith": [[62, "module-qat.lang.AQASM.qftarith"]], "kptree (class in qat.lang.models)": [[63, "qat.lang.models.KPTree"]], "get_routine() (qat.lang.models.kptree method)": [[63, "qat.lang.models.KPTree.get_routine"]], "ansatzfactory (class in qat.vsolve.ansatz)": [[64, "qat.vsolve.ansatz.AnsatzFactory"]], "bilp (class in qat.opt.binary_linear_integer_programming)": [[64, "qat.opt.binary_linear_integer_programming.BILP"]], "circuitgenerator (class in qat.opt.circuit_generator)": [[64, "qat.opt.circuit_generator.CircuitGenerator"]], "clause (class in qat.opt.boolexpr)": [[64, "qat.opt.boolexpr.Clause"]], "combinatorialproblem (class in qat.opt)": [[64, "qat.opt.CombinatorialProblem"]], "graphcolouring (class in qat.opt.graph_colouring)": [[64, "qat.opt.graph_colouring.GraphColouring"]], "graphpartitioning (class in qat.opt.graph_partitioning)": [[64, "qat.opt.graph_partitioning.GraphPartitioning"]], "independentannealing (class in qat.opt.mixing_factory)": [[64, "qat.opt.mixing_factory.IndependentAnnealing"]], "initialstatebuilder (class in qat.opt.mixing_factory)": [[64, "qat.opt.mixing_factory.InitialStateBuilder"]], "ising (class in qat.opt)": [[64, "qat.opt.Ising"]], "kclique (class in qat.opt.k_clique)": [[64, "qat.opt.k_clique.KClique"]], "maxcut (class in qat.opt.max_cut)": [[64, "qat.opt.max_cut.MaxCut"]], "mixingfactory (class in qat.opt)": [[64, "qat.opt.MixingFactory"]], "numberpartitioning (class in qat.opt.number_partitioning)": [[64, "qat.opt.number_partitioning.NumberPartitioning"]], "qubo (class in qat.opt)": [[64, "qat.opt.QUBO"]], "schedulegenerator (class in qat.opt.schedule_generator)": [[64, "qat.opt.schedule_generator.ScheduleGenerator"]], "simpleinitialstate (class in qat.opt.mixing_factory)": [[64, "qat.opt.mixing_factory.SimpleInitialState"]], "var (class in qat.opt.boolexpr)": [[64, "qat.opt.boolexpr.Var"]], "vertexcover (class in qat.opt.vertex_cover)": [[64, "qat.opt.vertex_cover.VertexCover"]], "add_clause() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.add_clause"]], "annealing_job() (qat.opt.schedule_generator.schedulegenerator method)": [[64, "qat.opt.schedule_generator.ScheduleGenerator.annealing_job"]], "bit_flip() (qat.opt.mixingfactory static method)": [[64, "qat.opt.MixingFactory.bit_flip"]], "bit_move() (qat.opt.mixingfactory static method)": [[64, "qat.opt.MixingFactory.bit_move"]], "evaluate() (qat.opt.boolexpr.var method)": [[64, "qat.opt.boolexpr.Var.evaluate"]], "get_best_parameters() (qat.opt.ising method)": [[64, "qat.opt.Ising.get_best_parameters"]], "get_best_parameters() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.get_best_parameters"]], "get_best_parameters() (qat.opt.binary_linear_integer_programming.bilp method)": [[64, "qat.opt.binary_linear_integer_programming.BILP.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_colouring.graphcolouring method)": [[64, "qat.opt.graph_colouring.GraphColouring.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_partitioning.graphpartitioning method)": [[64, "qat.opt.graph_partitioning.GraphPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.k_clique.kclique method)": [[64, "qat.opt.k_clique.KClique.get_best_parameters"]], "get_best_parameters() (qat.opt.max_cut.maxcut method)": [[64, "qat.opt.max_cut.MaxCut.get_best_parameters"]], "get_best_parameters() (qat.opt.number_partitioning.numberpartitioning method)": [[64, "qat.opt.number_partitioning.NumberPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.vertex_cover.vertexcover method)": [[64, "qat.opt.vertex_cover.VertexCover.get_best_parameters"]], "get_j_h_and_offset() (qat.opt.ising method)": [[64, "qat.opt.Ising.get_j_h_and_offset"]], "get_observable() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.get_observable"]], "get_observable() (qat.opt.ising method)": [[64, "qat.opt.Ising.get_observable"]], "get_observable() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.get_observable"]], "get_observable() (qat.opt.boolexpr.clause method)": [[64, "qat.opt.boolexpr.Clause.get_observable"]], "get_observable() (qat.opt.boolexpr.var method)": [[64, "qat.opt.boolexpr.Var.get_observable"]], "get_q_and_offset() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.get_q_and_offset"]], "get_variables() (qat.opt.boolexpr.var method)": [[64, "qat.opt.boolexpr.Var.get_variables"]], "index (qat.opt.boolexpr.var attribute)": [[64, "qat.opt.boolexpr.Var.index"]], "inject_initial_state() (qat.opt.mixing_factory.independentannealing method)": [[64, "qat.opt.mixing_factory.IndependentAnnealing.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.initialstatebuilder method)": [[64, "qat.opt.mixing_factory.InitialStateBuilder.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.simpleinitialstate method)": [[64, "qat.opt.mixing_factory.SimpleInitialState.inject_initial_state"]], "new_var() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.new_var"]], "new_vars() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.new_vars"]], "parse_result() (qat.opt.graph_colouring.graphcolouring method)": [[64, "qat.opt.graph_colouring.GraphColouring.parse_result"]], "parse_result() (qat.opt.graph_partitioning.graphpartitioning method)": [[64, "qat.opt.graph_partitioning.GraphPartitioning.parse_result"]], "parse_result() (qat.opt.k_clique.kclique method)": [[64, "qat.opt.k_clique.KClique.parse_result"]], "parse_result() (qat.opt.max_cut.maxcut method)": [[64, "qat.opt.max_cut.MaxCut.parse_result"]], "parse_result() (qat.opt.vertex_cover.vertexcover method)": [[64, "qat.opt.vertex_cover.VertexCover.parse_result"]], "produce_j_h_and_offset() (in module qat.opt.graph_partitioning)": [[64, "qat.opt.graph_partitioning.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.max_cut)": [[64, "qat.opt.max_cut.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.number_partitioning)": [[64, "qat.opt.number_partitioning.produce_j_h_and_offset"]], "produce_q_and_offset() (in module qat.opt.binary_linear_integer_programming)": [[64, "qat.opt.binary_linear_integer_programming.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.graph_colouring)": [[64, "qat.opt.graph_colouring.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.k_clique)": [[64, "qat.opt.k_clique.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.vertex_cover)": [[64, "qat.opt.vertex_cover.produce_q_and_offset"]], "qaoa_ansatz() (qat.opt.circuit_generator.circuitgenerator method)": [[64, "qat.opt.circuit_generator.CircuitGenerator.qaoa_ansatz"]], "qaoa_circuit() (qat.vsolve.ansatz.ansatzfactory static method)": [[64, "qat.vsolve.ansatz.AnsatzFactory.qaoa_circuit"]], "to_combinatorial_problem() (qat.opt.ising method)": [[64, "qat.opt.Ising.to_combinatorial_problem"]], "to_combinatorial_problem() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.to_combinatorial_problem"]], "to_ising() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.to_ising"]], "to_ising() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.to_ising"]], "to_job() (qat.opt.ising method)": [[64, "qat.opt.Ising.to_job"]], "to_job() (qat.opt.qubo method)": [[64, "qat.opt.QUBO.to_job"]], "to_qubo() (qat.opt.combinatorialproblem method)": [[64, "qat.opt.CombinatorialProblem.to_qubo"]], "to_qubo() (qat.opt.ising method)": [[64, "qat.opt.Ising.to_qubo"]], "quameleonplugin (class in qat.core.quameleon)": [[65, "qat.core.quameleon.QuameleonPlugin"]], "qat.core.quameleon": [[65, "module-qat.core.quameleon"]], "remap (class in qat.plugins)": [[66, "qat.plugins.Remap"]], "qat": [[69, "module-qat"]], "psominimizeplugin (class in qat.plugins)": [[70, "qat.plugins.PSOMinimizePlugin"]], "spsaminimizeplugin (class in qat.plugins)": [[70, "qat.plugins.SPSAMinimizePlugin"]], "scipyminimizeplugin (class in qat.plugins)": [[70, "qat.plugins.ScipyMinimizePlugin"]], "seqoptim (class in qat.plugins)": [[70, "qat.plugins.SeqOptim"]], "set_options() (qat.plugins.scipyminimizeplugin method)": [[70, "qat.plugins.ScipyMinimizePlugin.set_options"]], "vertexcovergenerator (class in qat.opt.generators)": [[71, "qat.opt.generators.VertexCoverGenerator"]], "generate() (qat.opt.generators.vertexcovergenerator method)": [[71, "qat.opt.generators.VertexCoverGenerator.generate"]]}})
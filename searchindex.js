Search.setIndex({"docnames": ["advanced_combinatorial_optimization", "advanced_programming", "aqasm", "batch_generators", "circuit", "circuit-inliner", "combinatorial_optimization_generators_utils", "combinatorial_optimization_intro", "combinatorial_optimization_intro_qa", "combinatorial_optimization_intro_qaoa", "combinatorial_optimization_intro_sa", "combinatorial_optimization_intro_sqa", "commands", "cost_function_plugin", "display-plugin", "getting_started", "graph_colouring_generator", "graph_partitioning_generator", "index", "introduction", "kclique_generator", "manipulating", "max_cut_generator", "myqlm_specific/cirq", "myqlm_specific/compatibility_matrix", "myqlm_specific/contrib", "myqlm_specific/install", "myqlm_specific/interoperability", "myqlm_specific/license", "myqlm_specific/notebooks", "myqlm_specific/openqasm", "myqlm_specific/projectq", "myqlm_specific/pyquil", "myqlm_specific/qat-clinalg", "myqlm_specific/qat-pylinalg", "myqlm_specific/qat-simulated_annealing", "myqlm_specific/qiskit", "myqlm_specific/release-note", "myqlm_specific/release-notes/1.4.0", "myqlm_specific/release-notes/1.5.1", "myqlm_specific/release-notes/1.6.0", "myqlm_specific/release-notes/1.7.1", "myqlm_specific/support", "notebooks", "observable-splitter", "plugin_adaptvqe", "plugin_gradient_descent", "plugin_multiplelaunches", "plugin_seqoptim", "plugin_zeronoise", "programming", "qat-core", "qat-devices", "qat-fermion", "qat-fermion_advanced", "qat-fermion_basic", "qat-fermion_compatibility_guide", "qat-fermion_plugins", "qat-fermion_source", "qat-lang", "qat-lang-arith", "qat-lang-other", "qat-opt", "quameleon", "remap-plugin", "running_variational", "simulating", "source_doc", "variational-plugin", "vertex_cover_generator"], "filenames": ["advanced_combinatorial_optimization.rst", "advanced_programming.rst", "aqasm.rst", "batch_generators.rst", "circuit.rst", "circuit-inliner.rst", "combinatorial_optimization_generators_utils.rst", "combinatorial_optimization_intro.rst", "combinatorial_optimization_intro_qa.rst", "combinatorial_optimization_intro_qaoa.rst", "combinatorial_optimization_intro_sa.rst", "combinatorial_optimization_intro_sqa.rst", "commands.rst", "cost_function_plugin.rst", "display-plugin.rst", "getting_started.rst", "graph_colouring_generator.rst", "graph_partitioning_generator.rst", "index.rst", "introduction.rst", "kclique_generator.rst", "manipulating.rst", "max_cut_generator.rst", "myqlm_specific/cirq.rst", "myqlm_specific/compatibility_matrix.rst", "myqlm_specific/contrib.rst", "myqlm_specific/install.rst", "myqlm_specific/interoperability.rst", "myqlm_specific/license.rst", "myqlm_specific/notebooks.rst", "myqlm_specific/openqasm.rst", "myqlm_specific/projectq.rst", "myqlm_specific/pyquil.rst", "myqlm_specific/qat-clinalg.rst", "myqlm_specific/qat-pylinalg.rst", "myqlm_specific/qat-simulated_annealing.rst", "myqlm_specific/qiskit.rst", "myqlm_specific/release-note.rst", "myqlm_specific/release-notes/1.4.0.rst", "myqlm_specific/release-notes/1.5.1.rst", "myqlm_specific/release-notes/1.6.0.rst", "myqlm_specific/release-notes/1.7.1.rst", "myqlm_specific/support.rst", "notebooks.rst", "observable-splitter.rst", "plugin_adaptvqe.rst", "plugin_gradient_descent.rst", "plugin_multiplelaunches.rst", "plugin_seqoptim.rst", "plugin_zeronoise.rst", "programming.rst", "qat-core.rst", "qat-devices.rst", "qat-fermion.rst", "qat-fermion_advanced.rst", "qat-fermion_basic.rst", "qat-fermion_compatibility_guide.rst", "qat-fermion_plugins.rst", "qat-fermion_source.rst", "qat-lang.rst", "qat-lang-arith.rst", "qat-lang-other.rst", "qat-opt.rst", "quameleon.rst", "remap-plugin.rst", "running_variational.rst", "simulating.rst", "source_doc.rst", "variational-plugin.rst", "vertex_cover_generator.rst"], "titles": ["Advanced combinatorial optimization", "Advanced programming using pyAQASM", "The AQASM format", "Building advanced computation stacks", "The high-level wrapper", "CircuitInliner : inlining circuit inside a stack", "Combinatorial Optimization Generators tools", "Combinatorial optimization", "Quantum Annealing (QA)", "Quantum Approximate Optimization Algorithm (QAOA)", "Simulated annealing (SA)", "Simulated Quantum Annealing (SQA)", "Command-line tools", "CostFunctionPlugin: variational optimization without observable", "Display : a console displayer plugin", "Getting started", "Graph Colouring Generator", "Graph Partitioning Generator", "Quantum Application Toolset", "Main objects: Jobs, Observables, Circuits\u2026", "KClique Generator", "Building custom execution stacks", "Max Cut Generator", "Cirq interoperability", "&lt;no title&gt;", "Contributing to myQLM", "Installing myQLM", "Interoperability with myQLM", "myQLM license", "Notebooks", "OpenQASM Compiler", "ProjectQ interoperability", "PyQuil interoperability", "qat.clinalg: C++ Linear-algebra simulator", "qat.pylinalg: Python Linear-algebra simulator", "qat.simulated_annealing: Simulated Annealing", "Qiskit interoperability", "Release notes", "myQLM Power Access", "New features", "New features", "A new simulated QPU in myQLM", "Support", "List of notebooks", "ObservableSplitter : turning observable sampling into qubit sampling", "ADAPT-VQE: building iteratively efficient ansatze", "GradientDescentOptimizer: Natural gradient descent optimizer", "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one", "SeqOptim: optimizing circuits with the sequential optimization algorithm", "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation", "Writing quantum circuits", "qat-core: Core data structures and Abstract classes", "qat.devices: The device library", "Digital quantum simulation for spin and fermionic systems", "Advanced usage", "Basic usage", "Changelog", "Plugins", "Digital quantum simulation for spin and fermionic systems", "qat.lang : Programming tools", "Arithmetic routines", "State preparation and QRAM circuits", "qat-opt: representation and encoding of combinatorial problems, QAOA", "QuameleonPlugin : emulating hardware constraints via a plugin", "Remap: unused qubits remover", "Running variational algorithms", "Executing quantum circuits", "Source code documentation", "Plugins for variational algorithms", "Vertex Cover Generator"], "terms": {"among": [0, 7, 37, 41, 46, 51, 53, 62], "all": [0, 1, 3, 4, 5, 14, 15, 19, 21, 22, 23, 26, 28, 29, 31, 33, 37, 38, 43, 44, 48, 50, 51, 52, 55, 58, 59, 60, 61, 62, 63, 64, 67, 68], "ones": [0, 7, 58], "highest": [0, 36], "practic": [0, 1, 7, 8, 9, 10, 15, 34, 62, 66], "import": [0, 1, 2, 3, 4, 7, 8, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 30, 31, 32, 33, 36, 37, 38, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "repeat": [0, 15, 21, 60, 66], "appear": [0, 19, 28, 51, 59, 66], "ar": [0, 1, 2, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 41, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "machin": [0, 7, 11, 26, 28, 37, 38, 55], "have": [0, 1, 3, 4, 7, 8, 9, 10, 12, 13, 14, 15, 19, 21, 25, 26, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 48, 51, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 68], "been": [0, 3, 7, 10, 13, 21, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 56, 57, 59, 62, 66], "dedic": [0, 15, 28, 51, 65], "tackl": [0, 7], "when": [0, 1, 7, 8, 10, 19, 21, 23, 34, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 54, 55, 57, 58, 59, 60, 62, 65, 68], "repres": [0, 1, 4, 7, 11, 19, 28, 34, 35, 51, 57, 58, 59, 61, 62], "an": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "Ising": [0, 7, 9, 10, 11, 35, 37, 38, 51], "qubo": [0, 7, 9, 11, 35, 37, 38], "form": [0, 1, 4, 6, 7, 19, 21, 28, 34, 35, 48, 49, 57, 58, 59, 62, 68, 69], "see": [0, 2, 3, 4, 7, 9, 15, 19, 21, 28, 34, 35, 37, 38, 44, 50, 51, 54, 55, 57, 58, 59, 61, 62, 66, 68], "section": [0, 2, 4, 7, 9, 11, 12, 15, 19, 21, 28, 32, 37, 41, 50, 51, 54, 62], "some": [0, 1, 2, 4, 5, 7, 8, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 34, 35, 37, 38, 50, 51, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69], "them": [0, 1, 7, 15, 21, 28, 48, 50, 51, 54, 58, 59, 60, 62, 67, 68], "like": [0, 1, 4, 7, 19, 21, 28, 36, 37, 38, 50, 51, 58], "etc": [0, 2, 4, 7, 11, 15, 18, 19, 21, 28, 37, 41, 51, 53, 59, 62], "could": [0, 1, 3, 6, 7, 12, 19, 21, 26, 36, 37, 41, 51, 54, 55, 62, 64], "easili": [0, 13, 34, 51, 55, 59], "formul": [0, 11, 55, 62], "wai": [0, 1, 4, 7, 19, 21, 28, 33, 35, 50, 51, 54, 57, 59, 60, 62, 64, 65, 68], "us": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69], "myqlm": [0, 7, 11, 12, 13, 19, 21, 23, 29, 30, 31, 32, 34, 35, 39, 40, 42, 50, 53, 56, 62, 67], "tool": [0, 1, 7, 14, 15, 18, 36, 50, 53, 58, 62, 65], "A": [0, 1, 3, 4, 5, 7, 8, 10, 13, 14, 15, 16, 17, 19, 20, 22, 23, 28, 31, 34, 35, 36, 43, 44, 47, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 67, 68, 69], "descript": [0, 2, 7, 8, 15, 28, 33, 51, 52], "can": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 44, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "found": [0, 3, 4, 6, 15, 19, 37, 41, 42, 51, 53, 56, 58, 62], "below": [0, 1, 4, 15, 16, 17, 19, 20, 21, 22, 26, 28, 33, 35, 44, 51, 55, 56, 58, 59, 61, 62, 66, 68, 69], "respect": [0, 7, 11, 35, 51, 57, 58, 62, 66], "helper": [0, 7, 35, 51, 54, 58], "class": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 16, 17, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 67, 68, 69], "each": [0, 1, 3, 14, 19, 21, 28, 34, 35, 44, 47, 48, 49, 51, 52, 57, 58, 59, 62, 64, 66, 68], "given": [0, 3, 4, 7, 10, 11, 13, 15, 19, 21, 28, 33, 35, 45, 50, 51, 54, 57, 58, 59, 60, 62, 65, 66], "sourc": [0, 2, 19, 21, 27, 34, 37, 41, 50, 53, 54, 66], "code": [0, 1, 2, 3, 7, 8, 10, 11, 12, 13, 14, 15, 19, 21, 25, 27, 28, 34, 42, 50, 51, 53, 54, 56, 59, 62, 63, 66], "exampl": [0, 3, 7, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 28, 35, 43, 50, 51, 54, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69], "notebook": [0, 7, 10, 14, 26, 37, 38, 45, 46, 47, 48, 49, 51, 53, 54, 55, 57, 65], "relat": [0, 7, 59, 60], "batch": [0, 3, 5, 12, 14, 16, 17, 20, 21, 22, 32, 33, 34, 36, 39, 40, 44, 47, 48, 49, 67, 68, 69], "gener": [0, 2, 3, 4, 7, 8, 9, 12, 15, 18, 19, 23, 28, 30, 31, 32, 33, 36, 38, 39, 40, 51, 54, 56, 57, 60, 61, 65, 66, 68], "provid": [0, 1, 4, 6, 7, 9, 11, 12, 13, 14, 15, 18, 19, 21, 23, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 41, 42, 48, 50, 51, 52, 53, 54, 58, 59, 60, 62, 63, 65, 66, 67, 68], "both": [0, 1, 7, 9, 28, 36, 51, 55, 57, 62], "job": [0, 1, 3, 4, 7, 8, 9, 12, 13, 15, 18, 21, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 47, 49, 54, 57, 58, 59, 63, 64, 67, 68], "solv": [0, 6, 10, 11, 15, 16, 17, 20, 22, 35, 43, 53, 57, 58, 62, 67, 69], "combintori": 0, "pars": [0, 3, 6, 12, 16, 17, 20, 22, 30, 51, 67, 69], "result": [0, 1, 2, 3, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 50, 54, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69], "return": [0, 1, 2, 3, 4, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 56, 58, 59, 60, 61, 62, 64, 66, 67, 69], "user": [0, 3, 14, 19, 21, 23, 26, 28, 31, 32, 34, 36, 48, 51, 54, 68], "firendli": 0, "data": [0, 3, 4, 15, 19, 21, 31, 33, 34, 37, 39, 40, 41, 44, 58, 59, 61, 65, 67], "structur": [0, 2, 3, 4, 5, 15, 19, 33, 34, 50, 54, 55, 58, 61, 62, 67], "These": [0, 1, 4, 15, 19, 26, 27, 36, 37, 38, 50, 51, 54, 55, 57, 59, 60, 61, 62, 68], "design": [0, 1, 3, 4, 7, 9, 13, 19, 21, 26, 28, 36, 37, 41, 50, 51, 59, 62, 67], "differ": [0, 1, 4, 7, 9, 16, 17, 19, 20, 22, 28, 34, 44, 47, 49, 50, 51, 54, 55, 57, 58, 60, 62, 66, 68, 69], "type": [0, 2, 3, 4, 7, 8, 13, 16, 17, 19, 20, 21, 22, 23, 26, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 44, 48, 51, 52, 55, 58, 60, 61, 62, 63, 66, 68, 69], "compat": [0, 19, 21, 55, 56, 59], "qpu": [0, 1, 3, 6, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 27, 33, 34, 35, 38, 43, 44, 50, 51, 54, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69], "The": [0, 1, 3, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 60, 61, 62, 63, 65, 66, 68, 69], "qaoa": [0, 7, 11, 18], "pass": [0, 1, 5, 6, 13, 16, 17, 20, 21, 22, 51, 58, 59, 62, 68, 69], "job_typ": [0, 16, 17, 20, 22, 51, 57, 69], "constructor": [0, 2, 51, 53, 54, 58, 59, 62], "execut": [0, 1, 2, 3, 4, 5, 6, 7, 10, 15, 16, 17, 18, 19, 20, 22, 27, 28, 29, 32, 33, 34, 35, 36, 43, 51, 57, 58, 59, 63, 67, 69], "digit": [0, 7, 9, 18, 37, 41, 57, 62], "two": [0, 1, 2, 4, 7, 12, 13, 15, 19, 21, 28, 34, 35, 36, 37, 38, 43, 44, 50, 51, 54, 57, 58, 59, 60, 61, 62, 64, 66, 68], "submit": [0, 1, 3, 13, 15, 19, 21, 28, 32, 33, 34, 36, 37, 38, 39, 40, 41, 51, 54, 57, 58, 59, 63, 64, 65, 66, 68], "variat": [0, 3, 7, 9, 15, 18, 21, 37, 41, 46, 48, 51, 53, 57, 58, 62, 67], "determin": [0, 4, 19, 28, 57], "best": [0, 3, 6, 21, 34, 43, 51, 57, 62, 65, 67, 68], "paramet": [0, 1, 2, 4, 5, 6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 66, 68, 69], "sampl": [0, 1, 3, 6, 7, 11, 13, 15, 19, 21, 33, 34, 35, 36, 37, 39, 40, 41, 42, 49, 51, 59, 62, 64, 65, 67], "find": [0, 3, 7, 8, 10, 15, 21, 44, 48, 51, 54, 58, 62, 66, 68], "actual": [0, 7, 34, 66], "solut": [0, 3, 6, 7, 8, 9, 11, 35, 58, 62], "method": [0, 1, 2, 3, 4, 6, 7, 9, 11, 15, 16, 17, 18, 19, 20, 21, 22, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 50, 54, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69], "qaoa_ansatz": [0, 7, 11, 62], "circuitgener": [0, 7, 9, 62], "For": [0, 1, 2, 3, 7, 8, 12, 13, 14, 21, 28, 30, 33, 46, 51, 52, 54, 55, 57, 58, 59, 62, 64, 65, 66], "instanc": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 19, 21, 30, 32, 33, 34, 36, 44, 50, 51, 52, 59, 60, 62, 64, 66, 68], "follow": [0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 26, 28, 30, 32, 33, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68], "exempl": 0, "maxcutgener": [0, 22], "maxcut": [0, 7, 8, 22, 62], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 17, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "networkx": [0, 1, 6, 7, 8, 16, 17, 20, 22, 51, 62, 69], "nx": [0, 1, 7, 8, 16, 17, 20, 22, 51, 62, 69], "from": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 45, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "qat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 26, 30, 31, 32, 36, 37, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69], "full_rary_tre": [0, 17, 22, 62, 69], "3": [0, 1, 2, 3, 4, 7, 8, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 27, 28, 32, 33, 35, 36, 37, 38, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69], "6": [0, 1, 6, 7, 15, 17, 20, 21, 22, 24, 26, 27, 28, 32, 39, 45, 52, 54, 55, 58, 62, 65, 69], "here": [0, 1, 2, 4, 7, 8, 15, 16, 17, 19, 20, 21, 22, 26, 34, 37, 41, 44, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 66, 69], "also": [0, 1, 2, 4, 7, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 28, 34, 35, 37, 38, 41, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 68, 69], "schedul": [0, 7, 10, 35, 43, 62], "none": [0, 2, 4, 15, 16, 17, 19, 20, 21, 22, 32, 33, 34, 35, 36, 44, 46, 48, 49, 51, 58, 59, 62, 63, 66, 68, 69], "pipe": [0, 21, 36, 37, 41, 51, 67], "comput": [0, 4, 7, 8, 13, 15, 16, 17, 18, 19, 20, 21, 22, 26, 28, 33, 34, 36, 44, 45, 50, 51, 54, 55, 56, 57, 58, 59, 61, 62, 65, 66, 67, 69], "stack": [0, 12, 13, 15, 16, 17, 18, 20, 22, 37, 41, 47, 49, 50, 51, 54, 57, 58, 59, 64, 65, 67, 68, 69], "plugin": [0, 3, 5, 7, 9, 12, 13, 15, 16, 17, 18, 19, 20, 22, 32, 34, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 53, 54, 56, 62, 64, 65, 66, 69], "creat": [0, 3, 4, 15, 16, 17, 19, 20, 21, 22, 25, 28, 31, 35, 36, 37, 38, 42, 43, 51, 54, 58, 59, 62, 64, 66, 69], "applic": [0, 1, 2, 3, 4, 7, 8, 19, 21, 28, 34, 48, 50, 51, 59, 61, 62, 68], "call": [0, 1, 2, 5, 7, 11, 12, 15, 19, 21, 31, 33, 34, 37, 41, 50, 51, 56, 57, 58, 59, 60, 61, 62, 66], "scipyminimizeplugin": [0, 3, 13, 15, 16, 17, 20, 22, 54, 57, 62, 65, 68, 69], "get_default_qpu": [0, 1, 3, 13, 15, 16, 17, 20, 21, 22, 51, 54, 57, 58, 59, 64, 65, 66, 68, 69], "max_cut_appl": [0, 22], "cobyla": [0, 15, 16, 17, 20, 22, 54, 57, 65, 68, 69], "tol": [0, 15, 16, 17, 20, 22, 46, 57, 65, 68, 69], "1e": [0, 3, 15, 16, 17, 20, 22, 45, 46, 57, 58, 59, 65, 68, 69], "5": [0, 1, 3, 7, 8, 16, 17, 19, 20, 21, 22, 28, 47, 49, 51, 52, 54, 55, 57, 58, 59, 62, 65, 68, 69], "option": [0, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69], "maxit": [0, 15, 16, 17, 20, 22, 46, 57, 65, 68, 69], "200": [0, 15, 16, 17, 20, 22, 46, 69], "combinatorial_result": [0, 16, 17, 20, 22, 69], "print": [0, 1, 3, 4, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 30, 31, 33, 47, 48, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69], "subset": [0, 16, 17, 22, 33, 34, 43, 44, 62, 66], "cost": [0, 1, 7, 8, 9, 10, 13, 22, 28, 48, 54, 55, 58, 59, 62, 65, 68], "0": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 28, 30, 31, 32, 33, 34, 35, 36, 44, 46, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "4": [0, 1, 2, 3, 4, 6, 7, 15, 16, 17, 19, 20, 21, 22, 28, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 65, 68], "1": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 44, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69], "2": [0, 1, 2, 3, 4, 7, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 30, 31, 33, 34, 36, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69], "stdin": [0, 7, 8, 15, 16, 17, 20, 21, 22, 31, 62, 66, 69], "13": [0, 1, 13, 16, 17, 19, 20, 21, 22, 51, 52, 62], "futurewarn": [0, 7, 8, 16, 17, 20, 22, 62, 69], "adjacency_matrix": [0, 7, 8, 16, 17, 20, 22, 62, 69], "scipi": [0, 7, 8, 15, 16, 17, 20, 22, 43, 62, 65, 68, 69], "spars": [0, 7, 8, 16, 17, 20, 22, 33, 58, 62, 69], "arrai": [0, 1, 7, 8, 16, 17, 19, 20, 22, 33, 34, 35, 50, 51, 54, 55, 58, 59, 61, 62, 68, 69], "instead": [0, 7, 8, 11, 12, 16, 17, 20, 21, 22, 37, 39, 40, 41, 50, 51, 55, 56, 59, 60, 62, 69], "matrix": [0, 2, 4, 7, 8, 16, 17, 19, 20, 22, 33, 34, 35, 37, 39, 40, 41, 50, 51, 54, 55, 56, 57, 58, 59, 62, 69], "displai": [0, 3, 6, 12, 16, 17, 20, 21, 22, 26, 28, 33, 37, 38, 43, 54, 59, 62, 64, 67, 69], "simulatedann": [0, 16, 17, 20, 22, 35, 37, 38, 69], "to_job": [0, 1, 3, 4, 12, 13, 15, 19, 21, 35, 37, 38, 51, 54, 57, 58, 59, 62, 63, 64, 65, 66, 68], "traceback": [0, 15, 21, 31, 66], "most": [0, 1, 2, 4, 7, 15, 19, 21, 31, 33, 50, 51, 57, 59, 60, 62, 65, 66], "recent": [0, 15, 21, 31, 66], "last": [0, 1, 3, 7, 15, 19, 21, 31, 58, 59, 66], "file": [0, 12, 15, 19, 21, 28, 29, 30, 31, 36, 50, 51, 59, 66], "line": [0, 1, 2, 15, 18, 19, 21, 23, 28, 31, 50, 66], "9": [0, 1, 2, 7, 15, 17, 22, 24, 26, 28, 37, 38, 50, 51, 52, 59, 62, 65], "modul": [0, 4, 14, 15, 19, 21, 28, 31, 32, 34, 36, 37, 41, 42, 51, 52, 53, 54, 55, 56, 58, 59, 60, 66], "typeerror": [0, 21, 51], "__init__": [0, 3, 21], "miss": [0, 62], "requir": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15, 16, 17, 19, 20, 21, 22, 28, 44, 48, 51, 59, 60, 62, 65, 66, 68, 69], "posit": [0, 4, 17, 19, 20, 51, 58, 62, 68, 69], "argument": [0, 2, 3, 5, 12, 13, 19, 21, 36, 37, 39, 40, 41, 44, 50, 51, 58, 59, 60, 61, 62, 64, 68], "temp_t": [0, 16, 17, 20, 22, 35, 69], "n_step": [0, 16, 17, 20, 22, 35, 58, 69], "analog": [0, 7, 9, 16, 17, 20, 22, 37, 38, 57, 62, 69], "current": [0, 1, 4, 5, 16, 17, 19, 20, 21, 22, 34, 48, 51, 55, 58, 59, 62, 68, 69], "avail": [0, 3, 7, 11, 16, 17, 18, 19, 20, 21, 22, 26, 28, 29, 33, 34, 36, 37, 41, 50, 52, 53, 54, 55, 56, 57, 58, 62, 66, 67, 68, 69], "thei": [0, 1, 7, 15, 19, 21, 28, 30, 34, 37, 38, 51, 54, 55, 58, 59, 62], "full": [0, 1, 7, 28, 34, 35, 37, 41, 51, 57, 58, 60, 61, 67], "qlm": [0, 7, 8, 9, 12, 15, 16, 17, 19, 20, 21, 22, 23, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 50, 51, 54, 57, 62, 65, 66, 68, 69], "applianc": [0, 34, 35, 37, 38], "kcliqu": [0, 6, 62, 67], "concern": [0, 42, 51], "which": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 17, 19, 20, 28, 29, 31, 33, 34, 35, 36, 44, 45, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69], "ani": [0, 1, 2, 3, 4, 7, 8, 12, 18, 19, 21, 28, 31, 34, 36, 42, 47, 51, 54, 56, 59, 60, 62, 64, 66, 68], "output": [0, 1, 3, 4, 12, 14, 15, 19, 21, 30, 33, 34, 36, 43, 51, 58, 59, 60], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69], "valid": [0, 21, 59], "In": [0, 1, 3, 4, 7, 8, 9, 10, 11, 13, 15, 19, 21, 24, 26, 28, 32, 34, 36, 48, 49, 51, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "word": [0, 7, 36, 49, 59], "obei": [0, 62], "criteria": 0, "right": [0, 1, 3, 7, 11, 28, 34, 46, 49, 50, 51, 58, 59, 60, 62, 67], "howev": [0, 1, 2, 7, 28, 33, 48, 51, 57, 58, 59, 62, 68], "mai": [0, 4, 7, 8, 11, 19, 26, 27, 28, 33, 37, 38, 44, 47, 51, 55, 58, 59, 62, 66, 68], "undirect": [0, 51], "set": [0, 2, 3, 4, 5, 7, 11, 12, 14, 15, 18, 19, 21, 23, 28, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 50, 56, 57, 58, 60, 62, 63, 64, 65, 66, 68], "v": [0, 1, 3, 7, 13, 28, 55, 58, 62, 65], "edg": [0, 1, 22], "e": [0, 1, 2, 3, 4, 7, 9, 10, 12, 13, 15, 18, 19, 21, 24, 26, 28, 34, 36, 37, 39, 40, 41, 46, 48, 49, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "consist": [0, 3, 7, 10, 15, 28, 34, 35, 44, 48, 50, 51, 58, 59, 62, 66, 68], "subgraph": [0, 17, 20, 22, 69], "connect": [0, 18, 27, 28, 34, 51, 52, 63], "maximum": [0, 7, 11, 28, 34, 45, 46, 49, 51, 59, 62, 68], "need": [0, 1, 3, 5, 7, 8, 9, 10, 15, 21, 22, 26, 28, 34, 35, 36, 37, 41, 42, 44, 50, 51, 54, 55, 57, 58, 59, 60, 62, 66], "spin": [0, 7, 10, 11, 18, 35, 37, 41, 54, 56, 62, 67], "one": [0, 1, 2, 3, 4, 7, 8, 9, 11, 12, 13, 14, 15, 19, 21, 24, 26, 28, 30, 33, 34, 37, 38, 41, 43, 48, 49, 50, 51, 54, 57, 58, 59, 61, 62, 67, 68], "per": [0, 13, 34], "take": [0, 1, 3, 7, 8, 9, 12, 13, 19, 21, 34, 51, 54, 58, 59, 61, 65, 66], "look": [0, 1, 7, 8, 11, 15, 26, 34, 37, 38, 49, 50, 51, 62, 66], "sa": [0, 7, 26, 28, 35, 62, 67], "equal": [0, 1, 28, 55, 59, 60, 68], "size": [0, 4, 6, 7, 11, 19, 20, 21, 33, 46, 58, 59, 60, 61, 62, 68], "minim": [0, 3, 7, 9, 11, 13, 15, 22, 43, 51, 54, 56, 57, 62, 65, 68], "graphpartit": [0, 17, 62], "graphpartitioninggener": [0, 17], "individu": [0, 26, 28, 44, 60], "condit": [0, 2, 26, 28, 50, 51, 59], "order": [0, 1, 2, 4, 7, 9, 19, 21, 23, 28, 33, 37, 38, 41, 44, 51, 54, 55, 56, 58, 59, 60, 62, 63, 66], "everi": [0, 55, 58], "node": [0, 1, 6, 17, 20, 22, 51, 62, 69], "so": [0, 1, 4, 7, 10, 15, 19, 21, 22, 28, 33, 34, 48, 51, 54, 55, 57, 58, 59, 68], "doe": [0, 3, 7, 10, 21, 28, 33, 34, 44, 51, 59, 60, 66], "properti": [0, 6, 28, 33, 51], "therefor": [0, 1, 16, 17, 20, 21, 22, 28, 35, 50, 58, 62, 69], "we": [0, 1, 2, 4, 5, 7, 8, 11, 15, 19, 21, 28, 31, 32, 34, 35, 44, 46, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 66, 68], "correct": [0, 57, 59, 62], "n": [0, 1, 2, 3, 7, 8, 10, 11, 12, 33, 34, 49, 51, 55, 57, 58, 59, 60, 62, 64], "whether": [0, 7, 11, 28, 30, 33, 36, 46, 48, 51, 58, 68], "same": [0, 1, 3, 4, 7, 19, 24, 26, 28, 36, 37, 39, 40, 41, 46, 48, 51, 57, 58, 59, 60, 61, 62, 66, 68], "nn": 0, "our": [0, 1, 3, 7, 9, 11, 12, 13, 15, 21, 25, 26, 29, 34, 42, 54, 57, 59, 60, 62, 66], "graphcolour": [0, 16, 62], "graphcolouringgener": [0, 16], "where": [0, 2, 7, 9, 10, 15, 21, 28, 33, 34, 44, 48, 51, 58, 59, 60, 61, 62, 65, 68], "vertic": 0, "classic": [0, 4, 7, 9, 10, 11, 15, 19, 21, 33, 34, 37, 41, 43, 46, 51, 53, 56, 57, 58, 60, 61, 62, 64, 66, 67, 68], "complex": [0, 4, 7, 8, 19, 33, 34, 51, 59, 62], "known": [0, 3, 7, 10, 28, 34, 48, 51, 68], "approxim": [0, 7, 15, 43, 51, 57, 58, 62, 68], "algorithm": [0, 1, 7, 10, 11, 15, 16, 17, 18, 20, 22, 28, 35, 44, 45, 50, 54, 56, 57, 60, 62, 66, 67, 69], "o": [0, 7, 12, 24, 26, 32, 44, 49, 51, 57, 58, 62, 66], "log": [0, 1, 7, 11, 51, 61], "out": [0, 2, 18, 21, 28, 33, 34, 47, 51, 58, 60, 65, 66], "exist": [0, 21, 28, 59], "complet": [0, 20, 21, 28, 58, 66], "help": [0, 1, 3, 15, 37, 41, 42, 51, 53, 55, 56, 57, 58, 62], "kcliquegener": [0, 6, 20], "smallest": 0, "ha": [0, 1, 3, 4, 7, 13, 19, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 50, 51, 56, 57, 58, 59, 60, 62, 64, 66], "As": [0, 1, 7, 9, 15, 19, 21, 28, 44, 51, 58, 59, 66], "addit": [0, 1, 4, 19, 21, 28, 37, 38, 51, 54, 55, 58, 59, 60, 64], "want": [0, 3, 7, 8, 15, 19, 21, 25, 26, 48, 50, 51, 57, 58, 59, 62, 68], "know": [0, 28, 34, 50, 54, 58, 59], "To": [0, 1, 2, 7, 8, 13, 14, 15, 19, 25, 28, 36, 47, 51, 53, 54, 55, 57, 58, 59, 60, 62], "would": [0, 3, 7, 19, 21, 23, 31, 32, 36, 37, 38, 50, 51, 57, 58, 59, 62], "vertexcov": [0, 6, 62, 69], "vertexcovergener": [0, 6, 69], "more": [0, 1, 2, 4, 7, 8, 9, 10, 11, 12, 14, 15, 19, 21, 23, 28, 31, 32, 33, 34, 35, 36, 37, 41, 49, 51, 54, 55, 57, 58, 59, 61, 62, 65, 68], "orient": [0, 18], "belong": [0, 48, 68], "first": [0, 1, 3, 4, 7, 10, 15, 17, 19, 21, 22, 23, 32, 33, 34, 36, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 66], "well": [0, 2, 7, 9, 10, 15, 18, 19, 21, 28, 37, 38, 51, 54, 55, 56, 62], "via": [0, 1, 2, 4, 7, 9, 11, 12, 19, 21, 37, 38, 46, 50, 51, 52, 54, 55, 56, 57, 58, 59, 62, 65, 67], "real": [0, 7, 32, 37, 38, 51, 61, 62], "potenti": [0, 2, 58, 59], "sum": [0, 2, 3, 7, 8, 13, 21, 37, 38, 51, 58, 60, 61, 62], "close": [0, 1, 21, 54, 59, 62], "possibl": [0, 1, 2, 7, 8, 9, 12, 19, 21, 28, 35, 37, 38, 42, 46, 50, 51, 56, 58, 59, 62, 65, 66], "obtain": [0, 28, 46, 51, 56, 57, 58], "answer": 0, "numberpartit": [0, 62], "vector": [0, 7, 15, 19, 34, 50, 51, 58, 62], "c": [0, 2, 4, 5, 7, 8, 9, 12, 14, 19, 28, 30, 34, 37, 41, 44, 48, 49, 50, 51, 55, 57, 58, 59, 60, 62, 66, 67, 68], "b": [0, 1, 7, 12, 17, 20, 28, 49, 51, 57, 58, 60, 62, 67, 69], "m": [0, 7, 15, 26, 36, 58, 62], "": [0, 1, 2, 3, 7, 15, 21, 28, 32, 33, 35, 36, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 62, 65, 66, 67, 68], "time": [0, 1, 4, 7, 8, 11, 15, 19, 21, 28, 34, 35, 36, 43, 48, 57, 58, 59, 60, 62, 65, 66, 68], "x": [0, 1, 2, 7, 8, 11, 12, 14, 15, 19, 31, 33, 34, 36, 44, 50, 51, 52, 55, 57, 58, 60, 62, 65], "compos": [0, 1, 3, 4, 13, 14, 15, 19, 21, 23, 30, 31, 32, 34, 36, 37, 41, 51, 58, 59, 61, 64, 67], "maxim": [0, 7, 13, 51, 59, 62, 68], "dot": [0, 34, 60], "product": [0, 1, 4, 7, 8, 19, 28, 48, 51, 57, 58, 59, 62, 68], "bilp": [0, 62], "valu": [0, 2, 4, 7, 8, 10, 11, 15, 19, 21, 28, 32, 33, 34, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 54, 56, 57, 58, 59, 60, 62, 65, 66, 68], "although": 0, "sqa": [0, 7, 35, 62], "onli": [0, 1, 2, 6, 7, 15, 16, 17, 19, 20, 21, 22, 24, 26, 28, 30, 33, 34, 44, 48, 50, 51, 54, 56, 57, 59, 60, 62, 65, 68, 69], "present": [0, 7, 10, 11, 13, 21, 28, 34, 35, 51, 54, 58, 59, 62], "its": [0, 1, 3, 7, 15, 28, 33, 35, 37, 41, 44, 51, 54, 55, 56, 57, 58, 59, 62, 65, 66, 67], "hint": 0, "capabl": [0, 36], "shown": [0, 16, 17, 20, 22, 35, 49, 69], "rang": [0, 2, 3, 7, 15, 21, 51, 58, 59, 62, 65], "togeth": [0, 21, 28, 51], "averag": [0, 66], "wa": [0, 1, 7, 11, 28, 34, 36, 49, 51, 58, 59], "defin": [0, 1, 2, 3, 4, 7, 8, 13, 14, 15, 19, 21, 22, 27, 28, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 51, 53, 54, 56, 57, 58, 59, 60, 62, 68], "frac": [0, 2, 7, 8, 11, 15, 46, 51, 55, 58, 60, 61, 62], "text": [0, 28, 30, 34, 50, 59], "planar": 0, "random": [0, 7, 10, 15, 21, 35, 47, 48, 51, 56, 57, 58, 61, 62, 65, 68], "gset": 0, "dataset": 0, "20": [0, 1, 7, 8, 16, 17, 22, 34, 52, 59, 62], "tree": [0, 1, 59, 61, 62], "count": [0, 1, 13, 37, 38, 43, 51, 59, 62], "10": [0, 1, 7, 8, 13, 17, 19, 22, 24, 26, 34, 46, 48, 50, 51, 52, 58, 59, 60, 62, 65, 66, 68, 69], "000": [0, 3, 21, 64], "98": [0, 35], "mostli": [0, 51], "sec": 0, "up": [0, 1, 2, 4, 7, 11, 19, 21, 44, 55, 57, 58, 59, 60, 65], "second": [0, 1, 3, 15, 17, 22, 34, 51, 52, 58, 59, 60, 62, 66], "leighton": 0, "dimac": 0, "60": [0, 28, 52], "24": [0, 17, 22, 52, 62], "88": 0, "95": 0, "99": 0, "few": [0, 1, 7, 8, 15, 59], "case": [0, 4, 7, 9, 10, 19, 21, 28, 34, 48, 49, 51, 55, 58, 59, 61, 62, 66, 68], "27": [0, 17, 22, 52], "bhoslib": 0, "450": 0, "4000": 0, "dure": [0, 2, 7, 8, 21, 28, 35, 50, 51, 57, 58, 59, 60], "21": [0, 17, 22, 52], "oei": 0, "smaller": [0, 59], "larger": [0, 7, 9, 58, 59], "30": [0, 17, 22, 34, 37, 38, 52], "non": [0, 2, 4, 5, 7, 8, 10, 19, 28, 37, 39, 40, 41, 44, 51, 59, 61], "40": [0, 51, 52], "instantli": 0, "15": [0, 7, 11, 17, 22, 36, 51, 52, 58, 60], "describ": [0, 1, 2, 3, 4, 6, 7, 9, 11, 12, 19, 21, 28, 34, 37, 39, 40, 41, 43, 46, 48, 50, 51, 52, 53, 54, 55, 57, 58, 59, 61, 62, 65, 68], "either": [0, 1, 2, 16, 17, 20, 21, 22, 28, 33, 36, 49, 51, 57, 58, 61, 62, 69], "q": [0, 1, 2, 7, 12, 14, 30, 31, 34, 36, 58, 59, 60, 62], "j": [0, 1, 7, 10, 11, 35, 37, 38, 55, 57, 58, 62, 64], "h": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 30, 31, 33, 35, 36, 44, 46, 50, 51, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 69], "One": [0, 7, 8, 34, 37, 38, 50, 51, 58], "alwai": [0, 3, 7, 10, 13, 14, 19, 50, 51, 58, 59, 61, 62], "extract": [0, 4, 6, 7, 19, 21, 34, 35, 55, 59, 60, 62], "numpi": [0, 1, 3, 7, 8, 15, 16, 20, 21, 33, 34, 35, 51, 54, 55, 57, 58, 61, 62, 65, 68], "fed": [0, 50, 51, 62, 66], "object": [0, 1, 2, 3, 4, 18, 21, 23, 28, 33, 36, 37, 38, 39, 40, 41, 50, 51, 52, 53, 55, 57, 58, 59, 60, 61, 62, 66, 67], "nativ": [0, 1, 44, 51, 66], "python": [0, 2, 5, 12, 13, 15, 18, 19, 24, 26, 27, 30, 32, 33, 37, 38, 41, 50, 51, 59, 67], "librari": [0, 1, 12, 18, 19, 25, 26, 34, 43, 50, 54], "ocean": 0, "snippet": [0, 1, 15], "opt": [0, 6, 7, 8, 16, 17, 20, 22, 35, 67, 69], "specifi": [0, 1, 2, 7, 8, 9, 10, 13, 15, 34, 35, 36, 44, 51, 58, 59, 60, 61, 62], "add_nodes_from": [0, 16, 20, 62], "arang": [0, 16, 20, 62], "add_edges_from": [0, 16, 20, 62], "impos": 0, "constraint": [0, 15, 51, 59, 62, 67], "encod": [0, 7, 8, 9, 11, 13, 34, 35, 51, 59, 67], "01": [0, 13, 51, 66, 68], "vertex_cover_problem": [0, 62], "offset": [0, 7, 35, 37, 38, 51, 59, 62], "get_q_and_offset": [0, 62], "dimod": 0, "binaryquadraticmodel": 0, "bqm": 0, "pip": [0, 26], "instal": [0, 18, 24, 27, 28, 29, 58], "from_numpy_matrix": 0, "offer": [1, 19, 21, 28, 50], "allow": [1, 2, 5, 6, 7, 9, 10, 19, 21, 28, 36, 48, 51, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66], "veri": [1, 3, 16, 17, 20, 21, 22, 37, 41, 43, 47, 51, 54, 55, 57, 58, 59, 62, 68, 69], "effici": [1, 2, 7, 9, 11, 37, 39, 40, 41, 51, 54, 56, 57, 65, 67], "synthesi": [1, 7, 9, 62], "larg": [1, 7, 8, 10, 19, 44, 51, 58, 62], "you": [1, 7, 8, 9, 14, 15, 19, 21, 23, 25, 26, 28, 29, 31, 32, 33, 36, 37, 38, 41, 42, 48, 50, 51, 53, 54, 55, 56, 59, 60, 62, 65, 66], "parameter": [1, 48, 57, 68], "think": [1, 50, 58], "quit": [1, 14, 21, 62], "conveni": 1, "hardwar": [1, 3, 14, 43, 54, 67], "depend": [1, 2, 3, 7, 8, 9, 11, 26, 27, 34, 35, 43, 48, 50, 51, 57, 58, 59, 61, 62, 68], "wrap": [1, 6, 32, 33, 34, 35, 36, 51, 59, 60, 65], "routin": [1, 2, 4, 15, 19, 21, 44, 51, 58, 59, 61], "insid": [1, 17, 19, 20, 21, 26, 34, 36, 43, 44, 50, 51, 58, 59, 60, 62, 65, 67, 68, 69], "black": 1, "box": [1, 59, 60], "come": [1, 2, 7, 8, 12, 15, 17, 19, 20, 21, 26, 29, 34, 35, 57, 58, 60, 61, 62, 63, 65, 69], "simul": [1, 5, 7, 15, 18, 19, 28, 32, 36, 39, 40, 50, 51, 59, 60, 62, 63, 66], "properli": 1, "might": [1, 4, 5, 7, 8, 19, 21, 30, 44, 50, 51, 55, 57, 59, 60, 62], "inform": [1, 4, 15, 16, 17, 19, 20, 22, 28, 34, 36, 37, 41, 43, 50, 51, 54, 55, 57, 58, 59, 61, 69], "abl": [1, 3, 5, 51, 59, 62], "g": [1, 2, 4, 7, 15, 18, 19, 21, 24, 26, 28, 36, 37, 39, 40, 41, 46, 48, 49, 51, 57, 58, 59, 60, 62, 63, 68], "attach": [1, 5, 19, 28, 51, 59, 65], "sub": [1, 4, 19, 28, 51, 60], "simplic": [1, 54, 57], "input": [1, 7, 12, 14, 16, 17, 20, 21, 22, 23, 30, 34, 36, 37, 39, 40, 41, 51, 54, 55, 58, 59, 60, 61, 62, 68, 69], "signatur": [1, 2, 59], "np": [1, 3, 7, 8, 10, 11, 15, 16, 20, 21, 34, 35, 48, 50, 51, 54, 55, 57, 58, 59, 61, 65, 68], "lang": [1, 2, 3, 4, 5, 13, 14, 15, 19, 21, 50, 51, 54, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68], "aqasm": [1, 3, 4, 12, 13, 14, 15, 18, 19, 21, 31, 34, 43, 50, 51, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68], "def": [1, 2, 3, 13, 15, 21, 50, 59, 62], "phase_matrix": 1, "theta": [1, 2, 15, 46, 48, 50, 51, 54, 57, 58, 59, 65, 68], "diag": 1, "exp": [1, 48, 51, 59, 68], "1j": [1, 50, 59], "phase_g": 1, "float": [1, 2, 3, 13, 15, 16, 17, 19, 20, 21, 22, 33, 34, 45, 46, 48, 50, 51, 54, 57, 58, 59, 62, 65, 68, 69], "matrix_gener": [1, 50, 51, 59], "Or": [1, 23, 32, 36, 59], "altern": [1, 7, 9, 15, 33, 37, 41, 55, 58, 62, 65], "set_matrix_gener": [1, 51], "similarli": [1, 2, 16, 17, 20, 22, 50, 51, 55, 59, 62, 69], "qroutin": [1, 2, 15, 44, 50, 54, 58, 59, 60, 61], "cnot": [1, 2, 3, 14, 15, 21, 30, 31, 33, 36, 49, 50, 51, 54, 57, 58, 59, 60, 61, 62, 63, 66], "ph": [1, 2, 4, 19, 33, 44, 50, 51, 60], "c_phase": 1, "wire": [1, 15, 50, 59], "new_wir": [1, 15, 50, 59], "c_phase_g": 1, "circuit_gener": [1, 51, 62], "set_circuit_gener": [1, 51], "final": [1, 3, 7, 8, 13, 15, 19, 21, 34, 44, 50, 51, 54, 57, 59, 60, 62, 65, 66, 68], "abstract": [1, 2, 4, 7, 18, 19, 21, 59, 60, 62, 67, 68], "variabl": [1, 4, 7, 16, 17, 19, 20, 21, 22, 35, 36, 46, 57, 59, 62, 68, 69], "qft": [1, 2, 4, 19, 50, 59], "sole": [1, 28], "int": [1, 2, 4, 6, 15, 16, 19, 20, 33, 34, 35, 36, 45, 46, 47, 48, 49, 51, 52, 58, 59, 60, 61, 62, 68], "lambda": [1, 2, 46, 51, 58, 59], "static": [1, 51, 62], "check": [1, 3, 14, 21, 37, 39, 40, 41, 48, 51, 68], "appli": [1, 2, 3, 4, 7, 8, 10, 13, 14, 15, 19, 28, 33, 34, 37, 38, 50, 51, 54, 57, 58, 59, 60, 63, 64], "number": [1, 3, 4, 7, 9, 11, 13, 15, 16, 19, 21, 22, 33, 34, 35, 37, 38, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 68, 69], "qubit": [1, 2, 3, 7, 12, 13, 14, 15, 21, 23, 30, 31, 32, 33, 34, 36, 43, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 67], "even": [1, 28, 35, 37, 38, 50, 58, 59, 64, 65], "though": [1, 33], "abov": [1, 7, 15, 19, 28, 34, 48, 51, 59, 61, 66, 68], "mechan": [1, 28, 51, 65, 66], "still": [1, 4, 7, 11, 19, 33, 50, 56, 58, 59, 62, 63, 64], "seem": 1, "bit": [1, 2, 4, 7, 8, 15, 19, 21, 24, 26, 33, 34, 50, 51, 58, 60, 62, 64], "clunki": 1, "separ": [1, 23, 28, 31, 32, 36, 56, 60], "build_gat": [1, 2, 59, 60], "decor": [1, 2, 59, 60], "remov": [1, 51, 59, 62, 67], "lot": [1, 7, 15, 21, 59, 62], "clunky": 1, "turn": [1, 21, 51, 59, 60, 62, 66, 67], "walsh_hadamard": 1, "wht": 1, "nbqbit": [1, 3, 4, 15, 19, 21, 44, 51, 52, 54, 57, 58, 59, 60], "prog": [1, 3, 4, 13, 14, 15, 19, 21, 37, 39, 40, 41, 51, 54, 57, 58, 59, 60, 61, 63, 64, 65, 68], "qbit": [1, 2, 3, 4, 13, 15, 19, 21, 44, 50, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 68], "qalloc": [1, 3, 4, 13, 14, 15, 19, 21, 50, 51, 54, 57, 58, 59, 60, 61, 63, 64, 65, 66, 68], "contain": [1, 2, 3, 4, 6, 7, 9, 12, 16, 17, 19, 20, 21, 22, 26, 28, 29, 30, 34, 35, 36, 44, 50, 51, 52, 55, 57, 58, 59, 60, 62, 64, 65, 66, 68, 69], "length": [1, 3, 4, 19, 21, 34, 51, 52, 59, 62], "to_circ": [1, 3, 4, 5, 13, 14, 15, 19, 21, 23, 31, 32, 36, 37, 39, 40, 41, 50, 51, 54, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68], "construct": [1, 2, 7, 9, 11, 15, 19, 21, 37, 41, 45, 51, 53, 54, 58, 59, 61, 62, 63], "subroutin": [1, 4, 5, 19], "without": [1, 4, 14, 19, 28, 29, 34, 47, 57, 59, 62, 67], "underli": [1, 2, 28, 51, 55, 56, 59, 60, 63], "consid": [1, 2, 12, 15, 33, 36, 44, 50, 51, 55, 57, 59, 60, 61, 62, 64], "adder": [1, 59, 60], "add": [1, 3, 5, 6, 25, 28, 44, 51, 54, 59, 60, 62, 63], "n1": 1, "n2": 1, "run": [1, 7, 9, 12, 15, 16, 17, 18, 20, 21, 22, 28, 29, 32, 34, 36, 37, 38, 45, 51, 57, 62, 63, 66, 67, 68, 69], "error": [1, 18, 19, 21, 28, 51, 57, 66], "singl": [1, 2, 3, 4, 7, 10, 14, 19, 21, 32, 33, 34, 36, 44, 51, 55, 59, 61, 62], "attempt": [1, 36], "fail": [1, 15, 26, 28, 37, 39, 40, 41, 51, 63], "now": [1, 15, 21, 26, 37, 38, 39, 40, 41, 51, 53, 54, 55, 56, 57, 58, 62, 66], "let": [1, 2, 15, 21, 37, 38, 49, 54, 55, 57, 58, 60, 66], "imagin": [1, 2], "own": [1, 3, 4, 15, 19, 28, 43, 50, 51, 62], "ly": 1, "namespac": [1, 2, 12, 19, 60], "foo": [1, 51, 59], "Its": [1, 7, 8, 51, 53, 57, 58, 59, 62], "my_add": 1, "length1": 1, "length2": 1, "proper": [1, 7, 9, 21, 51, 59], "what": [1, 7, 19, 34, 59, 60], "u": [1, 2, 21, 36, 54, 55, 57, 58, 59, 60, 66], "do": [1, 5, 7, 8, 13, 15, 21, 26, 28, 33, 34, 51, 54, 55, 57, 58, 59, 62], "done": [1, 2, 3, 36, 50, 51, 55, 57, 58, 59, 60, 62], "keyword": [1, 2, 36, 37, 39, 40, 41, 51, 59], "updat": [1, 2, 7, 10, 28, 32, 34, 38, 46, 50, 51, 53, 54, 57, 58, 59, 60, 62], "piec": [1, 4, 7, 8, 19, 51, 59, 61, 62, 66], "part": [1, 7, 14, 21, 37, 41, 51, 53, 58, 59], "stai": 1, "probabl": [1, 3, 7, 8, 10, 13, 15, 19, 21, 33, 34, 51, 58, 59, 64, 66], "your": [1, 4, 14, 19, 25, 26, 28, 29, 31, 33, 34, 36, 37, 38, 42, 50, 51, 53, 55, 56, 62, 68], "equival": [1, 7, 9, 11, 12, 28, 34, 51, 57, 59, 66], "had": [1, 34], "mani": [1, 3, 7, 11, 37, 41, 51, 54, 55, 56, 57, 61, 62, 65, 66], "common": [1, 7, 11, 19, 28, 62], "scheme": [1, 65], "revers": [1, 15, 21, 28, 33, 51, 54, 59, 60, 62], "particular": [1, 16, 17, 19, 20, 21, 22, 28, 34, 48, 51, 59, 60, 62, 63, 65, 68, 69], "usual": [1, 7, 8, 9, 19, 37, 38, 50, 51, 57, 58, 62, 67], "free": [1, 28, 49, 51, 54, 57, 59, 67], "resourc": [1, 51], "support": [1, 18, 19, 24, 26, 28, 30, 33, 35, 36, 37, 38, 39, 40, 41, 44, 50, 51, 61, 62, 65, 66], "open": [1, 21, 29, 37, 41, 51, 53, 59, 65, 67], "store": [1, 2, 4, 19, 21, 34, 36, 37, 39, 40, 41, 44, 50, 51, 58, 59, 60, 62], "intern": [1, 5, 28, 45, 51, 58, 59, 62], "pop": [1, 21, 59], "dagger": [1, 4, 7, 9, 19, 49, 51, 55, 57, 58, 59], "Of": [1, 15, 21, 50, 66], "cours": [1, 7, 8, 11, 15, 21, 50, 66], "nest": 1, "system": [1, 7, 8, 10, 11, 18, 21, 28, 37, 41, 54, 55, 56, 57, 61, 62, 67], "fresh": [1, 21, 44, 51, 59, 62], "declar": [1, 2, 4, 7, 19, 28, 36, 51, 59], "set_ancilla": [1, 59], "being": [1, 7, 10, 24, 26, 33, 34, 59, 66], "upon": [1, 19, 21, 28, 51, 56, 58, 62, 66], "dynam": [1, 4, 7, 8, 19, 50, 56, 59, 68], "made": [1, 28, 35, 56, 58, 59, 66], "recurs": [1, 59, 62], "accro": 1, "thing": [1, 7, 15, 37, 41, 60], "ensur": [1, 26, 62], "freed": [1, 59], "befor": [1, 3, 5, 7, 8, 24, 26, 28, 44, 58, 59, 64, 65], "leav": [1, 4, 14, 19, 36, 62], "rangl": [1, 3, 7, 8, 9, 13, 15, 33, 34, 46, 49, 51, 58, 59, 60, 61, 62, 64, 65, 66], "state": [1, 3, 7, 8, 9, 10, 11, 13, 15, 19, 21, 28, 33, 34, 35, 37, 38, 49, 50, 51, 54, 56, 57, 58, 59, 60, 62, 64, 65], "consequ": [1, 7, 51, 59, 62], "qftarith": [1, 2, 4, 19, 50, 51, 60], "classarith": [1, 50, 60], "No": [1, 14, 27, 31, 34, 36], "write": [1, 2, 7, 13, 15, 18, 28, 43, 54, 55, 58, 59, 60, 65], "base": [1, 3, 5, 7, 11, 27, 28, 33, 34, 37, 41, 43, 45, 46, 50, 53, 54, 56, 57, 58, 59, 65, 68], "aglorithm": 1, "sometim": [1, 7, 63], "hard": [1, 7, 10, 11, 13, 34], "translat": [1, 7, 27, 28, 35, 37, 41, 62], "temporari": [1, 28, 43, 59], "intermedi": [1, 3, 15, 19, 34, 51], "quickli": [1, 21], "becom": [1, 21, 28, 51, 65], "overwhelm": 1, "fair": 1, "necessarili": [1, 15, 28, 66], "interest": [1, 7, 11, 49, 55, 57, 58, 65], "nice": [1, 34, 65], "featur": [1, 7, 21, 25, 26, 28, 50, 53, 56, 57, 58, 62, 65], "complic": [1, 15, 59], "high": [1, 7, 10, 11, 15, 16, 17, 20, 22, 34, 50, 51, 58, 59, 62, 65, 69], "er": 1, "level": [1, 7, 9, 15, 21, 34, 37, 41, 50, 51, 54, 55, 56, 57, 58, 65], "It": [1, 2, 7, 8, 9, 10, 12, 21, 33, 34, 35, 37, 38, 39, 40, 41, 48, 51, 54, 56, 57, 58, 59, 61, 62, 63, 66, 68], "regist": [1, 4, 19, 51, 59, 60, 61, 66], "qint": [1, 59], "directli": [1, 2, 7, 9, 13, 27, 33, 34, 50, 51, 54, 56, 57, 59, 62, 65, 66], "perform": [1, 5, 7, 11, 15, 19, 21, 28, 33, 34, 35, 44, 45, 46, 49, 51, 57, 58, 59, 60, 61, 62, 65, 66], "oper": [1, 2, 3, 4, 7, 15, 19, 21, 34, 37, 38, 41, 45, 51, 53, 54, 56, 57, 58, 59, 60, 62, 65, 66], "comparison": [1, 59], "qint1": [1, 59], "qint2": [1, 59], "unimpl": 1, "circuit_ab": 1, "circuit_qft": [1, 60], "carri": [1, 18, 28, 34, 47, 50, 58, 59, 61, 66], "circuit_class": [1, 60], "subsect": 1, "detail": [1, 4, 7, 8, 9, 15, 19, 21, 34, 35, 44, 51, 53, 54, 55, 57, 58, 59, 61, 62, 67, 68], "qbool": [1, 59], "simplest": [1, 51, 65], "qboolarrai": [1, 59], "other": [1, 7, 18, 26, 27, 28, 30, 34, 36, 37, 38, 41, 48, 49, 51, 53, 57, 58, 68], "ad": [1, 19, 23, 31, 32, 36, 37, 38, 39, 40, 41, 56, 59, 60], "correspond": [1, 2, 4, 7, 9, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 49, 50, 51, 57, 58, 59, 61, 62, 66, 67], "sinc": [1, 7, 8, 19, 21, 22, 36, 50, 56, 57, 59, 60, 62, 66], "rout": [1, 59], "xor": [1, 15, 59, 62], "and_expr": [1, 59], "expr1": 1, "expr2": 1, "how": [1, 2, 7, 9, 10, 11, 15, 21, 28, 51, 54, 55, 57, 58, 59, 61, 62, 66], "good": [1, 15, 28, 57, 58], "t": [1, 2, 4, 7, 8, 10, 11, 16, 17, 19, 20, 21, 22, 23, 28, 30, 31, 32, 33, 34, 35, 36, 50, 51, 54, 57, 58, 59, 62, 65, 69], "append": [1, 12, 21, 51, 62], "sequenc": [1, 2, 51, 59, 61], "were": [1, 7, 11, 34], "produc": [1, 7, 8, 9, 19, 35, 58, 59, 61, 62, 63], "q_4": 1, "term": [1, 7, 15, 17, 19, 20, 26, 28, 44, 51, 54, 55, 56, 57, 58, 59, 62, 65, 66, 69], "anoth": [1, 4, 14, 19, 21, 27, 28, 37, 38, 51, 54, 59, 60, 64], "q_5": 1, "toffoli": [1, 2, 59, 60], "OR": [1, 4, 19, 28], "q_3": 1, "de": [1, 51], "morgan": 1, "law": [1, 28], "NOTS": 1, "AND": [1, 2, 4, 19, 28, 59, 62], "notic": [1, 2, 21, 28, 51, 60, 66], "inde": [1, 7], "automat": [1, 7, 8, 26, 37, 41, 44, 51, 56, 57, 58, 59, 60, 62, 65], "flag": 1, "keep": [1, 3, 15, 43, 59, 64, 65, 67], "mind": [1, 55], "procedur": [1, 2, 21, 58], "combin": [1, 7, 28, 58, 59, 62, 66], "context": [1, 7, 54], "copi": [1, 15, 26, 28, 33, 51, 58, 59], "exit": 1, "block": [1, 15], "fact": [1, 4, 19, 28, 66], "just": [1, 7, 8, 50], "syntact": 1, "sugar": 1, "start": [1, 2, 4, 7, 9, 11, 18, 19, 21, 26, 29, 34, 43, 47, 51, 54, 58, 59, 62, 65, 66], "releas": [1, 7, 8, 18, 38, 39, 40, 41, 51, 59, 62], "later": [1, 21, 36, 59, 60], "free_ancilla": [1, 59], "cannot": [1, 28, 33], "whose": [1, 4, 7, 8, 9, 15, 19, 34, 37, 38, 44, 54, 59, 62], "should": [1, 3, 4, 5, 7, 13, 19, 21, 23, 28, 31, 32, 35, 36, 37, 39, 40, 41, 48, 51, 54, 55, 56, 58, 59, 60, 62, 64, 65, 68], "least": [1, 7, 9, 19, 21, 28, 33, 37, 41, 51], "flip": [1, 7, 10, 15, 50, 51, 54, 59, 62], "basi": [1, 7, 8, 15, 19, 28, 34, 37, 41, 44, 51, 53, 54, 55, 56, 59, 60, 66], "verifi": 1, "expr": [1, 51], "amplitud": [1, 15, 19, 33, 34, 43, 51, 60, 66], "fals": [1, 4, 5, 6, 13, 14, 19, 21, 23, 30, 31, 32, 33, 36, 46, 47, 48, 51, 58, 59, 60, 62, 64, 68], "49999999999999994": 1, "0j": [1, 15, 55, 58, 66], "true": [1, 4, 5, 6, 7, 8, 13, 14, 19, 21, 23, 31, 32, 33, 34, 36, 37, 39, 40, 41, 44, 46, 51, 57, 58, 59, 62, 64], "11": [1, 3, 13, 15, 17, 19, 22, 28, 52, 54, 59, 62, 65, 66], "set_valu": [1, 59], "content": [1, 4, 7, 19, 26, 28, 29, 51, 59, 60], "multipl": [1, 4, 19, 28, 37, 38, 51, 56, 57, 58, 59, 60], "trigger": [1, 19, 28, 59], "circuit1": [1, 51], "circuit2": [1, 51], "op": [1, 4, 15, 19, 21, 31, 34, 37, 38, 51, 58, 59, 61, 62, 65], "iterate_simpl": [1, 4, 19, 21, 30, 31, 51, 59, 61, 62, 65], "8": [1, 6, 7, 8, 17, 20, 21, 22, 24, 26, 28, 52, 54, 60, 61, 62, 65], "7": [1, 17, 19, 20, 21, 22, 24, 26, 28, 51, 52, 54, 55, 57, 58, 62, 65], "empti": [1, 2, 51, 54, 59], "did": [1, 2, 51], "hold": [1, 28, 44, 50, 60, 66], "qint3": [1, 59], "depth": [1, 7, 9, 51, 54, 59, 62], "mult": [1, 51, 59, 60], "14": [1, 7, 11, 13, 17, 19, 22, 52, 59], "12": [1, 6, 13, 17, 19, 22, 52, 58, 59, 62], "compar": [1, 33, 51, 60], "thu": [1, 5, 7, 8, 15, 19, 50, 55, 57, 58, 59, 61, 62, 63, 66], "increment": 1, "cast_to": [1, 59], "usag": [1, 4, 19, 43, 51, 53, 59, 61, 63, 65], "cast": [1, 6, 36, 51, 56, 59], "new": [1, 4, 19, 21, 25, 34, 36, 51, 54, 56, 58, 59, 62, 67, 68], "re": [1, 4, 12, 15, 19, 21, 28, 46, 51, 54], "constant": [1, 2, 7, 8, 17, 20, 49, 50, 51, 54, 57, 58, 60, 62, 68, 69], "sai": [1, 58], "anc": 1, "35355339059327334": 1, "323307507451124e": 1, "17j": 1, "3535533905932733": 1, "034254676965732e": 1, "3535533905932734": 1, "0884348908992939e": 1, "16j": 1, "54030915644243e": 1, "3535533905932735": 1, "703410071228764e": 1, "353553390593273": 1, "2696513998078917e": 1, "35355339059327306": 1, "0509864824017613e": 1, "3535533905932732": 1, "6183876264232977e": 1, "straightforward": [1, 7, 12, 21, 51, 62, 66], "simpl": [1, 2, 3, 5, 7, 8, 9, 15, 16, 17, 20, 21, 22, 34, 43, 47, 51, 54, 57, 59, 62, 66, 68, 69], "act": [1, 2, 4, 13, 19, 28, 35, 51, 55, 57, 61, 62], "problem": [1, 3, 6, 8, 9, 10, 11, 15, 16, 17, 20, 22, 35, 48, 51, 53, 55, 57, 58, 65, 67, 68, 69], "clean": 1, "functool": [1, 3], "reduc": [1, 3, 28, 54, 58, 59, 62], "coloring_oracl": 1, "bitlength": [1, 60], "_": [1, 15, 21, 46, 49, 55, 58, 59, 60, 64], "path_graph": 1, "format": [1, 4, 12, 18, 19, 21, 27, 28, 31, 32, 34, 50, 51, 57, 58, 59, 62, 65], "len": [1, 3, 4, 19, 21, 34, 37, 39, 40, 41, 59, 62, 69], "19": [1, 17, 22, 52, 60], "vertex": [1, 43, 62, 67], "formula": [1, 2, 4, 7, 19, 34, 51, 58, 62, 66], "compute\u0441": 1, "c_i": [1, 44], "neq": [1, 7, 8], "c_j": [1, 58], "loop": [1, 34], "Then": [1, 13, 15, 29, 31, 34, 49, 58, 59, 61], "control": [1, 2, 4, 15, 19, 21, 28, 33, 34, 37, 39, 40, 41, 43, 51, 58, 59, 61], "z": [1, 2, 3, 7, 11, 15, 33, 36, 44, 50, 51, 55, 58, 59, 62, 66], "asymptot": [1, 49], "save": [1, 19, 21, 36, 51, 59], "increas": [1, 7, 8, 9, 10, 21, 49, 51, 57, 58, 59], "counter": 1, "enough": [1, 7, 10, 19, 44, 54], "exactli": [1, 15, 59, 62], "number_of_edg": [1, 52], "bit_length": 1, "far": [1, 28, 54], "frugal": 1, "didn": [1, 4, 19], "mention": [1, 19, 48, 66, 68], "everyth": [1, 15, 57], "handl": [1, 4, 7, 9, 15, 18, 19, 55, 58, 59, 62, 63], "circuit": [2, 3, 4, 7, 9, 12, 13, 14, 15, 18, 21, 26, 27, 28, 33, 34, 37, 38, 39, 40, 41, 44, 49, 53, 56, 57, 60, 62, 64, 65, 67, 68], "languag": [2, 12, 15, 28, 43], "command": [2, 18, 26, 30, 31, 43, 50], "purpos": [2, 5, 19, 28, 44, 51, 57, 58, 59, 62, 63], "serial": [2, 4, 12, 19, 34, 37, 38, 50, 51], "quantum": [2, 3, 5, 7, 12, 14, 15, 18, 21, 26, 27, 28, 35, 37, 38, 39, 40, 41, 44, 51, 52, 55, 56, 57, 60, 61, 62, 65, 68], "strongli": [2, 48, 68], "advis": [2, 28, 33], "binari": [2, 7, 12, 34, 35, 36, 51, 57, 62], "dump": [2, 4, 12, 19, 36, 37, 38, 51, 65], "rather": [2, 3, 21, 50, 55, 58, 59], "matric": [2, 34, 48, 51, 57, 58, 59, 62, 68], "similar": [2, 7, 17, 20, 28, 37, 41, 58, 62, 69], "abstractg": [2, 4, 19, 50, 51, 59, 60, 65], "bodi": [2, 4, 5, 19, 54, 55, 59], "ressourc": 2, "constitu": [2, 51], "begin": [2, 3, 7, 10, 12, 37, 41], "cbit": [2, 12, 30, 34, 51, 59], "end": [2, 4, 7, 11, 12, 19, 26, 28, 34, 44, 47, 51, 58, 59, 62, 65], "syntax": [2, 4, 19, 28, 51, 59], "straightfoward": 2, "name": [2, 4, 19, 28, 31, 36, 37, 39, 40, 41, 50, 51, 55, 59, 60, 62, 66], "my_z": 2, "pyaqasm": [2, 4, 18, 19, 23, 32, 36, 43, 50, 51, 59, 60, 61, 65], "parametr": [2, 7, 9, 15, 34, 48, 51, 54, 58, 59, 62, 65, 68], "collect": [2, 7, 9, 15, 28, 37, 38, 44, 46, 48, 51, 54, 59, 62, 65, 68], "involv": [2, 7, 8, 10, 62], "param": [2, 21, 51, 59, 68], "ariti": [2, 4, 19, 34, 44, 50, 51, 58, 59, 60, 62, 65], "string": [2, 4, 7, 8, 15, 19, 30, 46, 51, 58, 59, 62], "my_rxrz": 2, "my_qft": 2, "after": [2, 19, 21, 28, 35, 36, 48, 49, 51, 59, 62, 64, 68], "qbit_list": [2, 59], "referenc": 2, "predefin": 2, "head": 2, "my_cz": 2, "ctrl": [2, 3, 4, 14, 15, 19, 36, 50, 51, 59], "dag": [2, 36, 37, 38, 50, 51, 58, 59], "conj": [2, 59], "tran": [2, 59], "y": [2, 33, 36, 44, 50, 51, 55, 57, 58, 59], "rx": [2, 3, 13, 21, 33, 36, 48, 50, 51, 54, 57, 59, 68], "ry": [2, 15, 21, 33, 36, 44, 48, 50, 51, 54, 57, 58, 59, 61, 65, 68], "rz": [2, 4, 19, 33, 36, 48, 50, 57, 58, 59, 65, 68], "pi": [2, 15, 21, 44, 50, 51, 57, 58, 59, 60], "measur": [2, 4, 7, 8, 19, 23, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 43, 44, 48, 49, 50, 51, 54, 57, 58, 59, 60, 64, 66, 68], "mea": [2, 12, 34], "If": [2, 4, 7, 8, 9, 12, 14, 15, 19, 21, 23, 25, 26, 28, 31, 32, 33, 34, 36, 37, 38, 42, 46, 50, 51, 55, 58, 59, 60, 61, 62, 64, 68], "index": [2, 3, 4, 19, 21, 34, 46, 51, 58, 59, 62, 64], "indic": [2, 4, 19, 28, 34, 36, 54, 58, 59, 60], "reset": [2, 4, 19, 33, 34, 50, 51, 59, 60], "manipul": [2, 4, 7, 11, 15, 18, 19, 34, 37, 41, 43, 55, 67], "chang": [2, 7, 8, 10, 13, 15, 21, 28, 33, 37, 41, 44, 51, 54, 56, 57, 58, 60, 68], "boolean": [2, 4, 7, 19, 34, 36, 51, 62, 64], "logic": [2, 34, 51, 57, 59, 60, 62], "stand": [2, 58, 65], "express": [2, 7, 28, 60, 62], "break": [2, 4, 19, 34, 59, 60, 62], "build": [2, 4, 15, 18, 19, 50, 54, 56, 57, 58, 59, 60, 62, 64, 65, 67, 68], "note": [2, 7, 8, 18, 21, 44, 51, 57, 58, 62, 66], "hadamard": [2, 37, 38, 51], "vmatrix": 2, "sqrt": [2, 15, 51, 60, 66], "pauli": [2, 48, 51, 57, 58, 62, 68], "ident": [2, 49, 57, 59], "phase": [2, 37, 41, 43, 50, 53, 59], "shift": [2, 37, 38, 48, 50, 51, 57, 68], "foral": [2, 7, 58], "rm": 2, "r": [2, 7, 21, 36, 51, 55, 58], "rotat": [2, 7, 9, 48, 51, 58, 59, 62, 68], "co": [2, 44, 50, 51], "sin": [2, 50, 51], "NOT": [2, 19, 28, 50], "csign": [2, 33, 36, 50, 59], "swap": [2, 33, 36, 50, 60], "iswap": [2, 33, 50], "sqrtswap": [2, 33, 50], "ccnot": [2, 33, 36, 50], "through": [2, 18, 21, 28, 31, 33, 36, 43, 48, 50, 51, 58, 59, 61, 62, 68], "aqasm2circ": [2, 50], "infil": 2, "outfil": 2, "version": [2, 4, 6, 7, 19, 24, 26, 28, 30, 33, 51, 53, 54, 56, 58, 59], "implement": [2, 4, 5, 7, 9, 10, 11, 13, 15, 19, 21, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 66, 68], "wrote": 2, "my_lib": 2, "py": [2, 15, 19, 30, 43, 66], "misc": [2, 59], "function": [2, 3, 4, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 31, 32, 35, 36, 37, 38, 48, 51, 54, 55, 56, 57, 59, 62, 65, 68, 69], "qb": [2, 3, 13, 21, 51, 62], "inlin": [2, 4, 19, 43, 51, 59, 60, 67], "subcircuit": [2, 4, 19, 50, 51, 59], "place": [2, 5, 7, 8, 15, 28, 51, 59, 60, 62], "l": [2, 7, 11, 55, 57, 58, 61], "my_aqasm": 2, "circ": [2, 3, 4, 12, 13, 14, 15, 19, 21, 23, 30, 31, 50, 51, 54, 57, 58, 59], "arithmet": [2, 37, 38, 50, 51, 59], "sever": [3, 7, 11, 19, 28, 29, 34, 36, 43, 48, 51, 55, 57, 67, 68], "moreov": [3, 12, 21, 51, 59, 62], "perfectli": 3, "friendli": [3, 28, 51], "concept": [3, 51, 62], "while": [3, 7, 19, 24, 26, 28, 36, 51, 54, 55, 57, 63, 66], "flexibl": [3, 23, 31, 32, 36], "servic": [3, 19, 21, 28, 35, 36, 37, 41, 50], "insert": [3, 49, 51, 64, 65], "my_stack": [3, 21], "batchgener": [3, 36, 37, 41, 51], "post_process": [3, 5, 14, 21, 44, 51], "rest": [3, 15, 21, 35, 66], "mandatori": [3, 50], "spec": [3, 14, 16, 17, 20, 21, 22, 51, 63, 69], "specif": [3, 7, 8, 9, 14, 28, 34, 49, 60, 62], "link": [3, 5, 12, 18, 21, 28, 36, 37, 38, 43, 51, 59, 60, 62], "basic": [3, 7, 10, 13, 15, 19, 21, 34, 36, 37, 41, 43, 50, 51, 53, 54, 60, 62, 65, 67], "cat": 3, "abstractgener": [3, 37, 41, 51], "program": [3, 4, 7, 8, 12, 13, 14, 15, 18, 19, 21, 23, 26, 32, 36, 50, 51, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68], "catstategener": 3, "self": [3, 21, 33, 44, 50, 51, 59, 62], "target": [3, 4, 7, 8, 9, 19, 51, 58, 62], "zip": [3, 15, 29], "f": [3, 4, 7, 13, 15, 19, 49, 51, 54, 55, 57, 58, 64, 66], "2f": 3, "50": [3, 21, 28, 52, 57, 62, 66], "111": [3, 21], "iter": [3, 4, 5, 15, 19, 21, 37, 41, 46, 51, 57, 59, 66, 67, 68], "yield": [3, 7, 9, 33, 51, 66], "submiss": [3, 28, 37, 38], "advantag": 3, "than": [3, 7, 11, 14, 15, 28, 33, 51, 55, 57, 58, 59, 62, 68], "previou": [3, 12, 36, 50, 55, 58, 65], "tri": [3, 7, 10], "energi": [3, 7, 9, 10, 13, 15, 21, 35, 37, 38, 45, 51, 54, 57, 58, 62, 65, 68], "observ": [3, 15, 18, 21, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 47, 49, 54, 55, 57, 58, 62, 65, 67, 68], "dummi": [3, 51], "ansatz": [3, 7, 9, 15, 37, 41, 47, 48, 49, 53, 56, 57, 67, 68], "ground": [3, 7, 8, 9, 11, 15, 54, 57, 58, 62], "prod": 3, "rx_i": 3, "alpha_i": 3, "mode": [3, 13, 14, 36, 37, 41, 51, 58, 64], "angl": [3, 7, 9, 13, 21, 33, 47, 48, 50, 51, 57, 58, 68], "fix": [3, 7, 8, 47, 51, 62, 64], "ansarz": 3, "core": [3, 4, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 33, 34, 35, 50, 52, 55, 57, 58, 59, 60, 62, 63, 65, 66, 68, 69], "ob": [3, 19, 35, 51, 57, 62, 65, 66], "dummyenergyminim": 3, "wall": [3, 15], "gate": [3, 13, 15, 18, 21, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68], "practis": 3, "better": [3, 7, 9, 54, 56, 58], "must": [3, 13, 28, 36, 44, 46, 47, 48, 51, 58, 68], "enumer": [3, 13, 19, 21, 51, 57, 62], "new_var": [3, 13, 15, 21, 51, 54, 57, 58, 59, 62, 65, 68], "parameter_map": [3, 13, 51, 58, 65], "best_angles_circ": 3, "optim": [3, 5, 8, 10, 12, 15, 16, 17, 18, 20, 21, 22, 28, 35, 36, 37, 41, 50, 51, 53, 54, 56, 57, 58, 59, 65, 68, 69], "z_i": 3, "\u03c3": 3, "sigma_z": [3, 21, 51, 62, 68], "idx": [3, 13], "isclos": 3, "atol": 3, "continu": [3, 7, 8, 28, 62], "11111": 3, "00": [3, 15, 33, 51, 66], "item": [3, 19, 51], "neither": [3, 28, 64], "nor": 3, "batchresult": [3, 14, 21, 32, 33, 34, 36, 37, 39, 40, 41, 44, 51, 62], "catstateresult": 3, "assert": [3, 28, 52], "invalid": [3, 19], "bitstr": [3, 13, 51, 62, 66], "expect": [3, 13, 33, 44, 49, 51, 54, 57, 58, 60, 66], "list": [3, 18, 21, 23, 28, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 44, 45, 46, 49, 51, 54, 55, 56, 57, 58, 59, 62, 66], "standard": [4, 7, 15, 19, 33, 36, 44, 51, 57, 59, 62, 66], "interfac": [4, 7, 9, 18, 19, 21, 26, 28, 35, 36, 37, 41, 50, 54, 59, 62, 65, 67], "over": [4, 7, 10, 15, 19, 21, 28, 31, 32, 33, 34, 49, 51, 59, 61, 62, 65, 66], "5707963267948966": [4, 19, 21], "7853981633974483": [4, 19], "39269908169872414": [4, 19], "raw": [4, 6, 19, 51], "advanc": [4, 7, 8, 15, 19, 23, 26, 31, 32, 36, 43, 51, 53, 59, 65], "remap": [4, 19, 51, 60, 67], "_2": [4, 19], "_4": [4, 19], "_6": [4, 19], "concaten": [4, 19, 51], "overload": [4, 19, 21, 37, 41, 51, 59, 62, 65], "__add__": [4, 19], "tensor": [4, 19, 46, 48, 51, 57, 58, 61, 68], "__mult__": [4, 19, 51], "deseri": [4, 12, 19], "load": [4, 12, 19, 36, 37, 38, 51, 61], "bind": [4, 19, 21, 28, 51, 62, 68], "bind_vari": [4, 19, 51, 58], "easi": [4, 13, 18, 19, 51, 68], "access": [4, 19, 26, 33, 34, 51, 52, 54, 55, 57, 59, 60, 61, 62, 66], "nbcbit": [4, 19, 51], "At": [4, 7, 10, 19, 59, 62], "convent": [4, 7, 12, 19, 33, 34, 50, 51, 58], "extend": [4, 19, 21, 28, 37, 38, 51, 59], "match": [4, 7, 19, 48, 59, 62, 64, 68], "zero": [4, 7, 19, 37, 41, 51, 53, 54, 55, 57, 58, 62, 64, 66, 67], "field": [4, 7, 19, 28, 35, 37, 38, 44, 48, 51, 62, 66, 68], "total": [4, 19, 49, 58, 59], "ancilla": [4, 19, 43, 59], "alloc": [4, 15, 19, 23, 30, 59, 60], "emul": [4, 5, 7, 11, 19, 43, 64, 66, 67], "extens": [4, 7, 19, 57], "flow": [4, 19, 51], "qreg": [4, 19, 21, 30, 51, 59], "pleas": [4, 12, 14, 19, 21, 24, 26, 27, 28, 29, 33, 36, 37, 38, 41, 42, 50, 51, 53, 57, 58, 67], "refer": [4, 7, 12, 19, 27, 28, 33, 36, 37, 41, 43, 50, 51, 53, 54, 57, 59, 62, 68], "get": [4, 18, 19, 21, 36, 43, 51, 54, 56, 57, 58, 66], "main": [4, 5, 12, 18, 32, 34, 36, 50, 58, 59, 62, 63, 66], "formal": [4, 7, 11, 13, 19, 35, 66], "document": [4, 7, 11, 15, 19, 21, 27, 28, 33, 34, 37, 38, 41, 44, 50, 53, 54, 55, 58, 59, 62, 66, 68], "comm": [4, 15, 19, 34, 51, 66], "datamodel": [4, 19, 34], "ttype": [4, 15, 19, 34, 51, 66], "distinguish": [4, 19], "between": [4, 7, 9, 13, 19, 21, 26, 35, 37, 38, 49, 51, 56, 57, 58, 59, 60, 62, 64, 68], "attribut": [4, 6, 19, 21, 28, 34, 37, 39, 40, 41, 51, 54, 56, 59, 61, 64], "str": [4, 16, 17, 19, 20, 22, 34, 36, 44, 46, 49, 51, 57, 58, 59, 62, 68, 69], "uniqu": [4, 19, 62], "identify": [4, 19], "optyp": [4, 19], "rpf": [4, 19], "permut": [4, 19, 33], "precis": [4, 7, 19, 21, 33, 51, 54, 58, 68], "classicctrl": [4, 19, 34], "gatetyp": [4, 19, 34, 51], "onc": [4, 7, 9, 15, 19, 36, 50, 51, 54, 56, 57, 61, 65], "variou": [4, 7, 11, 19, 28, 44, 50, 52, 54, 56, 58, 59, 60, 66, 67], "relev": [4, 19, 28, 44, 56], "exact": [4, 15, 19, 54, 58, 62, 66], "prefix": [4, 19, 51, 60], "evalu": [4, 15, 19, 21, 34, 37, 38, 49, 51, 58, 59, 62, 66], "abort": [4, 19], "formula_ev": [4, 19, 51], "cbit_valu": [4, 19], "rewir": [4, 19], "seen": [4, 7, 19, 21, 51, 54, 55, 57, 62], "integ": [4, 19, 34, 35, 50, 51, 58, 62, 64, 68], "receiv": [4, 19, 21, 28, 35, 48, 51, 68], "kei": [4, 19, 44, 51, 59, 62], "gated": [4, 19, 51], "entri": [4, 19, 21, 51, 62], "gatedefinit": [4, 19], "nrow": [4, 19], "ncol": [4, 19], "complexnumb": [4, 19, 21, 51], "7071067811865475": [4, 15, 19, 66], "im": [4, 19, 21], "is_ctrl": [4, 19], "is_dag": [4, 19], "is_tran": [4, 19], "is_conj": [4, 19], "subgat": [4, 19, 51], "gsyntax": [4, 19], "nbctrl": [4, 19, 59], "circuit_implement": [4, 19], "toggl": [4, 19], "instanti": [4, 15, 19, 21, 35, 36, 47, 51, 58, 59, 62, 65, 66], "manual": [4, 19, 32, 54], "writ": [4, 19], "definit": [4, 7, 19, 28, 43, 50, 51, 55, 58, 59, 62], "unitari": [4, 19, 34, 51, 54, 57, 59], "column": [4, 19], "row": [4, 19], "bool": [4, 5, 6, 13, 14, 19, 33, 36, 46, 47, 48, 51, 58, 59, 62, 68], "deprec": [4, 7, 8, 19, 26, 32, 50, 53, 56, 62], "conjug": [4, 19, 58, 59], "transpos": [4, 19, 58, 59], "signifi": [4, 19, 59], "strict": [4, 19], "There": [4, 5, 7, 11, 15, 19, 21, 59], "three": [4, 7, 9, 19, 21, 36, 44, 48, 51, 53, 55, 59, 60, 62, 68], "id": [4, 19, 36], "transform": [4, 19, 21, 28, 37, 41, 43, 44, 53, 54, 55, 56, 57, 59, 60], "_0": [4, 19, 58, 62], "instruct": [5, 50, 51, 59, 62], "skip": [5, 21, 32, 36, 59, 60], "step": [5, 7, 11, 21, 35, 46, 50, 51, 54, 57, 58, 59, 60, 64], "default": [5, 7, 8, 13, 14, 15, 17, 20, 21, 23, 27, 30, 31, 32, 33, 34, 36, 44, 45, 46, 47, 48, 49, 51, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69], "behavior": [5, 7, 8, 13, 19, 34, 51, 60, 62, 63], "further": [5, 59], "pylinalg": [5, 12, 13, 19, 21, 33, 36, 37, 39, 40, 41, 59, 63, 67], "isinst": 5, "inplac": 5, "manag": [5, 28, 43], "make": [5, 7, 28, 33, 35, 42, 58, 59, 60, 62], "qat_circ": 5, "fly": 5, "beforehand": [5, 51], "worst": [5, 59], "perfom": 5, "deepcopi": [5, 51, 58], "process": [5, 7, 14, 15, 18, 21, 28, 35, 36, 44, 50, 51, 57, 59, 64, 66, 67], "classmethod": [5, 44, 51], "addarg": [5, 44], "parser": [5, 30, 44], "compil": [5, 14, 18, 21, 27, 28, 31, 32, 44, 50, 51, 64, 65], "_spec": [5, 44], "do_post_process": [5, 14, 21, 44, 51], "post": [5, 14, 21, 28, 44, 51, 64, 67], "graphpartitioningresult": [6, 16, 17, 22, 62], "graph": [6, 7, 8, 20, 22, 43, 44, 51, 67, 69], "arg": [6, 15, 31, 36, 51, 59, 62], "kwarg": [6, 15, 16, 17, 20, 22, 23, 30, 31, 32, 36, 44, 51, 59, 62, 65, 68, 69], "partit": [6, 43, 62, 67], "represent": [6, 14, 17, 20, 28, 34, 35, 51, 53, 54, 56, 57, 58, 59, 67, 69], "under": [6, 28, 33, 43, 50, 51, 57], "visual": [6, 51], "with_figur": 6, "figsiz": 6, "node_s": 6, "300": [6, 45, 68], "font_siz": 6, "draw_networkx": 6, "matplotlib": 6, "pyplot": 6, "figur": [6, 50], "tupl": [6, 23, 31, 32, 34, 35, 36, 51, 58, 62], "diagram": [6, 60], "font": 6, "kcliqueresult": [6, 20], "subclass": 6, "vertexcoverresult": [6, 69], "life": [7, 56], "intrins": 7, "lowest": [7, 9, 47, 58, 62, 65], "physic": [7, 11, 28, 34, 55, 62], "hamiltonian": [7, 8, 9, 11, 15, 17, 20, 35, 37, 41, 51, 53, 54, 56, 57, 62, 69], "due": [7, 28, 58, 66], "intim": 7, "minimum": [7, 8, 10, 11, 15, 48, 62, 68], "claus": [7, 59, 62], "anneal": [7, 43, 62, 67], "challeng": [7, 58], "effort": 7, "put": [7, 15, 23, 31, 32, 33, 36, 58], "year": 7, "luc14": 7, "direct": [7, 28, 51, 54, 55], "along": [7, 9, 11, 28, 35, 62, 66], "regard": [7, 28, 58, 62], "local": [7, 10, 15, 19, 21, 32, 48, 51, 57, 68], "sum_": [7, 10, 11, 15, 34, 35, 55, 58, 60, 61, 62], "h_": [7, 8, 10, 11, 55, 58], "sigma_": [7, 11], "j_": [7, 10, 11, 35], "ij": [7, 10, 35, 46, 58], "pmatrix": 7, "coeffici": [7, 48, 49, 51, 57, 58, 65, 68], "magnet": [7, 35, 37, 38, 62], "symmetr": [7, 62], "diagon": [7, 9, 15, 44, 54, 58, 62], "coupl": [7, 35, 37, 38, 54, 62], "quantiz": [7, 58], "s_": [7, 10, 11, 58, 62], "interact": [7, 26, 29, 33, 51, 54, 55, 58, 62], "restrict": [7, 8, 28, 54, 56, 58, 62], "clariti": [7, 56], "readabl": [7, 28, 50], "includ": [7, 18, 23, 28, 31, 32, 33, 34, 35, 36, 37, 41, 47, 50, 51, 53, 55, 56, 58, 59, 60, 68], "Such": [7, 28, 48, 62, 68], "landscap": 7, "convert": [7, 12, 23, 31, 32, 34, 36, 54, 55, 58, 66], "vice": [7, 12, 23, 27, 32, 36], "versa": [7, 12, 23, 27, 36], "typic": [7, 11, 58], "try": [7, 13, 19, 21, 37, 39, 40, 41, 42, 51, 54, 62, 65], "reach": [7, 21, 49, 54], "reli": [7, 15, 37, 38], "adiabat": [7, 8, 58], "theorem": [7, 8], "al18": 7, "configur": [7, 10, 11, 26, 28, 35, 36, 51, 58], "markov": [7, 10], "chain": [7, 10, 51], "space": [7, 15, 21, 37, 41, 51, 53, 54, 56, 57, 58, 59], "low": [7, 10, 16, 17, 20, 21, 22, 37, 41, 51, 54, 57, 60, 62, 69], "ferromagnet": 7, "align": 7, "onto": [7, 34, 64], "tend": [7, 65], "lower": [7, 9, 10, 33, 51, 54, 56, 58, 60, 62, 68], "closer": 7, "aim": [7, 10, 11, 37, 41, 53, 62], "min_": 7, "left": [7, 11, 34, 46, 49, 50, 51, 58, 59, 60, 62], "to_qubo": [7, 62], "combinatorialproblem": [7, 9, 62], "to_combinatorial_problem": [7, 62], "quadrat": [7, 15, 35], "unconstrain": [7, 35], "x_": [7, 55], "q_": 7, "written": [7, 28, 33, 34, 37, 41, 51, 55], "mean": [7, 19, 28, 36, 44, 51, 54, 57, 59, 60, 62, 66], "element": [7, 15, 35, 51, 58, 59, 62], "becaus": [7, 26, 66], "quad": 7, "effect": [7, 8, 28, 34, 51, 59, 60, 66], "linear": [7, 9, 37, 41, 49, 51, 52, 57, 62, 67], "2x_": 7, "to_is": [7, 62], "explicitli": [7, 28], "var": [7, 62], "achiev": 7, "accept": [7, 10, 28, 34, 51, 55, 58, 59], "desir": [7, 26, 27, 58], "weight": [7, 8, 13, 62, 68], "heurist": [7, 9, 10, 11, 33, 62], "ans\u00e4tz": [7, 9, 11, 62, 65], "inspir": [7, 9, 58, 60, 62], "evolut": [7, 9, 34, 35, 51, 58, 62], "ramp": [7, 9, 62], "initi": [7, 8, 9, 28, 34, 46, 47, 48, 50, 51, 54, 56, 57, 58, 59, 61, 62, 64, 66, 68], "h_0": [7, 8, 9, 62], "sum_i": [7, 9, 35, 51, 58, 61, 62, 65], "sigma_x": [7, 8, 9, 51, 62, 65], "shape": [7, 9, 19, 34, 54, 58, 61], "h_c": [7, 8, 9], "propag": [7, 9], "gamma": [7, 9, 11, 62, 68], "beta": [7, 9, 21, 58, 61], "simpli": [7, 9, 21, 51, 59, 62], "r_x": [7, 9, 62], "quantiti": [7, 9, 13, 51], "langl": [7, 9, 15, 46, 49, 51, 57, 58, 59, 65, 66], "overlap": [7, 8, 9, 58, 62], "d": [7, 9, 28, 51, 58, 62], "layer": [7, 9, 54, 58, 62, 63, 65], "theori": [7, 9, 28, 54, 56, 58], "greater": [7, 9], "slow": [7, 9], "down": [7, 9, 21, 44, 51, 53, 57, 58], "converg": [7, 9, 48, 68], "fulli": [7, 9, 30, 51, 52, 56], "fgg14": [7, 9], "readi": [7, 9, 37, 38, 62], "care": [7, 9, 28, 49, 54, 62, 65], "vsolv": [7, 9, 15, 62], "ansatzfactori": [7, 9, 62], "recip": [7, 9, 59, 62], "factori": [7, 9, 15, 62], "pick": [7, 9, 26, 57, 62, 68], "strategi": [7, 9, 58, 60, 62], "histor": [7, 10], "decreas": [7, 10, 11, 28, 54, 57, 59, 62, 66], "stochast": [7, 10, 51, 57, 68], "temperatur": [7, 10, 11, 16, 17, 20, 22, 35, 62, 69], "jump": [7, 10], "barrier": [7, 10], "escap": [7, 10], "optima": [7, 10], "settl": [7, 10, 11, 28], "hopefulli": [7, 10], "global": [7, 8, 10, 57], "optimum": [7, 10], "mathemat": [7, 10, 50], "choos": [7, 10, 28, 33, 45, 46, 51, 54, 57, 62], "evolv": [7, 8, 10, 51], "p_": [7, 10, 51], "min": [7, 10, 21, 51, 54, 57, 62], "delta": [7, 10, 58], "incur": [7, 10, 28], "switch": [7, 10, 66], "wherea": [7, 10, 49, 51], "neglig": [7, 10, 28], "pictur": [7, 10, 11, 50], "explain": [7, 10, 21], "pseudo": [7, 10, 11, 57], "work": [7, 10, 11, 14, 21, 26, 28, 30, 34, 37, 38, 49, 57, 58, 60, 65], "antiferromagnet": [7, 10, 15], "model": [7, 10, 15, 51, 54, 55, 56, 57, 61], "question": [7, 11, 42], "those": [7, 11, 28, 51, 64, 66], "matter": [7, 11, 60], "hot": [7, 11], "scientif": [7, 11], "debat": [7, 11], "beyond": [7, 11, 28], "scope": [7, 11, 21, 43, 59], "reader": [7, 11], "ronnowwj": [7, 11], "dbi": [7, 11], "16": [7, 11, 17, 22, 52], "hja": [7, 11], "aa17": [7, 11], "discret": [7, 11], "path": [7, 11, 29, 50], "integr": [7, 11, 54, 58], "mont": [7, 11, 62], "carlo": [7, 11, 62], "derivedf": [7, 11], "martovnakst02": [7, 11], "short": [7, 11, 34], "equilibrium": [7, 11], "distribut": [7, 11, 15, 24, 26, 28, 33, 34, 37, 38, 51, 57, 59, 61], "finit": [7, 11, 51], "k": [7, 11, 15, 20, 33, 34, 43, 46, 51, 55, 58, 59, 60, 61, 62], "n_": [7, 11, 21, 49, 57, 58, 66], "trotter": [7, 11, 37, 41, 53, 58, 62], "perp": [7, 11], "cdot": [7, 11], "tanh": [7, 11], "replac": [7, 11, 28, 36, 49, 51, 56, 57, 59], "gradual": [7, 11], "prepar": [7, 8, 11, 15, 19, 28, 37, 38, 50, 57, 58, 59, 62, 66], "transit": [7, 11], "idea": [7, 11, 57, 58], "point": [7, 11, 21, 34, 47, 49, 51], "gamma_": [7, 11], "kept": [7, 11], "memori": [7, 11, 19, 33, 34, 55, 59, 61], "polynomi": [7, 11, 62], "limit": [7, 11, 28, 34, 66], "techniqu": [7, 11, 48, 57, 62, 68], "sqaqpu": [7, 11], "qualiti": [7, 11, 28, 35, 56, 58], "fine": [7, 11, 21, 50, 62], "tune": [7, 11, 48, 50, 68], "solver": [7, 11, 21, 35, 56, 62], "test": [7, 11, 28, 30, 35, 37, 38, 51], "benchmark": [7, 11, 35, 62], "record": [7, 11], "qa": 7, "framework": [7, 8, 13, 18, 26, 27, 62], "util": [7, 8, 56, 60], "often": [7, 8, 14, 55, 62], "independ": [7, 8, 28, 51, 59, 62], "mix": [7, 8, 23, 49, 62], "slowli": [7, 8], "accord": [7, 8, 28, 46, 51, 58, 60], "descib": [7, 8], "earlier": [7, 8, 54, 57], "erdos_renyi_graph": [7, 8], "tmax": [7, 8, 51, 62], "annealing_job": [7, 8, 62], "47": [7, 8, 52, 66], "hamitonian": [7, 8], "otim": [7, 8, 62, 66], "alreadi": [7, 8, 51, 54, 57, 58, 59, 61], "pre": [7, 8, 60], "mixingfactori": [7, 8, 62], "move": [7, 8, 62], "subspac": [7, 8, 43, 53], "ham": [7, 8, 13, 62], "search": [7, 8, 15, 21, 43, 58, 59], "bit_mov": [7, 8, 62], "deprecationwarn": [7, 8, 62], "alia": [7, 8, 51, 62], "builtin": [7, 8, 62], "silenc": [7, 8, 62], "warn": [7, 8, 32, 62], "itself": [7, 8, 50, 51, 54, 62, 65], "modifi": [7, 8, 28, 34, 51, 58, 59, 62], "safe": [7, 8, 59, 62], "scalar": [7, 8, 19, 51, 62], "complex128": [7, 8, 62], "guidanc": [7, 8, 62], "http": [7, 8, 28, 32, 62, 68], "org": [7, 8, 24, 26, 28, 37, 38, 62, 68], "devdoc": [7, 8, 62], "html": [7, 8, 62], "lead": [7, 8, 19, 57, 62], "trivial": [7, 8, 21, 44, 59, 61], "tameem": 7, "albash": 7, "daniel": 7, "lidar": 7, "review": 7, "modern": 7, "90": 7, "015002": 7, "2018": 7, "url": [7, 34, 51], "journal": 7, "ap": 7, "rmp": 7, "1103": 7, "revmodphi": 7, "evgeni": 7, "andriyash": 7, "mohammad": 7, "amin": 7, "2017": [7, 61], "arxiv": [7, 48, 60, 68], "1703": 7, "09277": 7, "vasil": 7, "denchev": 7, "sergio": 7, "boixo": 7, "sergei": 7, "isakov": 7, "nan": 7, "ding": 7, "ryan": 7, "babbush": 7, "vadim": 7, "smelyanskii": 7, "john": 7, "martini": 7, "hartmut": 7, "neven": 7, "tunnel": [7, 58], "031015": 7, "2016": 7, "prx": 7, "physrevx": 7, "edward": 7, "farhi": 7, "jeffrei": 7, "goldston": 7, "sam": 7, "gutmann": 7, "2014": [7, 62], "1411": [7, 60], "4028": 7, "itai": 7, "hen": 7, "joshua": 7, "troel": 7, "\u00f8": 7, "nnow": 7, "matthia": 7, "troyer": 7, "probe": 7, "speedup": 7, "glass": 7, "plant": 7, "92": 7, "042325": 7, "2015": 7, "pra": 7, "physreva": 7, "andrew": 7, "luca": [7, 62], "frontier": 7, "www": [7, 28], "frontiersin": 7, "articl": [7, 45, 57, 58], "3389": 7, "fphy": 7, "00005": 7, "roman": 7, "marto": 7, "\u0148": 7, "\u00e1": 7, "giusepp": 7, "santoro": 7, "erio": 7, "tosatti": 7, "dimension": 7, "ising": [7, 51], "66": 7, "094203": 7, "2002": 7, "prb": 7, "physrevb": 7, "zhihui": 7, "wang": 7, "david": 7, "wecker": 7, "detect": [7, 51], "scienc": [7, 61], "345": 7, "6195": 7, "420": 7, "424": 7, "sciencemag": 7, "combinatori": [8, 9, 10, 16, 17, 18, 20, 22, 35, 65, 69], "script": [12, 30], "decompil": [12, 28], "ato": [12, 26, 28, 36, 37, 38, 43, 50, 67], "assembli": [12, 43], "useabl": 12, "learn": [12, 15, 28, 37, 38, 57, 66], "about": [12, 15, 34, 37, 38, 50, 51, 54, 55, 59, 67], "suppli": [12, 36], "assum": [12, 13, 21, 28, 32, 44, 48, 51, 54, 57, 59, 61, 68], "my_prog": 12, "my_prog_2": 12, "coulb": 12, "direclti": 12, "class_nam": [12, 59], "stdout": [12, 37, 38], "batchout": 12, "jobout": 12, "natur": [12, 28, 36, 37, 41, 43, 53, 54, 56, 57, 58, 66, 67], "batchr": 12, "statist": [12, 37, 38, 51, 60, 66], "interpret": [12, 16, 17, 20, 22, 28, 69], "weigth": 13, "maximim": 13, "easier": [13, 28, 56], "focu": 13, "chosen": [13, 46, 58, 60, 68], "illustr": [13, 15, 54, 58, 65, 66], "cost_funct": 13, "retriev": [13, 21, 31, 36, 37, 39, 40, 41, 44, 61], "higher": [13, 21, 33, 51, 58, 59, 60], "job_fixed_angl": 13, "result_fixed_angl": 13, "5e": 13, "9e": 13, "is_result_argu": 13, "6e": 13, "my_funct": 13, "callabl": [13, 44, 51], "use_result": 13, "graphic": 14, "explicit": [14, 51], "termin": [14, 28, 51], "jupyt": [14, 26, 29, 51, 53, 54, 55, 57], "qatdisplai": [14, 26], "magic": [14, 26], "bell": [14, 15, 30], "pair": [14, 15, 30, 43, 44, 49, 51, 57, 58, 62, 64], "press": 14, "too": [14, 55, 58], "big": [14, 55, 58], "entir": [14, 28, 34, 58], "arrow": [14, 60], "keyboard": 14, "batchmod": [14, 51, 64], "wait": [14, 36, 51], "next": [14, 19], "stop": [14, 19, 45, 46, 59, 68], "hardwarespec": [14, 16, 17, 20, 21, 22, 37, 39, 40, 41, 51, 52, 63, 67, 69], "hello": 15, "world": 15, "qprog": [15, 66], "export": [15, 28, 31, 59], "processor": [15, 18, 19, 34, 43, 51, 52, 67], "unit": [15, 18, 35, 66], "compon": [15, 50, 66], "atom": [15, 37, 41, 53, 54, 56], "task": [15, 44, 66], "remain": [15, 28, 58, 59, 61], "power": [15, 18, 28, 35, 61], "literatur": 15, "grover": [15, 43, 59], "unstructur": 15, "faster": [15, 33, 37, 41, 62], "oracl": [15, 59], "mathcal": [15, 44, 49, 58, 66], "rightarrow": 15, "uniform": [15, 21, 59], "u_f": 15, "mapsto": [15, 60], "diffus": [15, 59], "u_d": 15, "dive": 15, "2k": [15, 51], "undo": 15, "revert": [15, 51], "simplifi": [15, 21, 54, 55, 56, 58], "uncomput": [15, 43, 59], "clearer": 15, "palindrom": 15, "mirror": 15, "rememb": 15, "sign": [15, 49, 51, 58, 62], "b_1": 15, "b_": [15, 60], "b_2": 15, "half": [15, 34], "origin": [15, 28, 57], "again": [15, 54, 59], "is_palindrom": 15, "first_half": 15, "second_half": 15, "w1": [15, 59], "w2": [15, 59], "And": [15, 19, 50], "henc": [15, 19, 44, 58, 59], "approx": [15, 58], "diff": [15, 51], "superposit": [15, 51, 59, 62], "nstep": [15, 21], "0000": 15, "24999999999999956": [15, 59], "0110": 15, "1001": 15, "1111": 15, "decent": 15, "particularli": [15, 19], "curiou": 15, "custom": [15, 18, 43, 51, 57, 60, 63, 65], "believ": 15, "suit": [15, 53], "noisi": [15, 28, 34, 49, 57, 58], "scale": 15, "nisq": [15, 18], "long": [15, 51, 59, 68], "nevertheless": 15, "heisenberg": 15, "theta_i": [15, 46], "go": [15, 16, 17, 20, 21, 22, 48, 49, 58, 69], "nqbit": [15, 21, 51, 54, 55, 58], "pauli_term": [15, 19, 51, 57, 66], "xx": [15, 44, 58, 65], "yy": [15, 58], "zz": [15, 19, 44, 51, 55, 58, 62], "reg": [15, 21, 54, 57, 58], "theta_": [15, 57, 58], "nbshot": [15, 19, 21, 33, 34, 51, 58, 62, 66], "100": [15, 21, 57, 58, 66, 68], "optimizer_scipi": 15, "x0": [15, 46, 48, 54, 57, 58, 68], "vqe": [15, 18, 37, 41, 43, 47, 53, 56, 57, 58, 65, 67], "capi_return": 15, "null": [15, 28, 51], "back": [15, 21, 51, 57, 62, 66], "cb_calcfc_in__cobyla__user__routin": 15, "31": [15, 37, 41, 52], "198": [15, 66], "commonqpu": [15, 51, 66], "201": [15, 66], "junction": [15, 37, 39, 40, 41, 43], "82": 15, "_submit_batch": [15, 66], "79": 15, "103": [15, 19], "scipy_bind": 15, "105": 15, "usr": 15, "lib64": 15, "python3": 15, "site": [15, 55, 58], "packag": [15, 28, 54, 58, 59, 60, 67], "_minim": 15, "705": 15, "_minimize_cobyla": 15, "fun": [15, 51], "callback": 15, "_cobyla_pi": 15, "34": [15, 51, 52], "wrapper": [15, 21, 32, 33, 36, 37, 41, 51, 52, 58, 59, 66], "func": [15, 51, 59], "273": 15, "xopt": 15, "info": [15, 34, 47, 54, 58], "calcfc": 15, "rhobeg": 15, "261": 15, "evaluate_aux": 15, "89": 15, "144": 15, "124": [15, 66], "240": [15, 66], "clinalg": [15, 37, 41, 51, 66, 67], "submit_job": [15, 21, 32, 34, 35, 51, 66], "246": [15, 66], "278": [15, 66], "_calculate_expectation_valu": [15, 66], "except": [15, 28, 34, 37, 39, 40, 41, 51, 58, 60, 62, 65, 66], "qpuexcept": [15, 19, 37, 39, 40, 41, 66], "modulenam": [15, 19, 66], "messag": [15, 19, 59, 66], "observablesplitt": [15, 21, 66, 67], "scipy_arg": [16, 17, 20, 22, 69], "dict": [16, 17, 20, 22, 32, 33, 34, 36, 51, 58, 68, 69], "graph_colouring_appl": 16, "sqa_best_paramet": [16, 17, 20, 22, 69], "sqa_best_parameters_dict": [16, 17, 20, 22, 69], "temp_max": [16, 17, 20, 22, 62, 69], "temp_min": [16, 17, 20, 22, 62, 69], "5000": [16, 17, 20, 22, 69], "graph_colouring_gener": 16, "schedule_batch": [16, 17, 20, 22, 69], "special": [16, 17, 18, 20, 22, 28, 62, 69], "combinatorialoptimizergener": [16, 17, 20, 22, 69], "number_of_colour": [16, 62], "sent": [16, 17, 20, 21, 22, 28, 30, 31, 49, 50, 51, 69], "graph_partitioning_appl": 17, "23": [17, 19, 20, 21, 22, 51, 52, 54, 57], "25": [17, 22, 37, 40, 52, 68], "26": [17, 22, 52], "28": [17, 22, 52], "29": [17, 22, 52], "17": [17, 22, 52, 69], "18": [17, 22, 52, 66], "22": [17, 22, 51, 52, 54, 62], "graph_partitioning_gener": 17, "doubl": [17, 20, 33, 35, 51, 58, 62, 69], "h_a": [17, 20, 62, 69], "h_b": [17, 20, 62, 69], "multipli": [17, 19, 20, 57, 60, 62, 69], "equat": [17, 20, 51, 62, 69], "factor": [17, 20, 22, 58, 60, 62, 69], "softwar": [18, 28, 67], "semant": [18, 21, 51], "univers": [18, 43, 63], "versatil": 18, "api": [18, 21, 34, 36, 37, 41, 51], "mitig": [18, 28, 37, 41, 43, 53, 56, 57, 67], "seamless": 18, "major": [18, 24, 26], "interoper": 18, "fermion": [18, 51, 56, 57, 67], "devic": [18, 37, 39, 40, 41, 51], "contribut": [18, 28], "seri": [19, 58, 66], "articul": 19, "around": [19, 34, 36, 58], "page": [19, 27, 28, 33, 42, 58, 65, 66], "read": [19, 26, 28, 51, 58, 65], "view": [19, 33], "fit": [19, 21, 28, 49, 57], "shot": [19, 21, 34, 36, 51, 57, 58, 65], "send": [19, 21, 31, 37, 41, 51], "request": [19, 25, 51], "1024": [19, 51], "issu": [19, 28, 57], "my_observ": 19, "xz": [19, 55, 58, 66], "zxzx": 19, "constant_coeff": [19, 51, 54, 58], "obs1": 19, "obs2": 19, "__xor__": 19, "zzx": 19, "commut": [19, 44, 45, 55, 57], "__or__": 19, "2j": 19, "yz": [19, 58], "2048": 19, "encapsul": 19, "raw_data": [19, 21, 51], "cf": [19, 34], "value_data": [19, 21, 44, 51], "meta_data": [19, 21, 32, 33, 34, 36, 37, 39, 40, 41, 44, 51, 54, 58, 65, 68], "transmit": [19, 21, 51], "intermediate_measur": [19, 21, 51], "summar": 19, "err": [19, 21, 44, 51, 58, 66], "environ": [19, 26, 29, 32, 36, 51], "serializ": [19, 51], "activ": [19, 30, 37, 38, 41, 53, 54, 56, 58], "rais": [19, 34, 37, 39, 40, 41, 51, 59, 62], "thrift": [19, 51, 59], "useful": 19, "remot": [19, 28, 37, 38], "server": [19, 34, 51], "cleanli": [19, 59], "catch": 19, "client": [19, 51], "suppos": [19, 36], "pluginexcept": 19, "clear": [19, 51], "understand": 19, "went": 19, "wrong": 19, "pack": 19, "errortyp": 19, "invalid_arg": 19, "nonresult": 19, "illegal_g": 19, "unknown": [19, 58], "not_simulat": 19, "simulat": [19, 37, 41], "abort_cod": 19, "addition": [19, 51, 52, 59, 65], "character": 19, "include_matric": [19, 59], "excp": 19, "encount": 19, "calloc": [19, 50, 51, 59], "cbreak": [19, 50, 59], "kclique_appl": 20, "cliqu": [20, 43, 62], "kclique_gener": 20, "deal": [21, 58, 59], "necessari": [21, 28, 51, 59, 66], "Their": [21, 50], "plugin1": 21, "plugin2": 21, "my_qpu": 21, "overal": [21, 57, 62], "wide": [21, 55], "But": [21, 34], "importantli": 21, "show": [21, 51, 54, 57, 58, 59], "rudimentari": 21, "mere": [21, 28, 66], "inherit": [21, 34, 37, 41, 51, 55, 56, 59, 62, 68], "qpuhandl": [21, 33, 34, 35, 36, 51, 58, 63], "aggregate_data": [21, 51], "myqpu": 21, "gate_nam": 21, "els": [21, 34, 55, 62], "anyth": [21, 28, 29], "randint": [21, 62], "add_sampl": [21, 51], "110": 21, "010": [21, 64], "aggreg": [21, 44, 51, 59], "histogram": 21, "500": 21, "101": [21, 68], "114": 21, "011": 21, "098": 21, "138": 21, "142": 21, "001": [21, 46, 58], "122": 21, "126": 21, "frequenc": [21, 51, 66], "mathrm": [21, 46, 49, 57, 58, 60, 66], "abstractplugin": [21, 51], "myplugin": 21, "third": [21, 28, 60], "discuss": [21, 28], "hardware_spec": [21, 52], "someth": 21, "_amplitud": 21, "3535533905932737": 21, "12499999999999994": 21, "_state": 21, "qregist": [21, 51, 59], "0x154b3e425850": 21, "msb": [21, 51], "_subtype_metadata": 21, "0x154b3e425ac0": 21, "0x154b3e425be0": 21, "0x154b3e425d00": 21, "incom": [21, 50], "batch_result": [21, 44], "need_flip": 21, "lsb_first": [21, 51], "has_statevector": [21, 51], "statevector": [21, 37, 41, 51, 64], "_valu": 21, "0x14f0e5bce880": 21, "0x14f0e5bceaf0": 21, "0x14f0e5bcec10": 21, "0x14f0e5bced30": 21, "error_data": 21, "in_memori": 21, "_parameter_map": 21, "values_data": 21, "0x14f0e5bd4550": 21, "0x14f0e5bd47c0": 21, "0x14f0e5bd48e0": 21, "0x14f0e5bd4a00": 21, "0x14f0e5bd7220": 21, "0x14f0e5bd7490": 21, "0x14f0e5bd75b0": 21, "0x14f0e5bd76d0": 21, "saw": 21, "0x14f573e249d0": 21, "0x14f573e24c40": 21, "0x14f573e24d60": 21, "0x14f573e24e80": 21, "0x14f573e2b6a0": 21, "0x14f573e2b910": 21, "0x14f573e2ba30": 21, "0x14f573e2bb50": 21, "0x14f573e2d370": 21, "0x14f573e2d5e0": 21, "0x14f573e2d700": 21, "0x14f573e2d820": 21, "outgo": [21, 50], "deloc": 21, "distant": 21, "otherwis": [21, 26, 28, 32, 36, 51, 64], "emb": [21, 58], "adapt": [21, 28, 37, 41, 51, 53, 56, 57, 65, 67], "middl": 21, "simpler": [21, 62], "eigensolv": [21, 37, 41, 43, 53], "give": [21, 28, 50, 51], "until": [21, 36, 58], "satfisfi": 21, "cous": 21, "outsid": [21, 58], "prevent": [21, 28], "workflow": [21, 66], "architectur": [21, 24, 26, 52], "enter": [21, 28, 48, 58, 68], "With": 21, "treatment": 21, "stage": [21, 58, 59], "naiv": [21, 44], "width": [21, 34, 62], "explor": [21, 51, 62], "ecount": 21, "iterativeexplor": 21, "super": [21, 67], "initial_job": 21, "get_vari": [21, 37, 39, 40, 41, 46, 51, 62, 65], "linspac": 21, "all_valu": 21, "val": [21, 59], "current_job": 21, "min_val": 21, "best_index": 21, "best_param": 21, "9979453927503363": 21, "077478517802246": 21, "recept": [21, 51], "associ": [21, 28, 47, 51, 54, 57, 58, 62], "meta": [21, 37, 39, 40, 41, 51, 65], "acc": [21, 60], "__call__": [21, 51, 65], "upper": [21, 58], "don": [21, 28, 34], "bother": 21, "administr": [21, 51, 59], "burden": [21, 51], "slightli": 21, "creation": [21, 43], "serv": [21, 34, 51], "port": [21, 32, 34, 51], "ip": [21, 32, 51], "1234": 21, "remoteplugin": [21, 51], "listen": [21, 32, 34, 51], "127": [21, 32], "extra": 21, "synchron": [21, 36], "disconnect": 21, "lost": [21, 59], "launch": 21, "remoteqpu": [21, 51], "neg": [22, 59, 62], "max_cut_gener": 22, "binder": [23, 29, 31, 32, 36, 37, 41], "googl": [23, 52], "throught": [23, 32], "cirq_to_qlm": 23, "qlm_to_cirq": 23, "interop": [23, 26, 29, 30, 31, 32, 36, 37, 41], "qlm_circ": 23, "your_google_circ": 23, "google_circ": 23, "your_qlm_circ": 23, "linequbit": 23, "gridqubit": 23, "grid": [23, 52], "coordin": 23, "sep_measur": [23, 31, 32, 36], "won": [23, 31, 32, 36, 59], "measureless": [23, 31, 32, 36], "resulting_circuit": [23, 31, 32, 36], "list_qubit": [23, 31, 32, 36], "normal": [23, 28, 31, 32, 36, 37, 41, 56, 58, 61], "regular": [23, 31, 32, 36, 46, 52], "qlm_circuit": [23, 32, 36], "convers": [23, 28, 36], "linux": [24, 26, 37, 38], "window": [24, 26, 37, 38, 58], "maco": [24, 26, 37, 38], "64": [24, 26, 52], "x86_64": [24, 26], "brew": [24, 26, 37, 38], "caus": [24, 26, 28, 58], "segment": [24, 26, 64], "fault": [24, 26, 28], "situat": [24, 26], "uninstal": [24, 26], "minor": [24, 26], "share": [25, 28, 34, 51], "project": [25, 33, 34, 58, 66], "contributor": [25, 28], "contrib": 25, "fork": [25, 34, 51], "commit": 25, "push": 25, "pull": 25, "licenc": 26, "agreement": [26, 28], "eula": [26, 28], "carefulli": [26, 28], "permit": [26, 28], "pursuant": 26, "legal": [26, 28], "entiti": [26, 28], "bull": [26, 28, 67], "By": [26, 27, 28, 36, 50, 51, 57, 59, 60, 68], "download": [26, 28, 29, 36], "render": 26, "agre": [26, 28], "bound": [26, 28, 51, 58, 59], "licens": [26, 67], "promptli": 26, "delet": [26, 56], "prompt": 26, "tutori": [26, 29, 57], "imagemagick": 26, "wand": 26, "guid": 26, "overview": [26, 29, 43, 50, 59], "ipynb": [26, 29], "tabl": [26, 29, 30], "enabl": [26, 58], "qiskit": [26, 27, 29, 37, 41, 43], "projectq": [26, 27, 29, 43], "pyquil": [26, 27, 29, 43], "cirq": [26, 27, 29, 30, 43], "someon": 26, "who": [26, 28], "cherri": 26, "qiskit_bind": 26, "projectq_bind": 26, "cirq_bind": 26, "pyquil_bind": 26, "conflict": [26, 28], "ye": 27, "openqasm": [27, 43], "na": 27, "backend": [27, 33, 51], "FOR": 28, "hereinaft": 28, "recit": 28, "compani": 28, "person": 28, "oblig": 28, "identifi": [28, 58, 62], "footnot": 28, "media": 28, "materi": 28, "onlin": 28, "electron": [28, 54, 58], "primari": [28, 59], "student": 28, "research": 28, "develop": [28, 33], "laptop": 28, "benefit": [28, 37, 38, 63], "accordingli": [28, 58], "runtim": [28, 36, 37, 41], "apach": 28, "v2": 28, "categori": 28, "root": [28, 60], "folder": 28, "compli": 28, "thereof": 28, "shall": 28, "THE": 28, "wish": [28, 60, 62], "OF": 28, "grant": 28, "author": [28, 51, 67], "acknowledg": 28, "refrain": 28, "violat": 28, "whatsoev": 28, "thereund": 28, "confidenti": 28, "subject": [28, 62], "provis": 28, "nondisclosur": 28, "parti": 28, "reproduc": [28, 42], "disclos": 28, "exercis": 28, "extent": 28, "disclosur": 28, "employe": 28, "consult": [28, 55], "advisor": 28, "prior": [28, 59, 67], "approv": 28, "forego": 28, "satisfi": [28, 50, 62], "degre": [28, 62], "less": [28, 51, 59], "reason": [28, 51, 55], "whom": 28, "protect": 28, "notwithstand": 28, "breach": 28, "compel": 28, "judici": 28, "government": 28, "investig": [28, 47], "proceed": 28, "assist": 28, "opportun": 28, "contrari": 28, "herein": 28, "liabl": 28, "prove": 28, "public": [28, 46, 57, 59, 60], "domain": 28, "ii": [28, 58], "demonstr": 28, "iii": 28, "iv": 28, "vi": 28, "remedi": 28, "immedi": 28, "irrepar": 28, "harm": 28, "monei": 28, "damag": 28, "alon": 28, "inadequ": 28, "compens": 28, "event": 28, "entitl": 28, "seek": 28, "equit": 28, "relief": 28, "restrain": 28, "injunct": 28, "perman": 28, "bond": 28, "secur": 28, "miscellan": [28, 34], "assign": [28, 34, 62, 64], "sublicens": 28, "deleg": [28, 51], "transfer": [28, 62], "consent": 28, "merg": [28, 51], "consolid": 28, "purchas": 28, "substanti": 28, "asset": 28, "stock": 28, "assigne": 28, "enforc": [28, 51], "against": [28, 59], "successor": 28, "unauthor": 28, "void": 28, "constitut": 28, "regul": 28, "technologi": 28, "complianc": 28, "forc": [28, 62], "majeur": 28, "respons": [28, 36], "delai": [28, 51], "failur": 28, "payment": 28, "circumst": 28, "forese": 28, "god": 28, "earthquak": 28, "hurrican": 28, "volcan": 28, "erupt": 28, "strike": 28, "lockout": 28, "riot": 28, "civil": 28, "unrest": 28, "protest": 28, "war": 28, "epidem": 28, "communic": 28, "diseas": 28, "outbreak": 28, "health": 28, "emerg": 28, "superimpos": 28, "fire": 28, "commun": [28, 42], "disast": 28, "period": 28, "opinion": 28, "affect": [28, 58], "six": [28, 51], "month": 28, "date": 28, "virtu": 28, "aforesaid": 28, "endeavour": 28, "effecti": 28, "cooper": 28, "faith": 28, "adopt": [28, 62], "impact": 28, "off": [28, 54], "nearshor": 28, "proportion": 28, "adequ": 28, "govern": 28, "disput": 28, "resolut": 28, "franc": 28, "rule": [28, 37, 38, 46, 48, 51, 57, 58, 68], "exclus": 28, "jurisdict": 28, "venu": 28, "compet": 28, "court": 28, "pari": 28, "manner": 28, "within": [28, 34, 36, 59], "sixti": 28, "dai": 28, "copyright": [28, 67], "2021": [28, 37, 38, 39, 48, 57, 68], "reserv": [28, 67], "worldwid": 28, "forth": [28, 57, 62], "locat": [28, 56, 61, 62], "premis": 28, "intend": 28, "network": 28, "deriv": [28, 36, 37, 38, 51, 65], "market": 28, "publish": [28, 34, 51], "rent": 28, "leas": 28, "loan": 28, "commerci": 28, "alter": 28, "engin": [28, 31], "disassembl": 28, "human": [28, 50], "perceiv": 28, "lend": 28, "sell": 28, "resel": 28, "intellectu": 28, "treati": 28, "sold": 28, "furthermor": [28, 62], "trademark": 28, "mark": 28, "pertain": 28, "NO": 28, "warranti": 28, "AS": 28, "ITS": 28, "supplier": 28, "licensor": 28, "TO": 28, "BY": 28, "disclaim": 28, "impli": [28, 34], "statutori": 28, "BUT": 28, "merchant": 28, "satisfactori": 28, "titl": 28, "infring": 28, "risk": 28, "aris": [28, 57], "WITH": 28, "liabil": 28, "IN": 28, "BE": 28, "substitut": 28, "incident": 28, "indirect": 28, "consequenti": 28, "loss": [28, 45, 57], "busi": 28, "profit": 28, "interrupt": [28, 50], "inabl": 28, "IF": 28, "SUCH": 28, "amount": [28, 51], "paid": 28, "THAT": 28, "bear": 28, "technic": 28, "inaccuraci": 28, "typograph": 28, "januari": 28, "2004": 28, "reproduct": 28, "owner": 28, "union": [28, 45, 51, 58], "contract": [28, 34, 51], "ownership": [28, 33], "fifti": 28, "percent": 28, "outstand": 28, "benefici": 28, "permiss": 28, "prefer": [28, 54, 55], "modif": [28, 66], "authorship": 28, "appendix": 28, "editori": 28, "revis": 28, "annot": [28, 59], "elabor": 28, "whole": [28, 37, 38, 58], "intention": 28, "inclus": [28, 51], "behalf": 28, "verbal": 28, "mail": 28, "track": 28, "improv": [28, 53, 56, 57, 58, 64], "exclud": 28, "conspicu": 28, "Not": [28, 51], "subsequ": [28, 55, 56], "incorpor": 28, "herebi": 28, "perpetu": 28, "charg": [28, 54, 58], "royalti": 28, "irrevoc": 28, "publicli": 28, "patent": 28, "claim": 28, "institut": 28, "litig": 28, "cross": 28, "counterclaim": 28, "lawsuit": 28, "alleg": 28, "contributori": 28, "redistribut": 28, "medium": 28, "meet": [28, 50], "recipi": 28, "promin": 28, "retain": 28, "wherev": 28, "alongsid": 28, "addendum": 28, "constru": 28, "statement": [28, 34, 59], "unless": [28, 60], "noth": [28, 59], "supersed": 28, "trade": 28, "customari": 28, "kind": [28, 51, 68], "appropri": [28, 44, 51, 61, 62], "tort": 28, "deliber": 28, "grossli": 28, "charact": [28, 51], "goodwil": 28, "stoppag": 28, "malfunct": 28, "fee": 28, "indemn": 28, "indemnifi": 28, "defend": 28, "harmless": 28, "boilerpl": 28, "enclos": [28, 58], "bracket": [28, 59], "comment": [28, 59], "recommend": [28, 33, 58, 61], "identif": 28, "archiv": 28, "browser": 29, "web": 29, "mybind": 29, "clone": 29, "github": [29, 42], "repositori": 29, "qasm": [30, 50], "bash": 30, "oqasm2circ": 30, "oqasmpars": 30, "bell_data": 30, "creg": 30, "cx": 30, "flawlessli": 30, "haven": 30, "write_t": 30, "debug": [30, 51, 59], "tabmodul": 30, "oqasm_tab": 30, "chunk": 30, "tab": [30, 51], "aqasmprint": 31, "aqasmengin": 31, "cengin": 31, "mainengin": 31, "aq": 31, "eng": 31, "engine_list": 31, "allocate_qureg": 31, "recov": 31, "projectq_to_qlm": 31, "modulenotfounderror": 31, "stream": 31, "vers": 32, "pyquil_to_qlm": 32, "qlm_to_pyquil": 32, "your_pyquil_circuit": 32, "pyquil_circuit": 32, "your_qlm_circuit": [32, 36], "qvm": 32, "15011": 32, "get_qc": 32, "qcs_settings_applications_pyquil_qvm_url": 32, "9q": 32, "qlm_job": 32, "pyquil_prog": 32, "program_pragma": 32, "rigetti": [32, 52], "chip": [32, 36, 37, 39, 40, 41, 52], "tell": 32, "set_qpu": [32, 36], "embed": [32, 33, 34, 36, 51, 55, 58], "propos": [33, 58], "pybind11": 33, "use_gpu": 33, "use_nbthreads_heurist": 33, "light_circuit": 33, "tqdm": 33, "readonly_statevector": 33, "gpu": 33, "thread": [33, 34, 51], "omp_num_thread": 33, "progress": 33, "lsb": [33, 51], "sens": 33, "perfect": [33, 62], "hidden": [33, 51], "thought": 33, "resiz": 33, "intuit": 33, "i_0i_1i_2i_3": 33, "signific": [33, 51, 59, 60], "i_3i_2i_1i_0": 33, "influenc": [33, 57, 62], "clinalgstatevectorcpudoubl": 33, "apply_1qbit_ctrl_g": 33, "ctrl_qubit": 33, "apply_1qbit_g": 33, "apply_2qbit_ctrl_g": 33, "qubit1": 33, "qubit2": 33, "apply_2qbit_g": 33, "apply_ccnot": 33, "qubit3": 33, "apply_cnot": 33, "apply_csign": 33, "apply_h": 33, "qbits_c": 33, "apply_iswap": 33, "apply_ph": 33, "apply_rx": 33, "apply_ri": 33, "apply_rz": 33, "apply_": 33, "apply_sqrtswap": 33, "apply_swap": 33, "apply_t": 33, "apply_x": 33, "apply_i": 33, "apply_z": 33, "apply_nqbit_ctrl_g": 33, "apply_nqbit_g": 33, "edit": 33, "rightmost": 33, "array_readonli": 33, "readonli": 33, "expectation_valu": 33, "wobserv": 33, "get_distribut": 33, "amp_threshold": [33, 51, 66], "margin": 33, "valuabl": 33, "get_mapped_distribut": 33, "mapintdoubl": 33, "map": [33, 37, 39, 40, 41, 51, 58], "get_mapped_statevector": 33, "dictionari": [33, 44, 51, 58, 62, 65], "threshold": [33, 51, 56, 58, 59, 66], "get_permuted_statevector": 33, "psi_0_ptr": 33, "pure": [33, 50, 51, 59], "nbqubit": 33, "undefin": 33, "mapintint": 33, "occur": [33, 34, 51, 57], "sample_subset": 33, "set_num_thread": 33, "nbthread": 33, "simulate_circuit": 33, "wcircuit": 33, "clinalgwcircuit": 33, "lightweight": 33, "state_prob": 33, "ndarrai": [34, 48, 51, 58, 61, 62, 68], "vert": [34, 58], "psi": [34, 46, 51, 58, 62, 65, 66], "i_": [34, 55, 58, 61], "a_": [34, 55, 58, 60], "tensordot": 34, "remark": 34, "exponenti": [34, 49, 56, 57, 60], "ram": 34, "account": 34, "realist": 34, "nois": [34, 37, 41, 43, 53, 56, 57, 65, 66, 67], "linalg": [34, 37, 38, 51, 54, 57, 58, 68], "host_ip": [34, 51], "localhost": [34, 51], "server_typ": [34, 51], "multi": [34, 51, 54], "pool": [34, 45, 51, 56, 57, 59], "imbric": 34, "processingtyp": [34, 51], "ask": [34, 42], "intermediatemeasur": [34, 51], "descriptor": 34, "branch": 34, "mainli": [34, 51], "success": [34, 36, 68], "clasic": 34, "state_vec": 34, "nb_sampl": 34, "thank": [34, 58, 62], "absenc": [34, 66], "intprob_list": 34, "renorm": 34, "afterward": [34, 59], "prob": [34, 54], "intprob": 34, "undergo": 34, "intermediari": [34, 48, 68], "ax": 34, "recomput": 34, "norm": [34, 51], "nd": 34, "raise_break": 34, "op_po": 34, "mat2nparrai": 34, "equip": 35, "varieti": 35, "albeit": 35, "resembl": 35, "seed": [35, 68], "arithexpress": [35, 37, 38, 51, 62], "temp": 35, "j_coupl": 35, "h_mag": 35, "temp_list": 35, "2d": [35, 58, 62], "1d": [35, 62], "extract_j_and_h_from_ob": 35, "e_i": [35, 62], "s_i": 35, "s_j": 35, "h_i": [35, 51], "offset_i": [35, 62], "integer_to_spin": 35, "n_spin": 35, "decim": [35, 54], "spins_to_integ": 35, "solution_configur": 35, "spins_arrai": 35, "qiskit_to_qlm": 36, "qlm_to_qiskit": 36, "your_qiskit_circuit": 36, "qiskit_circuit": 36, "qiskitruntimeqpu": [36, 37, 41], "sampler": 36, "estim": [36, 37, 41, 43, 44, 51, 53, 57, 59, 66], "primit": 36, "ibmq_qasm_simul": 36, "qiskitruntimeservic": 36, "credenti": 36, "save_account": 36, "qiskit_ibm_runtim": 36, "ibm": [36, 37, 41, 52], "token": [36, 51], "my_ibm_token": 36, "channel": [36, 57], "ibm_quantum": 36, "backendtoqpu": 36, "ibmq_backend": 36, "ibmq_armonk": 36, "ibmq": 36, "asyncbackendtoqpu": 36, "asynchron": 36, "qiskitjob": 36, "async_qpu": 36, "async_result": [36, 37, 38], "sleep": 36, "qputobackend": 36, "qiskit_result": 36, "rxx": 36, "rzz": 36, "quantumcircuit": 36, "old": 36, "futur": [36, 51], "skip_transpil": 36, "experi": [36, 37, 41, 58], "backend_nam": 36, "transpil": 36, "optimization_level": 36, "despit": 36, "aer_simul": 36, "argment": 36, "login": 36, "qiskit_token": 36, "light": 36, "heavi": 36, "promis": 36, "retrieve_job": 36, "file_nam": 36, "qlm_batch": 36, "jobv1": 36, "async_job": 36, "max_shot": 36, "cancel": 36, "job_id": 36, "statu": 36, "connector": 36, "plugabl": 36, "backendconfigur": 36, "octob": [37, 41], "2022": [37, 40, 41, 67], "algebra": [37, 41, 55, 56, 67], "jordan": [37, 41, 53, 55], "wigner": [37, 41, 53, 55], "bravyi": [37, 41, 53, 55], "kitaev": [37, 41, 53, 55], "pariti": [37, 41, 53, 55], "ucc": [37, 41, 43, 53, 54, 55, 56], "molecul": [37, 41, 43, 53, 54, 57, 58], "studi": [37, 41, 53, 54, 56, 57], "select": [37, 41, 45, 51, 53, 54, 56, 57, 58], "gradient": [37, 38, 41, 43, 45, 51, 53, 56, 57, 65, 67], "sequenti": [37, 41, 43, 53, 56, 57, 67, 68], "hybrid": [37, 41, 53, 56, 57, 58, 68], "extrapol": [37, 41, 53, 57, 67], "multiqubit": [37, 41, 43, 53, 56, 57, 67], "submatrices_onli": [37, 39, 40, 41, 51, 59], "processing_typ": [37, 39, 40, 41, 51], "quameleonplugin": [37, 39, 40, 41, 51, 67], "zuchongzhi": [37, 39, 40, 41, 52], "chines": [37, 39, 40, 41], "qiksit": [37, 41], "throw": [37, 39, 40, 41], "cleaner": [37, 39, 40, 41], "sort": [37, 39, 40, 41, 51, 58], "differenti": [37, 38, 39, 40, 41, 43, 51], "u2": [37, 41], "u3": [37, 41], "april": [37, 40], "decemb": [37, 39], "june": [37, 38], "qlmaa": [37, 38], "nnizer": [37, 38], "remote_stack": [37, 38], "join": [37, 38, 42], "occurr": [37, 38, 49], "gather": [37, 38, 59], "partial": [37, 38, 46, 51], "multivari": [37, 38], "kerenidi": [37, 38, 61], "prakashqram": [37, 38], "kptree": [37, 38, 59, 61], "substract": [37, 38, 59], "divis": [37, 38], "sigsegv": [37, 38], "bug": 42, "slack": 42, "group": [42, 44, 51, 58], "ticket": 42, "report": 42, "beginn": 43, "hubbard": [43, 54, 55], "chemistri": [43, 53, 55, 56, 58], "h2": 43, "lih": [43, 54], "expans": [43, 53], "multiplelaunchesplugin": 43, "fourier": [43, 60], "avala": 43, "quick": 43, "amplif": [43, 59], "splitter": 43, "epr": 43, "max": [43, 51, 58, 62, 67], "cut": [43, 62, 67], "cover": [43, 62, 67], "analyz": 43, "x_0": [44, 66], "x_1": 44, "z_1z_2": 44, "boil": [44, 57], "z_1": [44, 66], "z_2": 44, "q_i": 44, "split": [44, 56], "splitting_method": 44, "x_basis_chang": 44, "y_basis_chang": 44, "approach": [44, 50, 58, 60], "color": [44, 62], "greedi": [44, 62], "clifford": 44, "entangl": [44, 58, 62], "todai": 44, "ignor": [44, 51, 59, 62], "coincid": 44, "iff": [44, 51], "get_fresh_kei": 44, "adaptvqeplugin": [45, 56, 57, 58], "operator_pool": 45, "n_iter": [45, 57], "early_stopp": 45, "06": 45, "grimslei": 45, "et": [45, 48, 56, 57, 58, 62, 68], "al": [45, 48, 56, 57, 58, 62, 68], "spinhamiltonian": [45, 55, 56, 57], "lambda_step": 46, "natural_gradi": [46, 57], "stop_crit": 46, "grad_norm": 46, "user_custom_g": 46, "vec": [46, 51, 58, 65], "eta": [46, 57], "nabla": [46, 57], "_i": [46, 58, 61], "metric": [46, 57], "g_": 46, "bigg": 46, "theta_j": [46, 51], "1000": [46, 66], "criterion": 46, "energy_dist": 46, "toler": [46, 59], "randomli": [46, 68], "n_run": 47, "verbos": [47, 48, 58, 68], "duplic": 47, "upstream": 47, "familiar": 48, "yourself": 48, "ncycl": [48, 58, 68], "coeff": [48, 51, 68], "rotosolv": [48, 68], "nakanishi": [48, 57, 68], "1903": [48, 68], "12166": [48, 68], "2020": [48, 57, 68], "ostaszewski": [48, 57, 68], "1905": [48, 68], "09692": [48, 68], "cycl": [48, 58, 68], "leverag": [48, 57, 68], "p": [48, 57, 58, 60, 67, 68], "rescal": [48, 68], "n_in": 49, "extrap_g": 49, "extrap_method": 49, "decomposit": 49, "gg": [49, 57, 62], "tr": 49, "rho_": 49, "hat": [49, 51, 57, 58], "strength": 49, "propto": 49, "ins": 49, "an_": [49, 57], "pm": [49, 51, 57], "infer": [49, 57, 59], "latter": [49, 57, 58], "Be": 49, "correctli": 49, "facilit": 50, "central": 50, "my_program": 50, "qbits_reg": [50, 59], "cbits_reg": 50, "explanatori": 50, "outermost": 50, "famili": [50, 59], "c_matrix": 50, "phi": [50, 54, 58], "customg": 50, "mat": 50, "my_minus_z": 50, "inexist": 50, "my_routin": 50, "outcom": [50, 51], "cc_appli": [50, 59], "condition": 50, "submodul": [50, 56, 59], "unifi": 50, "wrapper_post_process": 51, "postprocessresult": 51, "mininm": 51, "abctract": 51, "met": 51, "hostnam": 51, "hand": [51, 59], "built": [51, 55, 58, 59, 61, 62, 65], "address": [51, 61], "behav": [51, 59], "handler": 51, "adjunct": 51, "goe": 51, "forward": 51, "remotebatchgener": 51, "unicod": 51, "remoteappl": 51, "psi_0": [51, 62], "vname": 51, "w": [51, 58], "psi_i": 51, "induc": 51, "twice": 51, "fname": [51, 59], "from_byt": 51, "byte": 51, "from_thrift": 51, "tobject": 51, "shift_qbit": 51, "icreas": 51, "to_thrift": [51, 59], "enum": 51, "boson": 51, "do_clean_up": [51, 58], "hermitian": 51, "hilbert": 51, "span": 51, "pauli_op": 51, "do_validity_check": 51, "coeffcient": 51, "xxy": 51, "front": [51, 63], "check_valid": 51, "On": [51, 66], "drive": 51, "tname": 51, "gamma_t": [51, 62], "lambda_i": 51, "driven": 51, "halt": 51, "largest": 51, "possibli": 51, "infinit": [51, 58], "apparit": 51, "prune": 51, "unlik": 51, "t_variabl": 51, "tmax_vari": 51, "145": 51, "schedule1": 51, "schedule2": 51, "heavisid": 51, "ponder": 51, "signal": 51, "filter": [51, 66], "45": [51, 52], "past": 51, "bar": 51, "thriftresult": 51, "deviat": [51, 58], "dictionnari": 51, "wrap_sampl": 51, "qreg_list": 51, "varepsilon_": 51, "equiv": [51, 58, 60], "f_": [51, 58], "p_k": 51, "f_k": 51, "set_qreg": 51, "pretti": 51, "int_msb_valu": 51, "__str__": 51, "lsb_int": 51, "reprensent": 51, "gate_po": 51, "cat_circuit": 51, "tensori": 51, "kron_circuit": 51, "my_circuit": 51, "new_circuit": 51, "_gate_set": 51, "has_matric": 51, "var_dic": 51, "ancilla_map": 51, "_serialized_gate_set": 51, "0x14f8875087f0": 51, "v_name": 51, "v_valu": 51, "gate_set": [51, 59, 62, 63, 65], "regener": 51, "portion": 51, "side": [51, 63], "avoid": 51, "feel": 51, "gateset": [51, 59, 63], "freshli": 51, "v_dictionari": 51, "fill": 51, "dagger_from_param": 51, "crawl": [51, 59], "valueerror": 51, "linker": 51, "_10": 51, "_8": 51, "asbtract": 51, "invert": [51, 60], "334": 51, "smarter": 51, "smart_dagg": 51, "printer": 51, "plot_in_notebook": 51, "consol": [51, 67], "fill_matric": 51, "include_default_gate_set": 51, "insert_g": 51, "remove_lock": [51, 59], "lock": [51, 59], "placehold": 51, "094947017729282e": 51, "constain": 51, "max_depth": 51, "circuit_nam": 51, "renaming_dict": 51, "ascii": 51, "art": 51, "fmt": 51, "pdf": 51, "filenam": 51, "hardware_model": 51, "plot": 51, "cell": [51, 55], "shell": 51, "ipython": 51, "get_ipython": 51, "svg": 51, "timeplot": 51, "alias": 51, "topologi": [51, 52, 63, 64, 67], "as_graph": 51, "to_nx": [51, 52], "rigetti_aspen": [51, 52], "nx_graph": 51, "as_quameleon": 51, "quameleon": [51, 63], "is_direct": 51, "thrifttopologi": 51, "topologytyp": [51, 63], "lnn": [51, 52, 63], "add_edg": 51, "qb1": 51, "qb2": 51, "toplogi": 51, "from_nx": 51, "vmap": 51, "init_non": 51, "getter": 51, "set_nbqbit": 51, "all_to_al": 51, "consecut": [51, 68], "init": 51, "behind": 51, "gatesignatur": [51, 59], "arg_typ": 51, "get_circuit": 51, "get_matrix": [51, 54, 56, 57, 58], "gen": 51, "dictio": 51, "add_signatur": [51, 59], "signa": 51, "redefin": [51, 59], "gatesyntaxredefinit": 51, "new_gate_set": 51, "gatesyntax": 51, "var_typ": [51, 59], "numer": [51, 58], "forbidden": 51, "other_var": 51, "rpn": 51, "symbol": 51, "children": [51, 62], "arbitrari": [51, 61], "label": [51, 58, 62], "from_str": 51, "thrift_str": 51, "invers": [51, 57, 62], "pretty_print": 51, "infix": 51, "pretty_token": 51, "ast": 51, "omit": [51, 59], "wouldn": 51, "dx": 51, "all_symbol": 51, "cyfunct": 51, "0x1508b77e2860": 51, "0x1508b77e2a00": 51, "0x1508b77e2ba0": 51, "uminu": 51, "0x1508b77e2d40": 51, "0x1508b77e2ee0": 51, "0x1508b6ce7110": 51, "ufunc": 51, "0x1508b6ce75f0": 51, "ln": 51, "0x1508b921ddc0": 51, "imag": 51, "0x1508b921df70": 51, "0x1508b8d53670": 51, "ab": [51, 58], "absolut": 51, "atan2": 51, "my_min": 51, "awar": 51, "formula_str": 51, "circuit_build": [51, 59], "matrix_util": 51, "get_predef_gener": 51, "get_param_gener": 51, "default_gate_set": [51, 59], "saemlessli": 51, "qlm_object": 51, "initial_object": 51, "binding_kwarg": 51, "particul": 51, "variablenam": 51, "fetch": 51, "hood": 51, "var_nam": [51, 59], "triplet": 51, "optimizer_data": 51, "superconduct": 52, "agav": 52, "rigetti_agav": 52, "aspen": 52, "burlington": 52, "ibm_burlington": 52, "yorktown": 52, "ibm_yorktown": 52, "melbourn": 52, "ibm_melbourn": 52, "rueschlikon": 52, "ibm_rueschlikon": 52, "tokyo": 52, "ibm_tokyo": 52, "singapor": 52, "ibm_singapor": 52, "johannesburg": 52, "ibm_johannesburg": 52, "sycamor": 52, "google_sycamor": 52, "35": [52, 58], "44": 52, "49": 52, "36": [52, 62], "32": [52, 60], "41": 52, "37": 52, "46": 52, "33": [52, 59], "42": 52, "51": 52, "38": 52, "43": [52, 62], "52": 52, "39": 52, "48": 52, "53": [52, 66], "54": 52, "55": 52, "56": 52, "57": 52, "58": 52, "59": 52, "61": 52, "62": 52, "63": 52, "65": 52, "linedevic": 52, "nearest": [52, 58], "neighbor": 52, "griddevic": 52, "dimx": 52, "dimi": 52, "3x2": 52, "dimens": [52, 58, 61], "squaregriddevic": 52, "dim": 52, "squar": 52, "3x3": 52, "alltoal": 52, "revamp": 53, "dq": [53, 56], "changelog": 53, "broken": 53, "flagship": 54, "electronicstructurehamiltonian": [54, 55, 56], "hpq": [54, 58], "hpqr": [54, 58], "hamiltonian_sp": 54, "to_spin": [54, 55, 56, 58], "eigenenergi": [54, 58], "exact_energi": 54, "eigh": 54, "previous": [54, 57], "nenergi": 54, "ntheta": 54, "9999999974320526": 54, "1416940034276815": 54, "2147911128415545": 54, "chemist": 54, "molecular": [54, 56], "cluster": [54, 56], "guess": [54, 56, 58], "m\u00f8ller": [54, 58], "plesset": [54, 56, 58], "perturb": [54, 56, 58, 68], "h_2": 54, "introduc": [54, 56, 65], "meant": [54, 58, 62], "thorough": 54, "whatev": 54, "sake": [54, 57], "pyscf": [54, 56, 58], "perform_pyscf_comput": [54, 58], "geometri": [54, 58], "pyscf_tool": [54, 58], "li": 54, "75": 54, "31g": 54, "rdm1": [54, 58], "orbital_energi": [54, 58], "nuclear_repuls": [54, 58], "n_electron": [54, 58], "one_body_integr": [54, 58], "two_body_integr": [54, 58], "mol_h": [54, 58], "9071609330057144": 54, "get_electronic_hamiltonian": [54, 55, 56, 58], "transform_basi": [54, 58], "select_active_spac": [54, 58], "orbit": [54, 58], "occup": [54, 58], "noon": [54, 58], "basis_chang": 54, "axi": [54, 61, 66], "mol_h_new_basi": 54, "proce": 54, "mol_h_act": 54, "active_indic": [54, 58], "occupied_indic": [54, 58], "threshold_1": [54, 58], "02": [54, 58], "threshold_2": [54, 58], "002": 54, "nuclear": [54, 58], "repuls": [54, 58], "bring": 54, "occupi": [54, 58], "ldca": 54, "correl": [54, 55, 58], "mr": 54, "four": [54, 58], "excit": 54, "preserv": [54, 62, 64], "mrep": 54, "eight": 54, "compress": 54, "eigenvalu": [54, 56, 58], "eigenvector": 54, "make_hubbard_model": [54, 58], "t_mat": [54, 58], "mu": [54, 58], "eigval": [54, 58], "eigvalsh": [54, 57, 58], "round": 54, "1403": 54, "phase_estim": [54, 58, 59], "perform_phase_estim": [54, 58], "nqbits_phas": 54, "n_trotter_step": [54, 58], "guess_energi": 54, "size_interv": [54, 58], "e_target": [54, 58], "002343750000000089": 54, "trotteris": [54, 58], "make_trotterisation_routin": [54, 58], "qrout": 54, "final_tim": [54, 58], "apply_quantum_subspace_expans": [54, 58], "fermionhamiltonian": [55, 56], "z_": 55, "y_": 55, "zy": [55, 58], "c_": [55, 58, 62], "cc": [55, 58], "cccc": [55, 58], "to_electron": [55, 56, 58], "pq": [55, 58], "a_p": [55, 58], "a_q": [55, 58], "pqr": [55, 58], "a_r": [55, 58], "mathbb": [55, 58], "h_pq": [55, 58], "h_pqr": [55, 58], "h_elec": 55, "htype": 55, "to_fermion": [55, 56, 58], "uv": [55, 58], "sigma": [55, 58], "uvwx": [55, 58], "convert_to_h_integr": [55, 58], "molecularhamiltonian": [55, 56], "bare": 55, "much": 55, "5j": 55, "h_fermion": 55, "h_spin": 55, "825": 55, "175": 55, "h_fermion1": 55, "h_fermion2": 55, "h_spin1": 55, "h_spin2": 55, "fermion_comutator_matrix": 55, "spin_comutator_matrix": 55, "is_equal_sign": 55, "wick": [55, 56, 58], "speed": 55, "anderson": 55, "toi": 55, "strong": 55, "impur": [55, 56], "bath": [55, 58], "bugfix": 56, "qchem": 56, "renam": 56, "rewritten": 56, "simplif": 56, "moleculeinfo": 56, "restrict_active_spac": [56, 58], "gradientdescentoptim": [56, 57, 58, 67], "descent": [56, 57, 67], "seqoptim": [56, 57, 58, 65, 67, 68], "nakanashi": 56, "zeronoiseextrapol": [56, 57, 58, 67], "multiplelaunchesanalyz": [56, 57, 58, 65, 67], "fermionic_util": 56, "exact_eigen_energi": 56, "fermionic_hamiltonian_exponenti": 56, "reloc": 56, "ansatz_circuit": 56, "build_ucc_ansatz": 56, "ucc_deprec": 56, "construct_ucc_ansatz": [56, 58], "clarifi": 56, "compute_active_space_integr": [56, 58], "_compute_active_space_const": 56, "build_cluster_op": 56, "privat": 56, "select_active_orbit": [56, 58], "init_uccsd": 56, "trial": [56, 58], "mollet": 56, "2nd": [56, 58], "get_initial_params_and_cluster_op": 56, "mainten": 56, "guess_init_param": [56, 58], "get_hf_ket": [56, 58], "hartre": [56, 57, 58], "fock": [56, 57, 58], "get_cluster_op": [56, 58], "select_excitation_oper": 56, "get_active_space_hamiltonian": 56, "said": 57, "slower": 57, "cluster_oper": 57, "harre": 57, "hf_init": 57, "char": 57, "adaptvqe_plugin": 57, "theta_init": 57, "1372701679264894": 57, "1372701679265027": 57, "sgd": 57, "adam": 57, "euclidean": 57, "distanc": 57, "baseless": 57, "assumpt": [57, 59], "rate": 57, "behaviour": 57, "fisher": 57, "steepest": 57, "fubini": 57, "devis": 57, "theta_0": 57, "theta_1": 57, "theta_2": 57, "theta_3": 57, "theta_4": 57, "natgrad_opt": 57, "learning_paramet": 57, "8660254037652464": 57, "certain": [57, 65, 66], "ic": 57, "outperform": 57, "sensit": [57, 65], "whch": 57, "regim": 57, "vari": 57, "intens": [57, 58], "artifici": 57, "2n_": 57, "consider": [57, 58], "faulti": 57, "depolar": 57, "fold": [57, 59], "endo": 57, "calcul": [57, 58, 62], "rangle_": 57, "richardson": 57, "giurgica": 57, "tiron": 57, "unclear": 57, "varianc": 57, "essenti": 58, "4j": 58, "normal_ord": 58, "4d": 58, "dr": 58, "phi_": 58, "particl": [58, 68], "kin": 58, "pot": 58, "coulomb": 58, "randn": 58, "rand": 58, "5532839131720042": 58, "delta_": 58, "sigma_1": 58, "sigma_2": 58, "ux": 58, "vw": 58, "iint": 58, "r_": 58, "resp": 58, "phi_u": 58, "wavefunct": [58, 66], "freez": 58, "n_i": 58, "ca": 58, "divid": 58, "inact": 58, "unchang": 58, "varepsilon_2": 58, "varepsilon_1": 58, "cup": 58, "geq": [58, 62], "n_e": 58, "e_": 58, "ijji": 58, "ijij": 58, "descend": 58, "transformation_matrix": 58, "u_": [58, 60], "qi": 58, "jq": 58, "ijkl": 58, "qj": 58, "kr": 58, "molecular_hamiltonian": 58, "5112834182036611": 58, "6624354009648242": 58, "4501321015418647": 58, "0324137065720425": 58, "6360507878869273": 58, "5272062306703502": 58, "3890092760336885": 58, "3574004846606875": 58, "12262039905235188": 58, "14434500352480006": 58, "8226193309599765": 58, "2208337686161779": 58, "7502889633901779": 58, "7587858131287746": 58, "4889405895555459": 58, "17007853679454668": 58, "5526283997375236": 58, "4927020841474106": 58, "39110010983532073": 58, "19154503149764535": 58, "111843102808077": 58, "t_": 58, "dagger_i": 58, "uparrow": 58, "downarrow": 58, "hop": 58, "n_site": 58, "chemic": 58, "make_anderson_model": 58, "epsilon": 58, "canon": 58, "csq": 58, "f_p": 58, "f_q": 58, "f_r": 58, "n_b": 58, "siam": 58, "v_i": 58, "epsilon_i": 58, "2n_b": 58, "f_0": 58, "annihil": 58, "f_1": 58, "f_2": 58, "1st": 58, "f_3": 58, "make_embedded_model": 58, "lambda_c": 58, "t_loc": 58, "int_kernel": 58, "limits_": 58, "2m": 58, "f_j": 58, "_k": 58, "f_l": 58, "loc": 58, "d_": [58, 61], "imp": 58, "onsit": 58, "uncorrel": 58, "conv": 58, "2i": [58, 60], "_1": [58, 62], "transform_to_jw_basi": 58, "fermion_hamiltonian": 58, "jw": 58, "spin_hamiltonian": 58, "075j": 58, "yx": 58, "075": 58, "xy": 58, "transform_to_bk_basi": 58, "bk": 58, "transform_to_parity_basi": 58, "make_ldca_circ": 58, "nb_fermionic_mod": 58, "eigstate_ind": 58, "slater": 58, "dallair": 58, "demer": 58, "2019": 58, "matchgat": 58, "eigenst": [58, 62], "make_mr_circ": 58, "small": [58, 62], "sugisaki": 58, "make_mrep_circ": 58, "n_fsim_cycl": 58, "set_phi_to_0": 58, "fsim": 58, "neighbour": 58, "taken": 58, "make_general_hwe_circ": 58, "n_cycl": 58, "rotation_g": 58, "entangling_g": 58, "predefg": 58, "thinli": 58, "dress": 58, "surround": 58, "odd": 58, "pattern": 58, "make_shallow_circ": 58, "keen": 58, "make_compressed_ldca_circ": 58, "synthoplin": 58, "h_el": 58, "n_phase_bit": 58, "init_vec": 58, "n_adiab_step": 58, "basis_transform": 58, "n_shot": 58, "qpe": 58, "apriori": 58, "preliminari": 58, "collaps": [58, 59], "linearli": [58, 62], "guarante": 58, "lie": 58, "adjust": 58, "suggest": 58, "interv": 58, "unbias": 58, "narrow": 58, "mislead": 58, "anymor": 58, "thumb": 58, "accur": [58, 66], "01101": 58, "straight": 58, "c_p": 58, "fast": 58, "Will": 58, "_interv": 58, "qse": 58, "state_prep_circ": 58, "expansion_oper": 58, "return_matric": 58, "star": 58, "_j": 58, "o_i": 58, "matrix_h": 58, "matrix_": 58, "e_qs": 58, "e_min": 58, "e_vq": 58, "opt_circ": 58, "eval": 58, "transform_integrals_to_new_basi": 58, "u_mat": 58, "h_hat_ij": 58, "h_hat_ijkl": 58, "2i_": 58, "cluster_op": 58, "ket_hf": 58, "hf": 58, "iT": 58, "uccsd": 58, "active_so": 58, "spatial": 58, "inactive_occupied_so": 58, "mp2": 58, "theta_a": 58, "epsilon_j": 58, "epsilon_a": 58, "epsilon_b": 58, "degeneraci": 58, "theta_list": 58, "n_qbit": 58, "prod_": 58, "c_q": 58, "c_r": 58, "run_fci": 58, "kickstart": 58, "densiti": 58, "groundstat": 58, "m\u00f6ller": 58, "ci": 58, "fci": 58, "expens": 58, "atom1": 58, "atom2": 58, "atomn": 58, "alpha": [58, 61, 62, 68], "neutral": 58, "nel": 58, "cregist": 59, "boolformula": 59, "ctrlbit": 59, "gate1": 59, "gate2": 59, "get_free_ancilla": 59, "destroi": 59, "usabl": 59, "variablenamenotavail": 59, "class_typ": 59, "qblist": 59, "cblist": 59, "include_lock": 59, "do_link": 59, "comparison_ep": 59, "box_routin": 59, "untouch": 59, "demand": 59, "happen": 59, "indentif": 59, "correspondig": 59, "systemat": 59, "repetit": [59, 66], "submatric": 59, "parent": [59, 62], "littl": 59, "mother": 59, "never": 59, "admiss": 59, "r_z": 59, "my_rz": 59, "matrix_gen": 59, "set_dag": 59, "paramg": 59, "abstract_g": 59, "member": 59, "notion": 59, "routop_l": 59, "max_wir": 59, "inbound": 59, "repeatedli": 59, "bl": 59, "unus": [59, 67], "reus": 59, "freed_ancilla": 59, "additin": 59, "tag": 59, "contruct": 59, "qbool_arrai": 59, "qclaus": 59, "cl": 59, "qbits_list": 59, "operand": 59, "implicitli": 59, "toward": 59, "and_formula": 59, "got": 59, "reverse_bit_ord": 59, "qarithexp": 59, "qcompexp": 59, "uniti": 59, "xore": 59, "slice": [59, 62], "composit": 59, "cbits_list": 59, "seraliz": 59, "builder": [59, 62], "utilitari": 59, "suppr_ctrl": 59, "ancillari": 59, "toffoli_fold": 59, "nb_qbit": 59, "scenario": 59, "lift": 59, "tild": [59, 60], "my_gat": 59, "generate_gate_set": 59, "add_const": [59, 60], "mult_const": [59, 60], "cuccaro_add": [59, 60], "agnost": 59, "modular_exp": [59, 60], "mult_const_mod": [59, 60], "add_const_mod": [59, 60], "add_mod": [59, 60], "qram": 59, "get_routin": [59, 61], "skeleton": 59, "abtract": 59, "cz": 59, "my_cnot_implement": 59, "overrid": [59, 63], "footprint": 59, "gate_signatur": 59, "clear_gate_set": 59, "default_g": 59, "link_gat": 59, "link_matric": 59, "set_gate_set": 59, "amplification_step": 59, "state_prep": 59, "household": 59, "nbit": [59, 62], "reg1": 59, "reg2": 59, "quantum_count": 59, "uniform_distribut": 59, "grover_diffus": 59, "green": 60, "rippl": 60, "indep": 60, "indepent": 60, "distinct": 60, "notat": 60, "5949": 60, "reg_siz": 60, "psi_": 60, "xk": 60, "reg_size_2": 60, "modulo": 60, "res_reg_s": 60, "quant": 60, "9511018": 60, "0410184": 60, "0910": 60, "2530v1": 60, "6n": 60, "2n": 60, "4n": 60, "7n": 60, "5n": 60, "crash": 60, "acc_siz": 60, "modulu": 60, "textrm": 60, "mod": 60, "shor": 60, "phase_reg": 60, "3720": 60, "8988": 60, "1472": 60, "128": 60, "384": 60, "gate_s": 60, "14853": 60, "reg_control_s": 60, "expon": 60, "accumul": 60, "euclid": 60, "coprim": 60, "kp": 61, "multiplexor": 61, "prakash": 61, "kp17": 61, "k_1": 61, "k_n": 61, "k_i": 61, "pad": 61, "log_2": 61, "understood": 61, "i_1": 61, "i_k": 61, "alpha_": 61, "adress": 61, "i_l": 61, "beta_": 61, "flatten": 61, "rout_0": 61, "rout_1": 61, "rout_2": 61, "kerinidi": 61, "proport": 61, "routine_state_prep": 61, "routine_1": 61, "946806409978177": 61, "443369158623367": 61, "30712135687827546": 61, "4741184718692546": 61, "057270937320722304": 61, "4351381908465106": 61, "06882470291329512": 61, "addresses_count": 61, "mutliplexor": 61, "iordani": 61, "anupam": 61, "8th": 61, "innov": 61, "theoret": [61, 62], "confer": 61, "itc": 61, "schloss": 61, "dagstuhl": 61, "leibniz": 61, "zentrum": 61, "fuer": 61, "informatik": 61, "avaibl": 62, "to_xxx": 62, "add_claus": 62, "myproblem": 62, "var1": 62, "var2": 62, "get_observ": 62, "125": 62, "w_": 62, "nbvar": 62, "boolexpr": 62, "and_claus": 62, "or_claus": 62, "xor_claus": 62, "neg_claus": 62, "subclaus": 62, "induct": 62, "wedg": 62, "vee": 62, "oplu": 62, "singleton": 62, "offset_q": 62, "e_q": 62, "get_best_paramet": 62, "child": 62, "aneal": 62, "durat": 62, "get_j_h_and_offset": 62, "sperat": 62, "to_circ_arg": 62, "get_qaoa_gate_set": 62, "my_plugin": 62, "synthes": 62, "regroup": 62, "qaoa_circuit": 62, "line_ob": 62, "add_term": 62, "ansatz_with_cnot": 62, "ansatz_with_rzz": 62, "121": 62, "67": 62, "insert_in": 62, "slic": 62, "elif": 62, "ansatz_default": 62, "ansatz_color": 62, "gray_synth": 62, "cnot_count": 62, "zzz": 62, "ansatz_gray_synth": 62, "grai": 62, "synth": 62, "ami": 62, "graysynth": 62, "onlt": 62, "schedulegener": 62, "schedule_gener": 62, "interpol": 62, "initialstatebuild": 62, "bit_flip": 62, "restrict_to": 62, "simpleinitialst": 62, "hamming_weight": 62, "tmax_psi_0": 62, "sigma_i": 62, "equi": 62, "argu": 62, "gap": 62, "entail": 62, "sure": 62, "scalabl": 62, "inexact": 62, "70": 62, "independentann": 62, "mixing_factori": 62, "inject": 62, "inject_initial_st": 62, "setup": 62, "prepend": 62, "start_ham": 62, "end_ham": 62, "true_psi_0": 62, "famou": 62, "instrins": 62, "optimis": 62, "max_cut": 62, "produce_j_h_and_offset": 62, "wikipedia": [62, 68], "256": 62, "n_monte_carlo_upd": 62, "n_trotter": 62, "replica": 62, "gamma_max": 62, "gamma_min": 62, "parse_result": 62, "graph_partit": 62, "graph_partitioning_problem": 62, "balanc": 62, "colour": [62, 67], "graph_colour": 62, "produce_q_and_offset": 62, "graph_colouring_problem": 62, "thatrepres": 62, "k_cliqu": 62, "k_clique_problem": 62, "bigger": 62, "vertex_cov": 62, "number_partit": 62, "array_of_numb": 62, "array_of_numbers_s": 62, "10000": [62, 66], "number_partitioning_problem": 62, "4417": 62, "numbers_arrai": 62, "binary_linear_integer_program": 62, "maximis": 62, "bilp_problem": 62, "handi": 63, "compliant": 63, "lnn_topologi": 63, "usus": 64, "4999999999999999": [64, 66], "keep_topologi": 64, "q1": 64, "q2": 64, "tradeoff": 65, "ve": 65, "job_2": 65, "job_3": 65, "018177103969541197": 65, "059846946851703": 65, "239387787406812": 65, "circuit_2": 65, "caught": 65, "150": 65, "trace": [65, 68], "optimization_trac": [65, 68], "552872579276286": 65, "8408981689132211": 65, "297392934747615": 65, "083180816462389": 65, "2874716675382425": 65, "09762107619614119": 65, "011752643790054584": 65, "17890717444613938": 65, "083009244180178": 65, "5302362524659592": 65, "9901483112215392": 65, "1388587722733803": 65, "9810661657418245": 65, "2874516174535087": 65, "4041424530174975": 65, "5441989248815995": 65, "682309344140502": 65, "8173960050169433": 65, "9539625526785116": 65, "0903795643828014": 65, "2266515687131467": 65, "36296024671596": 65, "49925972827093": 65, "635563610527371": 65, "771866632187624": 65, "908160553539908": 65, "044455427069039": 65, "180745628921491": 65, "316966316992481": 65, "453043297594364": 65, "589308533936441": 65, "7256130254899125": 65, "8620005437237435": 65, "998305854986599": 65, "134545566394039": 65, "2707475481131985": 65, "407053056806634": 65, "543346024097611": 65, "679299414973665": 65, "813718290344562": 65, "95095412645613": 65, "0817155773806295": 65, "219803199235915": 65, "345567698324172": 65, "474600210855575": 65, "591604521607348": 65, "511764061408709": 65, "596032520274928": 65, "452413789270092": 65, "706967151179935": 65, "79499572452489": 65, "86492515057669": 65, "9330197522795345": 65, "997468494637429": 65, "06706260115799": 65, "133360122246939": 65, "202016552977957": 65, "2691598467447145": 65, "337311549249829": 65, "405549758515894": 65, "47387941328552": 65, "54216616664397": 65, "610296861882496": 65, "678438584815497": 65, "746029517650627": 65, "814416555782681": 65, "882184463914189": 65, "950478548338161": 65, "018261499076187": 65, "086542386224007": 65, "154409770377326": 65, "222648276728247": 65, "29049946120579": 65, "358746515976367": 65, "426626924275986": 65, "49486143167463": 65, "562680045000606": 65, "63095022216376": 65, "698717297537707": 65, "767019492416916": 65, "834635537626932": 65, "903013554768304": 65, "970446934741219": 65, "038892946127872": 65, "106050676506365": 65, "174520415475804": 65, "241402718580286": 65, "309699733353035": 65, "376374072081736": 65, "44395766371224": 65, "509469671175083": 65, "54024001799067": 65, "618140217610271": 65, "61830786497512": 65, "679664145480366": 65, "71552170539753": 65, "740380789489704": 65, "700879020850058": 65, "770934636964721": 65, "801159378619396": 65, "81814289855561": 65, "85830300519218": 65, "88113796183786": 65, "917790846729844": 65, "951303461826313": 65, "985207099354307": 65, "018561731150665": 65, "043101681143291": 65, "080155511755985": 65, "107921979696563": 65, "143661646772625": 65, "17698285773937": 65, "210943558660073": 65, "244793366857234": 65, "278182955767601": 65, "292863475720992": 65, "334120313004822": 65, "35988025681902": 65, "395449038645443": 65, "430356572627378": 65, "464435537463014": 65, "498514418848695": 65, "531380890882893": 65, "565836499139339": 65, "599534760074231": 65, "633651493008525": 65, "667786486581965": 65, "701879111476037": 65, "735951384661197": 65, "77002235755884": 65, "804043703528105": 65, "838133354194577": 65, "87221133130094": 65, "906280633768624": 65, "940359009485924": 65, "974430480605056": 65, "008507754953097": 65, "04258315082794": 65, "07665921546645": 65, "110735210352631": 65, "144811084148078": 65, "178885657373906": 65, "212959252475153": 65, "247034076732248": 65, "281107230222533": 65, "315155189311257": 65, "349229488664243": 65, "383272666902302": 65, "417306865096846": 65, "451360654751527": 65, "48538036934809": 65, "518768138533664": 65, "choic": 65, "json": 65, "optimizer_arg": 65, "2569530074534936": 65, "2061685096803476": 65, "015205844855034": 65, "06918331530011473": 65, "1878498485201182": 65, "3085236652508511": 65, "15878560981868278": 65, "831748553918088": 65, "05150095511445993": 65, "3394134518960198": 65, "7593549846151763": 65, "36344757396810434": 65, "3311515133257553": 65, "31031835710154126": 65, "3947338844422781": 65, "4029406846295096": 65, "38866034337394434": 65, "4109980203759532": 65, "3964046990835999": 65, "418545136131845": 65, "424142574847185": 65, "42028758540949146": 65, "43008451651851287": 65, "43257534928072783": 65, "44005077289258593": 65, "44597606602626766": 65, "45237171068978": 65, "45864331238171685": 65, "4643383995962858": 65, "4709894487758406": 65, "4767980173960609": 65, "48320317873990026": 65, "48956083861554267": 65, "49614093089355504": 65, "5026026507103152": 65, "5091322324912235": 65, "5156644185817829": 65, "522192263980722": 65, "5287169465492468": 65, "5352418559964096": 65, "5417669237579699": 65, "5482919753835996": 65, "5548169849139689": 65, "5613420505426944": 65, "56786708104926": 65, "5743921365867098": 65, "5809171890611883": 65, "5874422389403955": 65, "5939672909177104": 65, "6004923419106378": 65, "6070173934945218": 65, "6135424449936241": 65, "6200674948474003": 65, "626592546563116": 65, "6331175975531812": 65, "6396426491846624": 65, "646167700539362": 65, "6526927517137404": 65, "6592178032860627": 65, "665742854716227": 65, "6722679059593959": 65, "6787929575099914": 65, "6853180089478503": 65, "6918430351979239": 65, "6983680952623008": 65, "7048931380412198": 65, "7114181906499069": 65, "7179432436912614": 65, "7244682953510623": 65, "7309933467432621": 65, "7375183978432402": 65, "7440434493169275": 65, "7505685008284285": 65, "7570935488848607": 65, "763618601556012": 65, "7701436511199248": 65, "7766687032727533": 65, "7831937537179381": 65, "789718805401812": 65, "7962438567542666": 65, "8027689080063412": 65, "8092939594143741": 65, "8158190106500547": 65, "8223440620505478": 65, "828869113310428": 65, "8353941647556377": 65, "8419192160010176": 65, "8484442674464221": 65, "8549693187061049": 65, "8614943701768104": 65, "8680194214257807": 65, "874544472889635": 65, "8810695241489093": 65, "8875945756204169": 65, "8941196268711318": 65, "9006446783211539": 65, "9071697295817598": 65, "9136947810184753": 65, "9202198322750061": 65, "9267448836582275": 65, "9332699349347311": 65, "9397949862605721": 65, "9463200375528708": 65, "9528450887299896": 65, "9593701400914756": 65, "9658951910424429": 65, "9724202425160335": 65, "9789452939640801": 65, "9854703453308113": 65, "9919953960169571": 65, "9985203445308807": 65, "0050454369319655": 65, "011570391494871": 65, "0180954821714139": 65, "0246204061357875": 65, "0311454989788869": 65, "0376704023274888": 65, "0441954861929768": 65, "0507203567543917": 65, "0572453916447104": 65, "0637702594176668": 65, "0702951648225583": 65, "0768200790681566": 65, "083344485283666": 65, "0898696828908805": 65, "0963938679117404": 65, "1029192036840465": 65, "1094429602589906": 65, "1159685482239425": 65, "1224915141141223": 65, "1290174708383849": 65, "1355393334824329": 65, "142065497854985": 65, "1485860902852818": 65, "155111532172569": 65, "1616314394393101": 65, "1681532866532742": 65, "1746747542175227": 65, "1811846246805071": 65, "187713733259973": 65, "1942080558757622": 65, "2007467382587012": 65, "2072122976078137": 65, "2137624767629935": 65, "2201891783666312": 65, "2267321787787298": 65, "2331302748717081": 65, "2395924634399464": 65, "2458894395687983": 65, "249420394400469": 65, "2562140238080224": 65, "2560643453612255": 65, "resili": 65, "autom": 65, "henceforth": 66, "primarili": 66, "commonli": 66, "speak": 66, "decid": 66, "subresult": 66, "emphas": 66, "enhanc": 66, "capac": 66, "uncertainti": 66, "exemplifi": 66, "examin": 66, "conduct": [66, 67], "stress": 66, "050161355804659184": 66, "ideal": 66, "took": 66, "goal": 66, "devoid": 66, "cyprien": 67, "lambert": 67, "net": 67, "contact": 67, "rue": 67, "jean": 67, "jaur\u00e8": 67, "68": 67, "78340": 67, "le": 67, "clay": 67, "sou": 67, "boi": 67, "circuitinlin": 67, "display": 67, "costfunctionplugin": 67, "simulated_ann": 67, "favorit": 68, "9999999991899413": 68, "9603486710308782": 68, "28427499675805346": 68, "6531597985328097": 68, "9900824872533468": 68, "4167279031924828": 68, "8015259484050502": 68, "9940603231923152": 68, "9727359224048047": 68, "9989169087261816": 68, "9998727451084918": 68, "9969240998186283": 68, "9988861201360315": 68, "9999999460333852": 68, "9998830113134668": 68, "9999719952416978": 68, "9999910333243904": 68, "9999986803489734": 68, "9999991483643815": 68, "9999999872400779": 68, "9999997900281994": 68, "9999999184364584": 68, "9999999982150096": 68, "141632904272737": 68, "binding_arg": 68, "initil": 68, "set_opt": 68, "my_job": 68, "simultan": 68, "spsaminimizeplugin": 68, "spsa": 68, "602": 68, "stop_condit": 68, "evalut": 68, "a_calibr": 68, "calibr": 68, "n_calibr": 68, "en": 68, "wiki": 68, "simultaneous_perturbation_stochastic_approxim": 68, "swarm": 68, "psominimizeplugin": 68, "pso": 68, "choose_inertia_funct": 68, "inertia": 68, "linearly_decreas": 68, "chaotic_random": 68, "name_method_us": 68, "clpso": 68, "fdr_pso": 68, "lip": 68, "hpso_tvac": 68, "max_it": 68, "swarm_numb": 68, "size_initial_vector_spac": 68, "hypercub": 68, "inertia_kwarg": 68, "inertia_funct": 68, "inertia_weight": 68, "vertex_cover_appl": 69, "vertex_cover_gener": 69}, "objects": {"": [[67, 0, 0, "-", "qat"]], "qat": [[33, 0, 0, "-", "clinalg"], [51, 0, 0, "-", "core"], [52, 0, 0, "-", "devices"], [53, 0, 0, "-", "fermion"], [59, 0, 0, "-", "lang"], [34, 0, 0, "-", "pylinalg"], [35, 0, 0, "-", "simulated_annealing"]], "qat.clinalg": [[33, 1, 1, "", "CLinalg"]], "qat.clinalg.CLinalg": [[33, 2, 1, "", "submit"]], "qat.clinalg.wrapper": [[33, 1, 1, "", "CLinalgStateVectorCPUDouble"]], "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble": [[33, 2, 1, "", "apply_1qbit_ctrl_gate"], [33, 2, 1, "", "apply_1qbit_gate"], [33, 2, 1, "", "apply_2qbit_ctrl_gate"], [33, 2, 1, "", "apply_2qbit_gate"], [33, 2, 1, "", "apply_CCNOT"], [33, 2, 1, "", "apply_CNOT"], [33, 2, 1, "", "apply_CSIGN"], [33, 2, 1, "", "apply_H"], [33, 2, 1, "", "apply_ISWAP"], [33, 2, 1, "", "apply_PH"], [33, 2, 1, "", "apply_RX"], [33, 2, 1, "", "apply_RY"], [33, 2, 1, "", "apply_RZ"], [33, 2, 1, "", "apply_S"], [33, 2, 1, "", "apply_SQRTSWAP"], [33, 2, 1, "", "apply_SWAP"], [33, 2, 1, "", "apply_T"], [33, 2, 1, "", "apply_X"], [33, 2, 1, "", "apply_Y"], [33, 2, 1, "", "apply_Z"], [33, 2, 1, "", "apply_nqbit_ctrl_gate"], [33, 2, 1, "", "apply_nqbit_gate"], [33, 3, 1, "", "array"], [33, 3, 1, "", "array_readonly"], [33, 2, 1, "", "expectation_value"], [33, 2, 1, "", "get_distribution"], [33, 2, 1, "", "get_mapped_distribution"], [33, 2, 1, "", "get_mapped_statevector"], [33, 2, 1, "", "get_permuted_statevector"], [33, 2, 1, "", "print"], [33, 2, 1, "", "project"], [33, 2, 1, "", "reset"], [33, 2, 1, "", "resize"], [33, 2, 1, "", "sample"], [33, 2, 1, "", "sample_subset"], [33, 2, 1, "", "set_num_threads"], [33, 2, 1, "", "simulate_circuit"], [33, 2, 1, "", "state_probability"]], "qat.comm.datamodel.ttypes": [[19, 1, 1, "", "GateDefinition"], [19, 1, 1, "", "Op"]], "qat.comm.exceptions.ttypes": [[19, 1, 1, "", "ErrorType"], [19, 1, 1, "", "PluginException"], [19, 1, 1, "", "QPUException"]], "qat.comm.shared.ttypes": [[51, 1, 1, "", "IntermediateMeasurement"], [51, 1, 1, "", "ProcessingType"]], "qat.core": [[51, 1, 1, "", "Batch"], [51, 1, 1, "", "BatchResult"], [51, 1, 1, "", "Circuit"], [51, 1, 1, "", "HardwareSpecs"], [51, 1, 1, "", "Job"], [51, 1, 1, "", "Observable"], [51, 1, 1, "", "Result"], [51, 1, 1, "", "Schedule"], [51, 1, 1, "", "Term"], [51, 1, 1, "", "Topology"], [51, 1, 1, "", "TopologyType"], [51, 1, 1, "", "Variable"], [14, 0, 0, "-", "console"], [63, 0, 0, "-", "quameleon"]], "qat.core.Batch": [[51, 2, 1, "", "dump"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "load"], [51, 2, 1, "", "to_thrift"]], "qat.core.BatchResult": [[51, 2, 1, "", "append"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "extend"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "load"]], "qat.core.Circuit": [[51, 2, 1, "", "bind_variable"], [51, 2, 1, "", "bind_variables"], [51, 2, 1, "", "count"], [51, 2, 1, "", "dag"], [51, 2, 1, "", "display"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "empty"], [51, 2, 1, "", "fill_matrices"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_thrift"], [51, 3, 1, "", "gate_set"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "insert_gate"], [51, 2, 1, "", "iterate_simple"], [51, 2, 1, "", "load"], [51, 2, 1, "", "remove_locks"], [51, 2, 1, "", "shift_qbits"], [51, 2, 1, "", "statistics"], [51, 2, 1, "", "to_job"]], "qat.core.HardwareSpecs": [[51, 2, 1, "", "as_graph"], [51, 2, 1, "", "as_quameleon"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "load"], [51, 3, 1, "", "nbqbits"]], "qat.core.Job": [[51, 2, 1, "", "differentiate"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "gradient"], [51, 2, 1, "", "load"], [51, 3, 1, "", "parameter_map"], [51, 3, 1, "", "psi_0"], [51, 2, 1, "", "shift_qbits"], [51, 2, 1, "", "to_thrift"]], "qat.core.Observable": [[51, 4, 1, "", "constant_coeff"], [51, 4, 1, "", "ising"], [51, 4, 1, "", "nbqbits"], [51, 4, 1, "", "terms"]], "qat.core.Result": [[51, 2, 1, "", "add_sample"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "load"], [51, 3, 1, "", "parameter_map"], [51, 3, 1, "", "value"], [51, 3, 1, "", "values"], [51, 2, 1, "", "wrap_samples"]], "qat.core.Schedule": [[51, 2, 1, "", "dump"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "load"], [51, 2, 1, "", "to_job"]], "qat.core.Term": [[51, 4, 1, "", "coeff"], [51, 4, 1, "", "op"], [51, 4, 1, "", "qbits"]], "qat.core.Topology": [[51, 2, 1, "", "add_edge"], [51, 2, 1, "", "dump"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_nx"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "load"], [51, 3, 1, "", "nbqbits"], [51, 2, 1, "", "set_nbqbits"], [51, 2, 1, "", "to_nx"]], "qat.core.Variable": [[51, 2, 1, "", "differentiate"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "to_thrift"]], "qat.core.application": [[51, 1, 1, "", "Application"], [51, 1, 1, "", "RemoteApplication"]], "qat.core.application.Application": [[51, 2, 1, "", "execute"], [51, 2, 1, "", "serve"]], "qat.core.circuit_builder.builder": [[59, 1, 1, "", "VariableNameNotAvailable"]], "qat.core.circuit_builder.matrix_util": [[51, 5, 1, "", "default_gate_set"], [51, 5, 1, "", "get_param_generator"], [51, 5, 1, "", "get_predef_generator"]], "qat.core.console": [[14, 1, 1, "", "Display"], [51, 5, 1, "", "display"]], "qat.core.console.Display": [[14, 2, 1, "", "compile"], [14, 2, 1, "", "do_post_processing"], [14, 2, 1, "", "post_process"]], "qat.core.formula_eval": [[51, 5, 1, "", "evaluate"]], "qat.core.gate_set": [[51, 1, 1, "", "GateSet"], [51, 1, 1, "", "GateSignature"], [51, 1, 1, "", "GateSyntaxRedefinition"]], "qat.core.gate_set.GateSet": [[51, 2, 1, "", "add_signature"], [51, 2, 1, "", "union"]], "qat.core.gate_set.GateSignature": [[51, 2, 1, "", "get_circuit"], [51, 2, 1, "", "get_matrix"], [51, 2, 1, "", "set_circuit_generator"], [51, 2, 1, "", "set_matrix_generator"]], "qat.core.generator": [[51, 1, 1, "", "AbstractGenerator"], [51, 1, 1, "", "RemoteBatchGenerator"]], "qat.core.generator.AbstractGenerator": [[51, 2, 1, "", "generate"], [51, 2, 1, "", "serve"]], "qat.core.plugins": [[51, 1, 1, "", "RemotePlugin"]], "qat.core.printer": [[51, 5, 1, "", "plot_in_notebook"]], "qat.core.qpu": [[51, 1, 1, "", "QPUHandler"], [51, 1, 1, "", "RemoteQPU"]], "qat.core.qpu.QPUHandler": [[51, 2, 1, "", "serve"], [51, 2, 1, "", "submit"], [51, 2, 1, "", "submit_job"]], "qat.core.quameleon": [[63, 1, 1, "", "QuameleonPlugin"]], "qat.core.spins": [[35, 5, 1, "", "integer_to_spins"], [35, 5, 1, "", "spins_to_integer"]], "qat.core.variables": [[51, 1, 1, "", "ArithExpression"], [51, 1, 1, "", "Symbol"]], "qat.core.variables.ArithExpression": [[51, 2, 1, "", "differentiate"], [51, 2, 1, "", "from_string"], [51, 2, 1, "", "get_variables"], [51, 2, 1, "", "pretty_print"], [51, 2, 1, "", "to_thrift"]], "qat.core.wrappers": [[51, 0, 0, "-", "observable"]], "qat.core.wrappers.result": [[51, 1, 1, "", "Sample"], [51, 1, 1, "", "State"]], "qat.core.wrappers.result.Sample": [[51, 3, 1, "", "amplitude"], [51, 2, 1, "", "from_bytes"], [51, 2, 1, "", "from_thrift"], [51, 2, 1, "", "set_qreg"], [51, 3, 1, "", "state"]], "qat.core.wrappers.result.State": [[51, 3, 1, "", "bitstring"], [51, 3, 1, "", "int"], [51, 3, 1, "", "lsb_int"], [51, 3, 1, "", "value"]], "qat.devices": [[52, 1, 1, "", "AllToAll"], [52, 1, 1, "", "GridDevice"], [52, 1, 1, "", "LineDevice"], [52, 1, 1, "", "SquareGridDevice"]], "qat.fermion.chemistry.pyscf_tools": [[58, 5, 1, "", "perform_pyscf_computation"]], "qat.fermion.chemistry.qse": [[58, 5, 1, "", "apply_quantum_subspace_expansion"]], "qat.fermion.chemistry.ucc": [[58, 5, 1, "", "compute_active_space_integrals"], [58, 5, 1, "", "construct_ucc_ansatz"], [58, 5, 1, "", "convert_to_h_integrals"], [58, 5, 1, "", "get_cluster_ops"], [58, 5, 1, "", "get_hf_ket"], [58, 5, 1, "", "guess_init_params"], [58, 5, 1, "", "select_active_orbitals"], [58, 5, 1, "", "transform_integrals_to_new_basis"]], "qat.fermion.chemistry.wrapper": [[58, 1, 1, "", "MolecularHamiltonian"], [58, 1, 1, "", "MoleculeInfo"]], "qat.fermion.chemistry.wrapper.MolecularHamiltonian": [[58, 4, 1, "", "constant_coeff"], [58, 2, 1, "", "get_electronic_hamiltonian"], [58, 4, 1, "", "nqbits"], [58, 4, 1, "", "one_body_integrals"], [58, 2, 1, "", "select_active_space"], [58, 2, 1, "", "transform_basis"], [58, 4, 1, "", "two_body_integrals"]], "qat.fermion.chemistry.wrapper.MoleculeInfo": [[58, 4, 1, "", "constant_coeff"], [58, 4, 1, "", "hamiltonian"], [58, 4, 1, "", "n_electrons"], [58, 4, 1, "", "noons"], [58, 4, 1, "", "nqbits"], [58, 4, 1, "", "one_body_integrals"], [58, 4, 1, "", "orbital_energies"], [58, 2, 1, "", "restrict_active_space"], [58, 4, 1, "", "two_body_integrals"]], "qat.fermion.circuits": [[58, 5, 1, "", "make_compressed_ldca_circ"], [58, 5, 1, "", "make_general_hwe_circ"], [58, 5, 1, "", "make_ldca_circ"], [58, 5, 1, "", "make_mr_circ"], [58, 5, 1, "", "make_mrep_circ"], [58, 5, 1, "", "make_shallow_circ"]], "qat.fermion.hamiltonians": [[58, 1, 1, "", "ElectronicStructureHamiltonian"], [58, 1, 1, "", "FermionHamiltonian"], [58, 1, 1, "", "SpinHamiltonian"], [58, 5, 1, "", "make_anderson_model"], [58, 5, 1, "", "make_embedded_model"], [58, 5, 1, "", "make_hubbard_model"]], "qat.fermion.hamiltonians.ElectronicStructureHamiltonian": [[58, 4, 1, "", "constant_coeff"], [58, 2, 1, "", "copy"], [58, 2, 1, "", "dag"], [58, 2, 1, "", "get_matrix"], [58, 4, 1, "", "hpq"], [58, 4, 1, "", "hpqrs"], [58, 2, 1, "", "to_fermion"], [58, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.FermionHamiltonian": [[58, 4, 1, "", "constant_coeff"], [58, 2, 1, "", "copy"], [58, 2, 1, "", "dag"], [58, 2, 1, "", "get_matrix"], [58, 4, 1, "", "matrix"], [58, 4, 1, "", "nbqbits"], [58, 4, 1, "", "normal_order"], [58, 4, 1, "", "terms"], [58, 2, 1, "", "to_electronic"], [58, 2, 1, "", "to_spin"]], "qat.fermion.hamiltonians.SpinHamiltonian": [[58, 4, 1, "", "constant_coeff"], [58, 2, 1, "", "copy"], [58, 2, 1, "", "dag"], [58, 2, 1, "", "get_matrix"], [58, 4, 1, "", "matrix"], [58, 4, 1, "", "nbqbits"], [58, 4, 1, "", "terms"]], "qat.fermion.phase_estimation": [[58, 5, 1, "", "perform_phase_estimation"]], "qat.fermion.transforms": [[58, 5, 1, "", "transform_to_bk_basis"], [58, 5, 1, "", "transform_to_jw_basis"], [58, 5, 1, "", "transform_to_parity_basis"]], "qat.fermion.trotterisation": [[58, 5, 1, "", "make_trotterisation_routine"]], "qat.interop.cirq": [[23, 5, 1, "", "cirq_to_qlm"], [23, 0, 0, "-", "converters"], [23, 5, 1, "", "qlm_to_cirq"]], "qat.interop.openqasm": [[30, 1, 1, "", "OqasmParser"]], "qat.interop.openqasm.OqasmParser": [[30, 2, 1, "", "compile"]], "qat.interop.projectq": [[31, 1, 1, "", "AqasmEngine"], [31, 1, 1, "", "AqasmPrinter"], [31, 0, 0, "-", "converters"]], "qat.interop.projectq.AqasmEngine": [[31, 2, 1, "", "projectq_to_qlm"]], "qat.interop.pyquil": [[32, 1, 1, "", "PyquilQPU"], [32, 0, 0, "-", "converters"], [32, 0, 0, "-", "providers"], [32, 5, 1, "", "pyquil_to_qlm"], [32, 5, 1, "", "qlm_to_pyquil"]], "qat.interop.pyquil.PyquilQPU": [[32, 2, 1, "", "set_qpu"], [32, 2, 1, "", "submit"], [32, 2, 1, "", "submit_job"]], "qat.interop.qiskit": [[36, 1, 1, "", "AsyncBackendToQPU"], [36, 1, 1, "", "BackendToQPU"], [36, 1, 1, "", "QPUToBackend"], [36, 1, 1, "", "QiskitJob"], [36, 0, 0, "-", "converters"], [36, 0, 0, "-", "providers"], [36, 5, 1, "", "qiskit_to_qlm"], [36, 5, 1, "", "qlm_to_qiskit"], [36, 0, 0, "-", "runtime"]], "qat.interop.qiskit.AsyncBackendToQPU": [[36, 2, 1, "", "retrieve_job"], [36, 2, 1, "", "submit"]], "qat.interop.qiskit.BackendToQPU": [[36, 2, 1, "", "submit"]], "qat.interop.qiskit.QPUToBackend": [[36, 2, 1, "", "set_qpu"]], "qat.interop.qiskit.QiskitJob": [[36, 2, 1, "", "cancel"], [36, 2, 1, "", "dump"], [36, 2, 1, "", "job_id"], [36, 2, 1, "", "result"], [36, 2, 1, "", "status"]], "qat.interop.qiskit.runtime": [[36, 1, 1, "", "QiskitRuntimeQPU"]], "qat.interop.qiskit.runtime.QiskitRuntimeQPU": [[36, 2, 1, "", "submit"]], "qat.lang": [[60, 0, 0, "-", "AQASM"]], "qat.lang.AQASM": [[59, 1, 1, "", "Program"], [60, 0, 0, "-", "arithmetic"], [60, 0, 0, "-", "classarith"], [59, 0, 0, "-", "misc"], [60, 0, 0, "-", "qftarith"], [59, 0, 0, "-", "util"]], "qat.lang.AQASM.Program": [[59, 2, 1, "", "apply"], [59, 2, 1, "", "calloc"], [59, 2, 1, "", "cbreak"], [59, 2, 1, "", "cc_apply"], [59, 2, 1, "", "comment"], [59, 2, 1, "", "conjugate"], [59, 2, 1, "", "display"], [59, 2, 1, "", "export"], [59, 2, 1, "", "free_ancillae"], [59, 2, 1, "", "get_free_ancillae"], [59, 2, 1, "", "logic"], [59, 2, 1, "", "measure"], [59, 2, 1, "", "new_var"], [59, 2, 1, "", "qalloc"], [59, 2, 1, "", "reset"], [59, 2, 1, "", "to_circ"]], "qat.lang.AQASM.arithmetic": [[60, 5, 1, "", "add_const_mod"], [60, 5, 1, "", "add_mod"], [60, 5, 1, "", "modular_exp"], [60, 5, 1, "", "mult_const"], [60, 5, 1, "", "mult_const_mod"]], "qat.lang.AQASM.bits": [[59, 1, 1, "", "BoolFormula"], [59, 1, 1, "", "CRegister"], [59, 1, 1, "", "Cbit"], [59, 1, 1, "", "QRegister"], [59, 1, 1, "", "Qbit"]], "qat.lang.AQASM.bits.BoolFormula": [[59, 2, 1, "", "cbits_list"], [59, 2, 1, "", "to_thrift"]], "qat.lang.AQASM.classarith": [[60, 5, 1, "", "add"], [60, 5, 1, "", "add_const"], [60, 5, 1, "", "cuccaro_add"]], "qat.lang.AQASM.gates": [[59, 1, 1, "", "AbstractGate"], [59, 1, 1, "", "Gate"], [59, 1, 1, "", "ParamGate"]], "qat.lang.AQASM.gates.AbstractGate": [[59, 2, 1, "", "set_dag"]], "qat.lang.AQASM.gates.Gate": [[59, 2, 1, "", "conj"], [59, 2, 1, "", "ctrl"], [59, 2, 1, "", "dag"], [59, 2, 1, "", "trans"]], "qat.lang.AQASM.gates.ParamGate": [[59, 2, 1, "", "dag"], [59, 2, 1, "", "display"]], "qat.lang.AQASM.misc": [[59, 1, 1, "", "build_gate"], [59, 5, 1, "", "generate_gate_set"]], "qat.lang.AQASM.qbool": [[59, 1, 1, "", "QBool"], [59, 1, 1, "", "QBoolArray"], [59, 1, 1, "", "QClause"]], "qat.lang.AQASM.qbool.QBool": [[59, 2, 1, "", "cast"], [59, 2, 1, "", "cast_to"], [59, 2, 1, "", "evaluate"], [59, 2, 1, "", "phase"], [59, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QBoolArray": [[59, 2, 1, "", "cast"], [59, 2, 1, "", "evaluate"], [59, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qbool.QClause": [[59, 2, 1, "", "evaluate"], [59, 2, 1, "", "phase"], [59, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qftarith": [[60, 5, 1, "", "QFT"], [60, 5, 1, "", "add"], [60, 5, 1, "", "add_const"], [60, 5, 1, "", "mult"], [60, 5, 1, "", "mult_const"]], "qat.lang.AQASM.qint": [[59, 1, 1, "", "QArithExp"], [59, 1, 1, "", "QCompExp"], [59, 1, 1, "", "QInt"]], "qat.lang.AQASM.qint.QArithExp": [[59, 2, 1, "", "evaluate"]], "qat.lang.AQASM.qint.QCompExp": [[59, 2, 1, "", "evaluate"], [59, 2, 1, "", "phase"], [59, 2, 1, "", "qbits_list"]], "qat.lang.AQASM.qint.QInt": [[59, 2, 1, "", "cast"], [59, 2, 1, "", "evaluate"], [59, 2, 1, "", "qbits_list"], [59, 2, 1, "", "set_value"]], "qat.lang.AQASM.routines": [[59, 1, 1, "", "QRoutine"]], "qat.lang.AQASM.routines.QRoutine": [[59, 2, 1, "", "apply"], [59, 2, 1, "", "compute"], [59, 2, 1, "", "free_ancillae"], [59, 2, 1, "", "get_free_ancillae"], [59, 2, 1, "", "new_wires"], [59, 2, 1, "", "set_ancillae"], [59, 2, 1, "", "uncompute"]], "qat.lang.AQASM.util": [[59, 5, 1, "", "suppr_ctrl"], [59, 5, 1, "", "toffoli_fold"]], "qat.lang.algorithms.amplification": [[59, 5, 1, "", "grover_diffusion"], [59, 5, 1, "", "householder"], [59, 5, 1, "", "uniform_distribution"]], "qat.lang.algorithms": [[59, 5, 1, "", "amplification_step"], [59, 5, 1, "", "phase_estimation"], [59, 5, 1, "", "quantum_counting"]], "qat.lang.linking.linker": [[59, 1, 1, "", "Linker"]], "qat.lang.linking.linker.Linker": [[59, 2, 1, "", "add_signature"], [59, 2, 1, "", "clear_gate_set"], [59, 2, 1, "", "link"], [59, 2, 1, "", "link_gates"], [59, 2, 1, "", "link_matrices"], [59, 2, 1, "", "set_gate_set"]], "qat.lang.linking": [[5, 0, 0, "-", "plugin"]], "qat.lang.linking.plugin": [[5, 1, 1, "", "CircuitInliner"]], "qat.lang.linking.plugin.CircuitInliner": [[5, 2, 1, "", "addargs"], [5, 2, 1, "", "compile"], [5, 2, 1, "", "do_post_processing"], [5, 2, 1, "", "post_process"]], "qat.lang.models": [[61, 1, 1, "", "KPTree"]], "qat.lang.models.KPTree": [[61, 2, 1, "", "get_routine"]], "qat.opt": [[62, 1, 1, "", "CombinatorialProblem"], [62, 1, 1, "", "Ising"], [62, 1, 1, "", "MixingFactory"], [62, 1, 1, "", "QUBO"], [0, 0, 0, "-", "generators"]], "qat.opt.CombinatorialProblem": [[62, 2, 1, "", "add_clause"], [62, 2, 1, "", "get_observable"], [62, 2, 1, "", "new_var"], [62, 2, 1, "", "new_vars"], [62, 2, 1, "", "to_ising"], [62, 2, 1, "", "to_qubo"]], "qat.opt.Ising": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "get_j_h_and_offset"], [62, 2, 1, "", "get_observable"], [62, 2, 1, "", "to_combinatorial_problem"], [62, 2, 1, "", "to_job"], [62, 2, 1, "", "to_qubo"]], "qat.opt.MixingFactory": [[62, 2, 1, "", "bit_flip"], [62, 2, 1, "", "bit_move"]], "qat.opt.QUBO": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "get_observable"], [62, 2, 1, "", "get_q_and_offset"], [62, 2, 1, "", "to_combinatorial_problem"], [62, 2, 1, "", "to_ising"], [62, 2, 1, "", "to_job"]], "qat.opt.binary_linear_integer_programming": [[62, 1, 1, "", "BILP"], [62, 5, 1, "", "produce_q_and_offset"]], "qat.opt.binary_linear_integer_programming.BILP": [[62, 2, 1, "", "get_best_parameters"]], "qat.opt.boolexpr": [[62, 1, 1, "", "Clause"], [62, 1, 1, "", "Var"]], "qat.opt.boolexpr.Clause": [[62, 2, 1, "", "get_observable"]], "qat.opt.boolexpr.Var": [[62, 2, 1, "", "evaluate"], [62, 2, 1, "", "get_observable"], [62, 2, 1, "", "get_variables"], [62, 4, 1, "", "index"]], "qat.opt.circuit_generator": [[62, 1, 1, "", "CircuitGenerator"]], "qat.opt.circuit_generator.CircuitGenerator": [[62, 2, 1, "", "qaoa_ansatz"]], "qat.opt.generators": [[16, 1, 1, "", "GraphColouringGenerator"], [17, 1, 1, "", "GraphPartitioningGenerator"], [20, 1, 1, "", "KCliqueGenerator"], [22, 1, 1, "", "MaxCutGenerator"], [69, 1, 1, "", "VertexCoverGenerator"]], "qat.opt.generators.GraphColouringGenerator": [[16, 2, 1, "", "generate"]], "qat.opt.generators.GraphPartitioningGenerator": [[17, 2, 1, "", "generate"]], "qat.opt.generators.KCliqueGenerator": [[20, 2, 1, "", "generate"]], "qat.opt.generators.MaxCutGenerator": [[22, 2, 1, "", "generate"]], "qat.opt.generators.VertexCoverGenerator": [[69, 2, 1, "", "generate"]], "qat.opt.graph_colouring": [[62, 1, 1, "", "GraphColouring"], [62, 5, 1, "", "produce_q_and_offset"]], "qat.opt.graph_colouring.GraphColouring": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "parse_result"]], "qat.opt.graph_partitioning": [[62, 1, 1, "", "GraphPartitioning"], [62, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.graph_partitioning.GraphPartitioning": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "parse_result"]], "qat.opt.k_clique": [[62, 1, 1, "", "KClique"], [62, 5, 1, "", "produce_q_and_offset"]], "qat.opt.k_clique.KClique": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "parse_result"]], "qat.opt.max_cut": [[62, 1, 1, "", "MaxCut"], [62, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.max_cut.MaxCut": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "parse_result"]], "qat.opt.mixing_factory": [[62, 1, 1, "", "IndependentAnnealing"], [62, 1, 1, "", "InitialStateBuilder"], [62, 1, 1, "", "SimpleInitialState"]], "qat.opt.mixing_factory.IndependentAnnealing": [[62, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.InitialStateBuilder": [[62, 2, 1, "", "inject_initial_state"]], "qat.opt.mixing_factory.SimpleInitialState": [[62, 2, 1, "", "inject_initial_state"]], "qat.opt.number_partitioning": [[62, 1, 1, "", "NumberPartitioning"], [62, 5, 1, "", "produce_j_h_and_offset"]], "qat.opt.number_partitioning.NumberPartitioning": [[62, 2, 1, "", "get_best_parameters"]], "qat.opt.results": [[6, 1, 1, "", "GraphPartitioningResult"], [6, 1, 1, "", "KCliqueResult"], [6, 1, 1, "", "VertexCoverResult"]], "qat.opt.results.GraphPartitioningResult": [[6, 2, 1, "", "display"]], "qat.opt.results.KCliqueResult": [[6, 3, 1, "", "clique"]], "qat.opt.results.VertexCoverResult": [[6, 3, 1, "", "cover"]], "qat.opt.schedule_generator": [[62, 1, 1, "", "ScheduleGenerator"]], "qat.opt.schedule_generator.ScheduleGenerator": [[62, 2, 1, "", "annealing_job"]], "qat.opt.vertex_cover": [[62, 1, 1, "", "VertexCover"], [62, 5, 1, "", "produce_q_and_offset"]], "qat.opt.vertex_cover.VertexCover": [[62, 2, 1, "", "get_best_parameters"], [62, 2, 1, "", "parse_result"]], "qat.plugins": [[51, 1, 1, "", "AbstractPlugin"], [45, 1, 1, "", "AdaptVQEPlugin"], [13, 1, 1, "", "CostFunctionPlugin"], [46, 1, 1, "", "GradientDescentOptimizer"], [46, 0, 0, "-", "GradientDescentOptimizer"], [51, 1, 1, "", "Junction"], [47, 1, 1, "", "MultipleLaunchesAnalyzer"], [47, 0, 0, "-", "MultipleLaunchesAnalyzer"], [44, 1, 1, "", "ObservableSplitter"], [51, 1, 1, "", "Optimizer"], [68, 1, 1, "", "PSOMinimizePlugin"], [64, 1, 1, "", "Remap"], [68, 1, 1, "", "SPSAMinimizePlugin"], [68, 1, 1, "", "ScipyMinimizePlugin"], [68, 1, 1, "", "SeqOptim"], [48, 0, 0, "-", "SeqOptim"], [49, 1, 1, "", "ZeroNoiseExtrapolator"], [49, 0, 0, "-", "ZeroNoiseExtrapolator"], [44, 0, 0, "-", "observable_splitter"]], "qat.plugins.AbstractPlugin": [[51, 2, 1, "", "compile"], [51, 2, 1, "", "do_post_processing"], [51, 2, 1, "", "serve"], [51, 2, 1, "", "wrapper_post_process"]], "qat.plugins.Junction": [[51, 2, 1, "", "execute"], [51, 2, 1, "", "run"]], "qat.plugins.ObservableSplitter": [[44, 2, 1, "", "addargs"], [44, 2, 1, "", "compile"], [44, 2, 1, "", "do_post_processing"], [44, 2, 1, "", "get_fresh_key"], [44, 2, 1, "", "post_process"]], "qat.plugins.Optimizer": [[51, 2, 1, "", "evaluate"], [51, 2, 1, "", "optimize"]], "qat.plugins.ScipyMinimizePlugin": [[68, 2, 1, "", "set_options"]], "qat.pylinalg": [[34, 1, 1, "", "PyLinalg"], [34, 0, 0, "-", "simulator"]], "qat.pylinalg.PyLinalg": [[34, 2, 1, "", "serve"], [34, 2, 1, "", "submit"], [34, 2, 1, "", "submit_job"]], "qat.pylinalg.simulator": [[34, 5, 1, "", "mat2nparray"], [34, 5, 1, "", "measure"], [34, 5, 1, "", "project"], [34, 5, 1, "", "raise_break"], [34, 5, 1, "", "reset"], [34, 5, 1, "", "simulate"]], "qat.simulated_annealing": [[35, 1, 1, "", "SimulatedAnnealing"]], "qat.simulated_annealing.SimulatedAnnealing": [[35, 2, 1, "", "sa"], [35, 2, 1, "", "submit_job"]], "qat.simulated_annealing.service": [[35, 5, 1, "", "extract_j_and_h_from_obs"]], "qat.vsolve.ansatz": [[62, 1, 1, "", "AnsatzFactory"]], "qat.vsolve.ansatz.AnsatzFactory": [[62, 2, 1, "", "qaoa_circuit"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"advanc": [0, 1, 3, 18, 50, 54], "combinatori": [0, 6, 7, 43, 62, 67], "optim": [0, 6, 7, 9, 13, 43, 46, 47, 48, 62, 67], "np": [0, 62], "hard": [0, 62], "problem": [0, 7, 37, 38, 43, 62], "unconstrain": [0, 62], "graph": [0, 1, 16, 17, 62], "max": [0, 22], "cut": [0, 22], "partit": [0, 17], "constrain": [0, 62], "colour": [0, 16], "k": [0, 6], "cliqu": [0, 6], "vertex": [0, 6, 69], "cover": [0, 6, 69], "other": [0, 50, 59, 62, 67], "number": [0, 66], "binari": 0, "integ": [0, 1, 59], "linear": [0, 33, 34], "program": [0, 1, 43, 59, 67], "simul": [0, 10, 11, 12, 33, 34, 35, 37, 41, 43, 53, 58, 67], "quantum": [0, 1, 4, 8, 9, 11, 19, 23, 30, 31, 32, 33, 34, 36, 43, 50, 53, 54, 58, 59, 66, 67], "anneal": [0, 8, 10, 11, 16, 17, 20, 22, 35, 69], "benchmark": 0, "perform": 0, "interfac": [0, 33, 51], "dwave": 0, "us": [1, 21, 36, 55], "pyaqasm": 1, "abstractg": 1, "circuit": [1, 5, 19, 23, 30, 31, 32, 36, 43, 48, 50, 51, 54, 58, 59, 61, 66], "matrix": [1, 26], "implement": 1, "definit": 1, "subcircuit": 1, "ariti": 1, "gener": [1, 6, 16, 17, 20, 22, 37, 41, 50, 52, 58, 59, 62, 67, 69], "lift": 1, "python": [1, 34], "function": [1, 34, 58], "gate": [1, 2, 4, 19, 50, 51, 59], "link": [1, 2], "extract": 1, "comput": [1, 3, 37, 41, 43], "uncomput": 1, "scope": 1, "autom": 1, "ancilla": 1, "manag": [1, 59], "oracl": 1, "type": [1, 59], "boolean": [1, 59], "condit": 1, "alloc": [1, 50], "logic": 1, "express": [1, 21, 51, 59], "evalu": 1, "statement": 1, "build": [1, 3, 21, 45, 51], "phase": [1, 54, 58], "set": [1, 51, 59], "classic": [1, 50, 59], "valu": 1, "arithmet": [1, 60], "exampl": [1, 66], "grover": 1, "color": 1, "The": [2, 4, 19, 52, 55, 58, 59, 67], "aqasm": 2, "format": 2, "text": 2, "header": 2, "instruct": [2, 4, 19], "list": [2, 4, 19, 43], "compil": [2, 12, 30], "file": 2, "time": [2, 51], "stack": [3, 5, 21, 43], "high": [4, 19, 33, 60], "level": [4, 19, 33, 59, 60], "wrapper": [4, 19], "qubit": [4, 19, 44, 50, 64, 66], "cbit": [4, 19], "dictionari": [4, 19], "circuitinlin": 5, "inlin": 5, "insid": 5, "tool": [6, 12, 37, 41, 51, 54, 59, 67], "result": [6, 19, 51], "formul": 7, "solv": 7, "bibliographi": 7, "qa": [8, 62], "approxim": 9, "algorithm": [9, 43, 48, 59, 65, 68], "qaoa": [9, 16, 17, 20, 22, 62, 67, 69], "sa": 10, "sqa": 11, "command": 12, "line": 12, "aqasm2circ": 12, "circ2aqasm": 12, "execut": [12, 21, 66], "qat": [12, 33, 34, 35, 43, 51, 52, 59, 62], "jobrun": 12, "batchrun": 12, "resprint": 12, "circstat": 12, "costfunctionplugin": 13, "variat": [13, 43, 54, 65, 68], "without": 13, "observ": [13, 19, 44, 51, 66], "displai": [14, 51], "consol": 14, "display": 14, "plugin": [14, 21, 43, 51, 57, 58, 63, 67, 68], "get": 15, "start": 15, "job": [16, 17, 19, 20, 22, 51, 62, 65, 66, 69], "schedul": [16, 17, 20, 22, 51, 69], "welcom": 18, "myqlm": [18, 25, 26, 27, 28, 36, 37, 38, 41], "document": [18, 23, 30, 31, 32, 36, 67], "basic": [18, 55, 59], "usag": [18, 50, 54, 55], "notebook": [18, 29, 43], "sourc": [18, 23, 28, 30, 31, 32, 36, 67], "code": [18, 23, 30, 31, 32, 36, 67], "addit": 18, "inform": [18, 21, 66], "main": [19, 56], "object": 19, "batch": [19, 37, 41, 51], "except": [19, 59], "kcliqu": 20, "custom": [21, 50], "flow": 21, "write": [21, 50], "your": [21, 43], "own": 21, "qpu": [21, 32, 36, 37, 41, 67], "junction": [21, 51], "connect": [21, 32, 36], "remot": [21, 51], "server": 21, "mode": [21, 66], "client": 21, "cirq": 23, "interoper": [23, 26, 27, 31, 32, 36, 43, 67], "translat": [23, 30, 31, 32, 36, 51], "contribut": 25, "how": 25, "instal": 26, "prerequisit": 26, "compat": 26, "packag": 26, "avail": 27, "binder": 27, "licens": 28, "proprietari": 28, "part": 28, "open": 28, "openqasm": 30, "projectq": 31, "pyquil": 32, "pyquilqpu": 32, "clinalg": 33, "c": 33, "algebra": [33, 34], "process": [33, 34], "unit": [33, 34], "low": [33, 58, 59], "statevector": 33, "pybind": 33, "pylinalg": 34, "intern": 34, "simulated_ann": 35, "qiskit": 36, "backend": 36, "releas": 37, "note": 37, "what": 37, "": 37, "new": [37, 38, 39, 40, 41, 50], "1": 37, "7": 37, "A": [37, 41, 66], "fermion": [37, 41, 43, 53, 54, 55, 58], "featur": [37, 38, 39, 40, 41], "updat": [37, 39, 40, 41, 56], "fix": [37, 39, 40, 41], "6": 37, "0": 37, "5": 37, "4": 37, "power": [37, 38], "access": [37, 38], "known": [37, 38], "support": 42, "tutori": 43, "run": [43, 47, 65], "digit": [43, 53, 58, 67], "spin": [43, 53, 55, 58], "system": [43, 53, 58], "lang": [43, 59], "none": 43, "ad": 43, "design": 43, "qlm": [43, 58], "first": 43, "step": 43, "introduct": 43, "observablesplitt": 44, "turn": 44, "sampl": [44, 66], "adapt": 45, "vqe": [45, 54], "iter": 45, "effici": [45, 58], "ansatz": [45, 54, 58, 62], "gradientdescentoptim": 46, "natur": 46, "gradient": 46, "descent": 46, "multiplelaunchesanalyz": 47, "sever": [47, 65], "keep": 47, "best": 47, "one": [47, 55, 66], "seqoptim": 48, "sequenti": 48, "zeronoiseextrapol": 49, "zero": 49, "nois": 49, "extrapol": 49, "multiqubit": 49, "mitig": 49, "regist": 50, "nativ": 50, "control": 50, "dagger": 50, "defin": [50, 55], "parametr": 50, "abstract": [50, 51], "routin": [50, 60], "oper": [50, 55], "librairi": 50, "export": 50, "more": 50, "core": [51, 67], "data": 51, "structur": [51, 59], "class": [51, 58, 59], "manipul": [51, 59, 62], "tempor": 51, "composit": 51, "parallel": 51, "rescal": 51, "analog": 51, "hardwar": [51, 58, 63], "specif": 51, "signatur": 51, "variabl": [51, 65], "variou": 51, "method": [51, 55], "devic": [52, 67], "librari": [52, 59, 67], "predefin": 52, "tabl": [54, 58], "content": [54, 58], "eigensolv": 54, "chemistri": 54, "molecularhamiltonian": [54, 58], "moleculeinfo": [54, 58], "estim": [54, 58], "trotter": 54, "subspac": [54, 58], "expans": [54, 58], "hamiltonian": [55, 58], "two": 55, "electron": 55, "integr": 55, "get_matrix": 55, "represent": [55, 62], "some": 55, "constructor": 55, "changelog": 56, "miscellan": 56, "spinhamiltonian": 58, "fermionhamiltonian": 58, "electronicstructurehamiltonian": 58, "atom": 58, "molecular": 58, "studi": 58, "common": 58, "mani": 58, "bodi": 58, "hubbard": 58, "model": 58, "singl": 58, "impur": 58, "anderson": 58, "transform": 58, "jordan": 58, "wigner": 58, "bravyi": 58, "kitaev": 58, "pariti": 58, "basi": 58, "depth": 58, "ldca": 58, "multi": 58, "refer": [58, 61], "mr": 58, "excit": 58, "preserv": 58, "mrep": 58, "8": 58, "paramet": [58, 65], "compress": 58, "onli": [58, 66], "user": 58, "unitari": 58, "coupl": 58, "cluster": 58, "ucc": 58, "util": [58, 59], "bit": 59, "formula": 59, "linker": 59, "qft": 60, "base": 60, "overview": 60, "carri": 60, "agnost": 60, "state": [61, 66], "prepar": 61, "qram": 61, "opt": 62, "encod": 62, "declar": 62, "quadrat": 62, "qubo": 62, "Ising": 62, "quameleonplugin": 63, "emul": 63, "constraint": 63, "via": 63, "remap": 64, "unus": 64, "remov": 64, "bind": 65, "differenti": 65, "test": 65, "initi": 65, "describ": 66, "full": 66, "bell": 66, "infinit": 66, "shot": 66, "all": 66, "finit": 66, "further": 66, "framework": 67}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"Advanced combinatorial optimization": [[0, "advanced-combinatorial-optimization"]], "NP-hard problems": [[0, "np-hard-problems"]], "Unconstrained Graph Problems": [[0, "unconstrained-graph-problems"], [62, "unconstrained-graph-problems"]], "Max cut": [[0, "max-cut"]], "Graph Partitioning": [[0, "graph-partitioning"]], "Constrained Graph Problems": [[0, "constrained-graph-problems"], [62, "constrained-graph-problems"]], "Graph Colouring": [[0, "graph-colouring"], [0, "id3"]], "K-Clique": [[0, "k-clique"], [0, "id4"]], "Vertex Cover": [[0, "vertex-cover"], [0, "id5"]], "Other problems": [[0, "other-problems"], [62, "other-problems"]], "Number Partitioning": [[0, "number-partitioning"], [0, "id7"]], "Binary Integer Linear Programming": [[0, "binary-integer-linear-programming"]], "Simulated Quantum Annealing Benchmarking and Performance": [[0, "simulated-quantum-annealing-benchmarking-and-performance"]], "Max Cut": [[0, "id2"]], "Interfacing with DWAVE": [[0, "interfacing-with-dwave"]], "Advanced programming using pyAQASM": [[1, "advanced-programming-using-pyaqasm"]], "AbstractGates, circuit and matrix implementation": [[1, "abstractgates-circuit-and-matrix-implementation"]], "Matrix definition": [[1, "matrix-definition"]], "Subcircuit definition": [[1, "subcircuit-definition"]], "Arity generator": [[1, "arity-generator"]], "Lifting Python functions into quantum gates": [[1, "lifting-python-functions-into-quantum-gates"]], "Linking at circuit extraction": [[1, "linking-at-circuit-extraction"]], "Compute/uncompute scopes": [[1, "compute-uncompute-scopes"]], "Automated ancillae management": [[1, "automated-ancillae-management"]], "Oracles and quantum types": [[1, "oracles-and-quantum-types"]], "Quantum booleans, quantum conditionals, and quantum oracles": [[1, "quantum-booleans-quantum-conditionals-and-quantum-oracles"]], "Allocation": [[1, "allocation"], [1, "id1"]], "Logical expressions": [[1, "logical-expressions"]], "Evaluating expressions": [[1, "evaluating-expressions"]], "Quantum conditionals and with statements": [[1, "quantum-conditionals-and-with-statements"]], "Building phase oracles": [[1, "building-phase-oracles"]], "Quantum integers": [[1, "quantum-integers"], [59, "quantum-integers"]], "Setting a classical value": [[1, "setting-a-classical-value"]], "Arithmetic expressions": [[1, "arithmetic-expressions"]], "Conditionals on quantum integers": [[1, "conditionals-on-quantum-integers"]], "Example: Grover oracle for graph coloring": [[1, "example-grover-oracle-for-graph-coloring"]], "The AQASM format": [[2, "the-aqasm-format"]], "The text format": [[2, "the-text-format"]], "Header": [[2, "header"]], "Instructions": [[2, "instructions"]], "List of gates": [[2, "list-of-gates"]], "Compiling .aqasm files": [[2, "compiling-aqasm-files"]], "Compilation time linking": [[2, "compilation-time-linking"]], "Building advanced computation stacks": [[3, "building-advanced-computation-stacks"]], "The high-level wrapper": [[4, "the-high-level-wrapper"], [19, "the-high-level-wrapper"]], "Qubits and cbits": [[4, "qubits-and-cbits"], [19, "qubits-and-cbits"]], "Instruction list": [[4, "instruction-list"], [19, "instruction-list"]], "Quantum gates and gate dictionary": [[4, "quantum-gates-and-gate-dictionary"], [19, "quantum-gates-and-gate-dictionary"]], "CircuitInliner : inlining circuit inside a stack": [[5, "module-qat.lang.linking.plugin"]], "Combinatorial Optimization Generators tools": [[6, "combinatorial-optimization-generators-tools"]], "K-Clique result": [[6, "k-clique-result"]], "Vertex cover result": [[6, "vertex-cover-result"]], "Combinatorial optimization": [[7, "combinatorial-optimization"]], "Formulating combinatorial problems": [[7, "formulating-combinatorial-problems"]], "Solving combinatorial problems": [[7, "solving-combinatorial-problems"]], "Bibliography": [[7, "bibliography"]], "Quantum Annealing (QA)": [[8, "quantum-annealing-qa"]], "Quantum Approximate Optimization Algorithm (QAOA)": [[9, "quantum-approximate-optimization-algorithm-qaoa"]], "Simulated annealing (SA)": [[10, "simulated-annealing-sa"]], "Simulated Quantum Annealing (SQA)": [[11, "simulated-quantum-annealing-sqa"]], "Command-line tools": [[12, "command-line-tools"]], "Compiler": [[12, "compiler"]], "aqasm2circ": [[12, "aqasm2circ"]], "circ2aqasm": [[12, "circ2aqasm"]], "Simulation / Execution commands": [[12, "simulation-execution-commands"]], "qat-jobrun and qat-batchrun": [[12, "qat-jobrun-and-qat-batchrun"]], "qat-resprint": [[12, "qat-resprint"]], "qat-circstat": [[12, "qat-circstat"]], "CostFunctionPlugin: variational optimization without observable": [[13, "costfunctionplugin-variational-optimization-without-observable"]], "Display : a console displayer plugin": [[14, "module-qat.core.console"]], "Getting started": [[15, "getting-started"]], "Graph Colouring Generator": [[16, "graph-colouring-generator"]], "QAOA job generation": [[16, "qaoa-job-generation"], [17, "qaoa-job-generation"], [20, "qaoa-job-generation"], [22, "qaoa-job-generation"], [69, "qaoa-job-generation"]], "Annealing job generation": [[16, "annealing-job-generation"], [17, "annealing-job-generation"], [20, "annealing-job-generation"], [22, "annealing-job-generation"], [69, "annealing-job-generation"]], "Scheduling job generation": [[16, "scheduling-job-generation"], [17, "scheduling-job-generation"], [20, "scheduling-job-generation"], [22, "scheduling-job-generation"], [69, "scheduling-job-generation"]], "Graph Partitioning Generator": [[17, "graph-partitioning-generator"]], "Welcome to the myQLM documentation": [[18, "welcome-to-the-myqlm-documentation"]], "Basic usage": [[18, null], [55, "basic-usage"]], "Notebooks": [[18, null], [29, "notebooks"]], "Advanced usage": [[18, null], [54, "advanced-usage"]], "Source code documentation": [[18, null], [23, "source-code-documentation"], [30, "source-code-documentation"], [31, "source-code-documentation"], [32, "source-code-documentation"], [36, "source-code-documentation"], [67, "module-qat"]], "Additional information": [[18, null]], "Main objects: Jobs, Observables, Circuits\u2026": [[19, "main-objects-jobs-observables-circuits"]], "Job and Batch": [[19, "job-and-batch"]], "Observables": [[19, "observables"], [51, "observables"]], "Results": [[19, "results"], [51, "results"]], "Circuits": [[19, "circuits"], [51, "circuits"]], "Exceptions": [[19, "exceptions"], [59, "exceptions"]], "KClique Generator": [[20, "kclique-generator"]], "Building custom execution stacks": [[21, "building-custom-execution-stacks"]], "Plugins & information flow": [[21, "plugins-information-flow"]], "Writing your own QPU": [[21, "writing-your-own-qpu"]], "Writing your own plugin": [[21, "writing-your-own-plugin"]], "Building expressive stacks using Junctions": [[21, "building-expressive-stacks-using-junctions"]], "Connecting to a remote Plugin": [[21, "connecting-to-a-remote-plugin"]], "Server mode": [[21, "server-mode"], [21, "id1"]], "Client mode": [[21, "client-mode"], [21, "id2"]], "Connecting to a remote QPU": [[21, "connecting-to-a-remote-qpu"]], "Max Cut Generator": [[22, "max-cut-generator"]], "Cirq interoperability": [[23, "cirq-interoperability"]], "Translating quantum circuits": [[23, "module-qat.interop.cirq.converters"], [30, "translating-quantum-circuits"], [31, "module-qat.interop.projectq.converters"], [32, "module-qat.interop.pyquil.converters"], [36, "module-qat.interop.qiskit.converters"]], "Circuit translation": [[23, "circuit-translation"], [32, "circuit-translation"], [36, "circuit-translation"]], "Contributing to myQLM": [[25, "contributing-to-myqlm"]], "How to contribute?": [[25, "how-to-contribute"]], "Installing myQLM": [[26, "installing-myqlm"]], "Prerequisites": [[26, "prerequisites"]], "Compatibility Matrix": [[26, "compatibility-matrix"]], "Install": [[26, "install"]], "Install myQLM package": [[26, "install-myqlm-package"]], "Interoperability": [[26, "interoperability"]], "Interoperability with myQLM": [[27, "interoperability-with-myqlm"]], "Available binders": [[27, null]], "myQLM license": [[28, "myqlm-license"]], "Proprietary part": [[28, "proprietary-part"]], "Open source part": [[28, "open-source-part"]], "OpenQASM Compiler": [[30, "openqasm-compiler"]], "ProjectQ interoperability": [[31, "projectq-interoperability"]], "PyQuil interoperability": [[32, "pyquil-interoperability"]], "Connecting to a QPU": [[32, "module-qat.interop.pyquil.providers"]], "PyquilQPU": [[32, "pyquilqpu"]], "qat.clinalg: C++ Linear-algebra simulator": [[33, "qat-clinalg-c-linear-algebra-simulator"]], "High-level Quantum Processing Unit": [[33, "high-level-quantum-processing-unit"]], "C++ Low-level Statevector": [[33, "c-low-level-statevector"]], "Pybind interface": [[33, "pybind-interface"]], "qat.pylinalg: Python Linear-algebra simulator": [[34, "qat-pylinalg-python-linear-algebra-simulator"]], "Quantum Processing Unit": [[34, "quantum-processing-unit"]], "Simulator Internal Functions": [[34, "simulator-internal-functions"]], "qat.simulated_annealing: Simulated Annealing": [[35, "qat-simulated-annealing-simulated-annealing"]], "Qiskit interoperability": [[36, "qiskit-interoperability"]], "Connecting to a QPU/Backend": [[36, "connecting-to-a-qpu-backend"]], "Using a Qiskit QPU in myQLM": [[36, "using-a-qiskit-qpu-in-myqlm"]], "Using a myQLM QPU in Qiskit": [[36, "using-a-myqlm-qpu-in-qiskit"]], "Release notes": [[37, "release-notes"]], "What\u2019s new in myQLM 1.7.1": [[37, "what-s-new-in-myqlm-1-7-1"]], "A new simulated QPU in myQLM": [[37, "a-new-simulated-qpu-in-myqlm"], [41, "a-new-simulated-qpu-in-myqlm"]], "Tools for fermionic computations (myQLM-fermion)": [[37, "tools-for-fermionic-computations-myqlm-fermion"], [41, "tools-for-fermionic-computations-myqlm-fermion"]], "Batch generators in myQLM": [[37, "batch-generators-in-myqlm"], [41, "batch-generators-in-myqlm"]], "New features": [[37, "new-features"], [37, "id1"], [37, "id4"], [37, "id7"], [38, "new-features"], [39, "new-features"], [40, "new-features"], [41, "new-features"]], "Updated features": [[37, "updated-features"], [37, "id2"], [37, "id5"], [39, "updated-features"], [40, "updated-features"], [41, "updated-features"]], "Fixes": [[37, "fixes"], [37, "id3"], [37, "id6"], [39, "fixes"], [40, "fixes"], [41, "fixes"]], "What\u2019s new in myQLM 1.6.0": [[37, "what-s-new-in-myqlm-1-6-0"]], "What\u2019s new in myQLM 1.5.1": [[37, "what-s-new-in-myqlm-1-5-1"]], "What\u2019s new in myQLM 1.4.0": [[37, "what-s-new-in-myqlm-1-4-0"]], "myQLM Power Access": [[37, "myqlm-power-access"], [38, "myqlm-power-access"]], "Known problems": [[37, "known-problems"], [38, "known-problems"]], "Support": [[42, "support"]], "List of notebooks": [[43, "list-of-notebooks"]], "Tutorials": [[43, "tutorials"]], "Running digital quantum simulations for spin and fermionic systems": [[43, "running-digital-quantum-simulations-for-spin-and-fermionic-systems"]], "Programming with qat.lang": [[43, "programming-with-qat-lang"]], "None": [[43, "none"]], "Adding plugins to your computation stack": [[43, "adding-plugins-to-your-computation-stack"]], "Designing and running variational algorithms in the QLM": [[43, "designing-and-running-variational-algorithms-in-the-qlm"]], "First steps with the QLM": [[43, "first-steps-with-the-qlm"]], "Combinatorial Optimization Problems": [[43, "combinatorial-optimization-problems"]], "interoperability": [[43, "interoperability"]], "Simulation of quantum circuits on the QLM: introduction": [[43, "simulation-of-quantum-circuits-on-the-qlm-introduction"]], "ObservableSplitter : turning observable sampling into qubit sampling": [[44, "module-qat.plugins.observable_splitter"]], "ADAPT-VQE: building iteratively efficient ansatze": [[45, "adapt-vqe-building-iteratively-efficient-ansatze"]], "GradientDescentOptimizer: Natural gradient descent optimizer": [[46, "gradientdescentoptimizer-natural-gradient-descent-optimizer"]], "MultipleLaunchesAnalyzer: running several optimizations and keeping the best one": [[47, "multiplelaunchesanalyzer-running-several-optimizations-and-keeping-the-best-one"]], "SeqOptim: optimizing circuits with the sequential optimization algorithm": [[48, "seqoptim-optimizing-circuits-with-the-sequential-optimization-algorithm"]], "ZeroNoiseExtrapolator: zero-noise extrapolation for multiqubit noise mitigation": [[49, "zeronoiseextrapolator-zero-noise-extrapolation-for-multiqubit-noise-mitigation"]], "Writing quantum circuits": [[50, "writing-quantum-circuits"]], "Allocating qubit and classical registers:": [[50, "allocating-qubit-and-classical-registers"]], "Quantum gates": [[50, "quantum-gates"]], "Native gates, controls and daggers": [[50, "native-gates-controls-and-daggers"]], "Defining new parametrized gates: Abstract Gates": [[50, "defining-new-parametrized-gates-abstract-gates"]], "Custom gates": [[50, "custom-gates"]], "Quantum routines": [[50, "quantum-routines"]], "Other operations": [[50, "other-operations"]], "Quantum routine librairies": [[50, "quantum-routine-librairies"]], "Generating the circuit": [[50, "generating-the-circuit"]], "Exporting the circuit": [[50, "exporting-the-circuit"]], "More advanced usage": [[50, "more-advanced-usage"]], "qat-core: Core data structures and Abstract classes": [[51, "qat-core-core-data-structures-and-abstract-classes"]], "Abstract classes": [[51, "abstract-classes"]], "Remote interfaces": [[51, "remote-interfaces"]], "Batch and Job": [[51, "batch-and-job"]], "Schedules": [[51, "schedules"]], "Building schedules": [[51, "building-schedules"]], "Manipulating schedules": [[51, "manipulating-schedules"]], "Temporal composition": [[51, "temporal-composition"]], "Parallel composition": [[51, "parallel-composition"]], "Rescaling a schedule": [[51, "rescaling-a-schedule"]], "Time translation of a schedule": [[51, "time-translation-of-a-schedule"]], "Analog Jobs": [[51, "analog-jobs"]], "Displaying circuits": [[51, "displaying-circuits"]], "Hardware specifications": [[51, "hardware-specifications"]], "Gate set and gate signatures": [[51, "gate-set-and-gate-signatures"]], "Variables and expressions": [[51, "variables-and-expressions"]], "Various methods and tools": [[51, "various-methods-and-tools"]], "Plugins & Junctions": [[51, "plugins-junctions"]], "qat.devices: The device library": [[52, "module-qat.devices"]], "Predefined devices": [[52, "predefined-devices"]], "Device generators": [[52, "device-generators"]], "Digital quantum simulation for spin and fermionic systems": [[53, "digital-quantum-simulation-for-spin-and-fermionic-systems"], [58, "digital-quantum-simulation-for-spin-and-fermionic-systems"]], "Table of Contents": [[54, "table-of-contents"], [58, "table-of-contents"]], "Variational Quantum Eigensolver (VQE)": [[54, "variational-quantum-eigensolver-vqe"]], "Quantum Chemistry tools for VQE": [[54, "quantum-chemistry-tools-for-vqe"]], "MolecularHamiltonian": [[54, "molecularhamiltonian"], [58, "molecularhamiltonian"]], "MoleculeInfo": [[54, "moleculeinfo"], [58, "moleculeinfo"]], "Fermionic ansatz circuits": [[54, "fermionic-ansatz-circuits"], [58, "fermionic-ansatz-circuits"]], "Quantum phase estimation": [[54, "quantum-phase-estimation"], [58, "quantum-phase-estimation"]], "Trotterization tools": [[54, "trotterization-tools"]], "Quantum subspace expansion": [[54, "quantum-subspace-expansion"], [58, "quantum-subspace-expansion"]], "Defining a Hamiltonian": [[55, "defining-a-hamiltonian"]], "Spin Hamiltonians": [[55, "spin-hamiltonians"]], "Fermionic Hamiltonians": [[55, "fermionic-hamiltonians"]], "Fermionic Hamiltonian using one and two-electrons integrals": [[55, "fermionic-hamiltonian-using-one-and-two-electrons-integrals"]], "The get_matrix() method": [[55, "the-get-matrix-method"]], "Fermionic to spin representation": [[55, "fermionic-to-spin-representation"]], "Spin and fermionic Hamiltonian operations": [[55, "spin-and-fermionic-hamiltonian-operations"]], "Some Hamiltonian constructors": [[55, "some-hamiltonian-constructors"]], "Changelog": [[56, "changelog"]], "Main updates": [[56, "main-updates"]], "Miscellanous": [[56, "miscellanous"]], "Plugins": [[57, "plugins"], [58, "plugins"], [67, "plugins"]], "The Hamiltonians classes": [[58, "the-hamiltonians-classes"]], "SpinHamiltonian": [[58, "spinhamiltonian"]], "FermionHamiltonian": [[58, "fermionhamiltonian"]], "ElectronicStructureHamiltonian": [[58, "electronicstructurehamiltonian"]], "Atomic and molecular studies study": [[58, "atomic-and-molecular-studies-study"]], "Common many-body Hamiltonians": [[58, "common-many-body-hamiltonians"]], "The Hubbard model": [[58, "the-hubbard-model"]], "The single-impurity Anderson Model": [[58, "the-single-impurity-anderson-model"]], "The generalized impurity Hamiltonian": [[58, "the-generalized-impurity-hamiltonian"]], "The spin-fermion transforms": [[58, "the-spin-fermion-transforms"]], "Jordan-Wigner transform": [[58, "jordan-wigner-transform"]], "Bravyi-Kitaev transform": [[58, "bravyi-kitaev-transform"]], "Parity basis transform": [[58, "parity-basis-transform"]], "Low-Depth Circuit Ansatz (LDCA)": [[58, "low-depth-circuit-ansatz-ldca"]], "Multi-Reference (MR) ansatz": [[58, "multi-reference-mr-ansatz"]], "Multi-Reference, Excitation-Preserving (MREP) ansatz": [[58, "multi-reference-excitation-preserving-mrep-ansatz"]], "General hardware-efficient ansatz": [[58, "general-hardware-efficient-ansatz"]], "The 8-parameter circuit ansatz": [[58, "the-8-parameter-circuit-ansatz"]], "Compressed LDCA ansatz (only for QLM users)": [[58, "compressed-ldca-ansatz-only-for-qlm-users"]], "Unitary Coupled-Cluster (UCC)": [[58, "unitary-coupled-cluster-ucc"]], "Utility functions": [[58, "utility-functions"]], "qat.lang : Programming tools": [[59, "qat-lang-programming-tools"]], "The Program class": [[59, "the-program-class"]], "Gate structures": [[59, "gate-structures"]], "Quantum Types": [[59, "quantum-types"]], "Quantum boolean and expressions": [[59, "quantum-boolean-and-expressions"]], "Other structures": [[59, "other-structures"]], "Classical bits and Boolean formulae": [[59, "classical-bits-and-boolean-formulae"]], "Utilities": [[59, "module-qat.lang.AQASM.util"]], "Gate set management and generation": [[59, "module-qat.lang.AQASM.misc"]], "Quantum libraries": [[59, "quantum-libraries"]], "Linker and low level circuit manipulation": [[59, "linker-and-low-level-circuit-manipulation"]], "Basic algorithms": [[59, "basic-algorithms"]], "Arithmetic routines": [[60, "arithmetic-routines"]], "QFT-based arithmetic": [[60, "module-qat.lang.AQASM.qftarith"]], "Overview": [[60, "overview"]], "Carry-based arithmetic": [[60, "module-qat.lang.AQASM.classarith"]], "Agnostic/High-level arithmetic": [[60, "module-qat.lang.AQASM.arithmetic"]], "State preparation and QRAM circuits": [[61, "state-preparation-and-qram-circuits"]], "References": [[61, "references"]], "qat-opt: representation and encoding of combinatorial problems, QAOA": [[62, "qat-opt-representation-and-encoding-of-combinatorial-problems-qaoa"]], "Declaring and manipulating combinatorial problems": [[62, "declaring-and-manipulating-combinatorial-problems"]], "Generic combinatorial optimization": [[62, "generic-combinatorial-optimization"]], "Quadratic problems: QUBO and Ising": [[62, "quadratic-problems-qubo-and-ising"]], "Generating the QAOA Ansatz": [[62, "generating-the-qaoa-ansatz"]], "Generating QA jobs": [[62, "generating-qa-jobs"]], "Encoding NP-hard Problems": [[62, "encoding-np-hard-problems"]], "QuameleonPlugin : emulating hardware constraints via a plugin": [[63, "module-qat.core.quameleon"]], "Remap: unused qubits remover": [[64, "remap-unused-qubits-remover"]], "Running variational algorithms": [[65, "running-variational-algorithms"], [65, "id1"]], "Variational jobs": [[65, "variational-jobs"]], "Binding variables": [[65, "binding-variables"]], "Differentiating jobs": [[65, "differentiating-jobs"]], "Testing for several initializations of the parameters": [[65, "testing-for-several-initializations-of-the-parameters"]], "Executing quantum circuits": [[66, "executing-quantum-circuits"]], "Describing a quantum job": [[66, "describing-a-quantum-job"]], "A full example on the Bell state circuit": [[66, "a-full-example-on-the-bell-state-circuit"]], "SAMPLE mode": [[66, "sample-mode"]], "Infinite number of shots, all qubits": [[66, "infinite-number-of-shots-all-qubits"]], "Finite number of shots, all qubits": [[66, "finite-number-of-shots-all-qubits"]], "Infinite number of shots, only one qubit": [[66, "infinite-number-of-shots-only-one-qubit"]], "OBSERVABLE mode": [[66, "observable-mode"]], "Infinite number of shots": [[66, "infinite-number-of-shots"]], "Finite number of shots": [[66, "finite-number-of-shots"]], "Further information": [[66, "further-information"]], "The core library": [[67, "the-core-library"]], "The programming library": [[67, "the-programming-library"]], "The device library": [[67, "the-device-library"]], "Generators": [[67, "generators"]], "QPUs": [[67, "qpus"]], "Interoperability with other frameworks": [[67, "interoperability-with-other-frameworks"]], "Digital quantum simulation tools": [[67, "digital-quantum-simulation-tools"]], "Combinatorial optimization and QAOA": [[67, "combinatorial-optimization-and-qaoa"]], "Plugins for variational algorithms": [[68, "plugins-for-variational-algorithms"]], "Vertex Cover Generator": [[69, "vertex-cover-generator"]]}, "indexentries": {"module": [[0, "module-qat.opt.generators"], [5, "module-qat.lang.linking.plugin"], [14, "module-qat.core.console"], [23, "module-qat.interop.cirq.converters"], [31, "module-qat.interop.projectq.converters"], [32, "module-qat.interop.pyquil.converters"], [32, "module-qat.interop.pyquil.providers"], [33, "module-qat.clinalg"], [34, "module-qat.pylinalg"], [34, "module-qat.pylinalg.simulator"], [35, "module-qat.simulated_annealing"], [36, "module-qat.interop.qiskit.converters"], [36, "module-qat.interop.qiskit.providers"], [36, "module-qat.interop.qiskit.runtime"], [44, "module-qat.plugins.observable_splitter"], [45, "module-qat.plugins.MultipleLaunchesAnalyzer"], [46, "module-qat.plugins.GradientDescentOptimizer"], [47, "module-qat.plugins.MultipleLaunchesAnalyzer"], [48, "module-qat.plugins.SeqOptim"], [49, "module-qat.plugins.ZeroNoiseExtrapolator"], [51, "module-qat.core"], [51, "module-qat.core.wrappers.observable"], [52, "module-qat.devices"], [53, "module-qat.fermion"], [59, "module-qat.lang"], [59, "module-qat.lang.AQASM.misc"], [59, "module-qat.lang.AQASM.util"], [60, "module-qat.lang.AQASM"], [60, "module-qat.lang.AQASM.arithmetic"], [60, "module-qat.lang.AQASM.classarith"], [60, "module-qat.lang.AQASM.qftarith"], [63, "module-qat.core.quameleon"], [67, "module-qat"]], "qat.opt.generators": [[0, "module-qat.opt.generators"]], "op (class in qat.comm.datamodel.ttypes)": [[4, "qat.comm.datamodel.ttypes.Op"], [19, "qat.comm.datamodel.ttypes.Op"]], "qat.comm.datamodel.ttypes.gatedefinition (built-in class)": [[4, "qat.comm.datamodel.ttypes.GateDefinition"], [19, "qat.comm.datamodel.ttypes.GateDefinition"]], "circuitinliner (class in qat.lang.linking.plugin)": [[5, "qat.lang.linking.plugin.CircuitInliner"]], "addargs() (qat.lang.linking.plugin.circuitinliner class method)": [[5, "qat.lang.linking.plugin.CircuitInliner.addargs"]], "compile() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.compile"]], "do_post_processing() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.do_post_processing"]], "post_process() (qat.lang.linking.plugin.circuitinliner method)": [[5, "qat.lang.linking.plugin.CircuitInliner.post_process"]], "qat.lang.linking.plugin": [[5, "module-qat.lang.linking.plugin"]], "graphpartitioningresult (class in qat.opt.results)": [[6, "qat.opt.results.GraphPartitioningResult"]], "kcliqueresult (class in qat.opt.results)": [[6, "qat.opt.results.KCliqueResult"]], "vertexcoverresult (class in qat.opt.results)": [[6, "qat.opt.results.VertexCoverResult"]], "clique (qat.opt.results.kcliqueresult property)": [[6, "qat.opt.results.KCliqueResult.clique"]], "cover (qat.opt.results.vertexcoverresult property)": [[6, "qat.opt.results.VertexCoverResult.cover"]], "display() (qat.opt.results.graphpartitioningresult method)": [[6, "qat.opt.results.GraphPartitioningResult.display"]], "costfunctionplugin (class in qat.plugins)": [[13, "qat.plugins.CostFunctionPlugin"]], "display (class in qat.core.console)": [[14, "qat.core.console.Display"]], "compile() (qat.core.console.display method)": [[14, "qat.core.console.Display.compile"]], "do_post_processing() (qat.core.console.display method)": [[14, "qat.core.console.Display.do_post_processing"]], "post_process() (qat.core.console.display method)": [[14, "qat.core.console.Display.post_process"]], "qat.core.console": [[14, "module-qat.core.console"]], "graphcolouringgenerator (class in qat.opt.generators)": [[16, "qat.opt.generators.GraphColouringGenerator"]], "generate() (qat.opt.generators.graphcolouringgenerator method)": [[16, "qat.opt.generators.GraphColouringGenerator.generate"]], "graphpartitioninggenerator (class in qat.opt.generators)": [[17, "qat.opt.generators.GraphPartitioningGenerator"]], "generate() (qat.opt.generators.graphpartitioninggenerator method)": [[17, "qat.opt.generators.GraphPartitioningGenerator.generate"]], "qat.comm.exceptions.ttypes.errortype (built-in class)": [[19, "qat.comm.exceptions.ttypes.ErrorType"]], "qat.comm.exceptions.ttypes.pluginexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.PluginException"]], "qat.comm.exceptions.ttypes.qpuexception (built-in class)": [[19, "qat.comm.exceptions.ttypes.QPUException"]], "kcliquegenerator (class in qat.opt.generators)": [[20, "qat.opt.generators.KCliqueGenerator"]], "generate() (qat.opt.generators.kcliquegenerator method)": [[20, "qat.opt.generators.KCliqueGenerator.generate"]], "maxcutgenerator (class in qat.opt.generators)": [[22, "qat.opt.generators.MaxCutGenerator"]], "generate() (qat.opt.generators.maxcutgenerator method)": [[22, "qat.opt.generators.MaxCutGenerator.generate"]], "cirq_to_qlm() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.cirq_to_qlm"]], "qat.interop.cirq.converters": [[23, "module-qat.interop.cirq.converters"]], "qlm_to_cirq() (in module qat.interop.cirq)": [[23, "qat.interop.cirq.qlm_to_cirq"]], "oqasmparser (class in qat.interop.openqasm)": [[30, "qat.interop.openqasm.OqasmParser"]], "compile() (qat.interop.openqasm.oqasmparser method)": [[30, "qat.interop.openqasm.OqasmParser.compile"]], "aqasmengine (class in qat.interop.projectq)": [[31, "qat.interop.projectq.AqasmEngine"]], "aqasmprinter (class in qat.interop.projectq)": [[31, "qat.interop.projectq.AqasmPrinter"]], "projectq_to_qlm() (qat.interop.projectq.aqasmengine method)": [[31, "qat.interop.projectq.AqasmEngine.projectq_to_qlm"]], "qat.interop.projectq.converters": [[31, "module-qat.interop.projectq.converters"]], "pyquilqpu (class in qat.interop.pyquil)": [[32, "qat.interop.pyquil.PyquilQPU"]], "pyquil_to_qlm() (in module qat.interop.pyquil)": [[32, "qat.interop.pyquil.pyquil_to_qlm"]], "qat.interop.pyquil.converters": [[32, "module-qat.interop.pyquil.converters"]], "qat.interop.pyquil.providers": [[32, "module-qat.interop.pyquil.providers"]], "qlm_to_pyquil() (in module qat.interop.pyquil)": [[32, "qat.interop.pyquil.qlm_to_pyquil"]], "set_qpu() (qat.interop.pyquil.pyquilqpu method)": [[32, "qat.interop.pyquil.PyquilQPU.set_qpu"]], "submit() (qat.interop.pyquil.pyquilqpu method)": [[32, "qat.interop.pyquil.PyquilQPU.submit"]], "submit_job() (qat.interop.pyquil.pyquilqpu method)": [[32, "qat.interop.pyquil.PyquilQPU.submit_job"]], "clinalg (class in qat.clinalg)": [[33, "qat.clinalg.CLinalg"]], "clinalgstatevectorcpudouble (class in qat.clinalg.wrapper)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble"]], "apply_1qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_ctrl_gate"]], "apply_1qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_1qbit_gate"]], "apply_2qbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_ctrl_gate"]], "apply_2qbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_2qbit_gate"]], "apply_ccnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CCNOT"]], "apply_cnot() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CNOT"]], "apply_csign() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_CSIGN"]], "apply_h() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_H"]], "apply_iswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_ISWAP"]], "apply_ph() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_PH"]], "apply_rx() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RX"]], "apply_ry() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RY"]], "apply_rz() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_RZ"]], "apply_s() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_S"]], "apply_sqrtswap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SQRTSWAP"]], "apply_swap() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_SWAP"]], "apply_t() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_T"]], "apply_x() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_X"]], "apply_y() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Y"]], "apply_z() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_Z"]], "apply_nqbit_ctrl_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_ctrl_gate"]], "apply_nqbit_gate() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.apply_nqbit_gate"]], "array (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array"]], "array_readonly (qat.clinalg.wrapper.clinalgstatevectorcpudouble property)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.array_readonly"]], "expectation_value() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.expectation_value"]], "get_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_distribution"]], "get_mapped_distribution() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_distribution"]], "get_mapped_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_mapped_statevector"]], "get_permuted_statevector() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.get_permuted_statevector"]], "print() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.print"]], "project() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.project"]], "qat.clinalg": [[33, "module-qat.clinalg"]], "reset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.reset"]], "resize() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.resize"]], "sample() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample"]], "sample_subset() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.sample_subset"]], "set_num_threads() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.set_num_threads"]], "simulate_circuit() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.simulate_circuit"]], "state_probability() (qat.clinalg.wrapper.clinalgstatevectorcpudouble method)": [[33, "qat.clinalg.wrapper.CLinalgStateVectorCPUDouble.state_probability"]], "submit() (qat.clinalg.clinalg method)": [[33, "qat.clinalg.CLinalg.submit"]], "pylinalg (class in qat.pylinalg)": [[34, "qat.pylinalg.PyLinalg"]], "mat2nparray() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.mat2nparray"]], "measure() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.measure"]], "project() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.project"]], "qat.pylinalg": [[34, "module-qat.pylinalg"]], "qat.pylinalg.simulator": [[34, "module-qat.pylinalg.simulator"]], "raise_break() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.raise_break"]], "reset() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.reset"]], "serve() (qat.pylinalg.pylinalg method)": [[34, "qat.pylinalg.PyLinalg.serve"]], "simulate() (in module qat.pylinalg.simulator)": [[34, "qat.pylinalg.simulator.simulate"]], "submit() (qat.pylinalg.pylinalg method)": [[34, "qat.pylinalg.PyLinalg.submit"]], "submit_job() (qat.pylinalg.pylinalg method)": [[34, "qat.pylinalg.PyLinalg.submit_job"]], "simulatedannealing (class in qat.simulated_annealing)": [[35, "qat.simulated_annealing.SimulatedAnnealing"]], "extract_j_and_h_from_obs() (in module qat.simulated_annealing.service)": [[35, "qat.simulated_annealing.service.extract_j_and_h_from_obs"]], "integer_to_spins() (in module qat.core.spins)": [[35, "qat.core.spins.integer_to_spins"]], "qat.simulated_annealing": [[35, "module-qat.simulated_annealing"]], "sa() (qat.simulated_annealing.simulatedannealing method)": [[35, "qat.simulated_annealing.SimulatedAnnealing.sa"]], "spins_to_integer() (in module qat.core.spins)": [[35, "qat.core.spins.spins_to_integer"]], "submit_job() (qat.simulated_annealing.simulatedannealing method)": [[35, "qat.simulated_annealing.SimulatedAnnealing.submit_job"]], "asyncbackendtoqpu (class in qat.interop.qiskit)": [[36, "qat.interop.qiskit.AsyncBackendToQPU"]], "backendtoqpu (class in qat.interop.qiskit)": [[36, "qat.interop.qiskit.BackendToQPU"]], "qputobackend (class in qat.interop.qiskit)": [[36, "qat.interop.qiskit.QPUToBackend"]], "qiskitjob (class in qat.interop.qiskit)": [[36, "qat.interop.qiskit.QiskitJob"]], "qiskitruntimeqpu (class in qat.interop.qiskit.runtime)": [[36, "qat.interop.qiskit.runtime.QiskitRuntimeQPU"]], "cancel() (qat.interop.qiskit.qiskitjob method)": [[36, "qat.interop.qiskit.QiskitJob.cancel"]], "dump() (qat.interop.qiskit.qiskitjob method)": [[36, "qat.interop.qiskit.QiskitJob.dump"]], "job_id() (qat.interop.qiskit.qiskitjob method)": [[36, "qat.interop.qiskit.QiskitJob.job_id"]], "qat.interop.qiskit.converters": [[36, "module-qat.interop.qiskit.converters"]], "qat.interop.qiskit.providers": [[36, "module-qat.interop.qiskit.providers"]], "qat.interop.qiskit.runtime": [[36, "module-qat.interop.qiskit.runtime"]], "qiskit_to_qlm() (in module qat.interop.qiskit)": [[36, "qat.interop.qiskit.qiskit_to_qlm"]], "qlm_to_qiskit() (in module qat.interop.qiskit)": [[36, "qat.interop.qiskit.qlm_to_qiskit"]], "result() (qat.interop.qiskit.qiskitjob method)": [[36, "qat.interop.qiskit.QiskitJob.result"]], "retrieve_job() (qat.interop.qiskit.asyncbackendtoqpu method)": [[36, "qat.interop.qiskit.AsyncBackendToQPU.retrieve_job"]], "set_qpu() (qat.interop.qiskit.qputobackend method)": [[36, "qat.interop.qiskit.QPUToBackend.set_qpu"]], "status() (qat.interop.qiskit.qiskitjob method)": [[36, "qat.interop.qiskit.QiskitJob.status"]], "submit() (qat.interop.qiskit.asyncbackendtoqpu method)": [[36, "qat.interop.qiskit.AsyncBackendToQPU.submit"]], "submit() (qat.interop.qiskit.backendtoqpu method)": [[36, "qat.interop.qiskit.BackendToQPU.submit"]], "submit() (qat.interop.qiskit.runtime.qiskitruntimeqpu method)": [[36, "qat.interop.qiskit.runtime.QiskitRuntimeQPU.submit"]], "observablesplitter (class in qat.plugins)": [[44, "qat.plugins.ObservableSplitter"]], "addargs() (qat.plugins.observablesplitter class method)": [[44, "qat.plugins.ObservableSplitter.addargs"]], "compile() (qat.plugins.observablesplitter method)": [[44, "qat.plugins.ObservableSplitter.compile"]], "do_post_processing() (qat.plugins.observablesplitter method)": [[44, "qat.plugins.ObservableSplitter.do_post_processing"]], "get_fresh_key() (qat.plugins.observablesplitter method)": [[44, "qat.plugins.ObservableSplitter.get_fresh_key"]], "post_process() (qat.plugins.observablesplitter method)": [[44, "qat.plugins.ObservableSplitter.post_process"]], "qat.plugins.observable_splitter": [[44, "module-qat.plugins.observable_splitter"]], "adaptvqeplugin (class in qat.plugins)": [[45, "qat.plugins.AdaptVQEPlugin"]], "qat.plugins.multiplelaunchesanalyzer": [[45, "module-qat.plugins.MultipleLaunchesAnalyzer"], [47, "module-qat.plugins.MultipleLaunchesAnalyzer"]], "gradientdescentoptimizer (class in qat.plugins)": [[46, "qat.plugins.GradientDescentOptimizer"]], "qat.plugins.gradientdescentoptimizer": [[46, "module-qat.plugins.GradientDescentOptimizer"]], "multiplelaunchesanalyzer (class in qat.plugins)": [[47, "qat.plugins.MultipleLaunchesAnalyzer"]], "qat.plugins.seqoptim": [[48, "module-qat.plugins.SeqOptim"]], "zeronoiseextrapolator (class in qat.plugins)": [[49, "qat.plugins.ZeroNoiseExtrapolator"]], "qat.plugins.zeronoiseextrapolator": [[49, "module-qat.plugins.ZeroNoiseExtrapolator"]], "abstractgenerator (class in qat.core.generator)": [[51, "qat.core.generator.AbstractGenerator"]], "abstractplugin (class in qat.plugins)": [[51, "qat.plugins.AbstractPlugin"]], "application (class in qat.core.application)": [[51, "qat.core.application.Application"]], "arithexpression (class in qat.core.variables)": [[51, "qat.core.variables.ArithExpression"]], "batch (class in qat.core)": [[51, "qat.core.Batch"]], "batchresult (class in qat.core)": [[51, "qat.core.BatchResult"]], "circuit (class in qat.core)": [[51, "qat.core.Circuit"]], "gateset (class in qat.core.gate_set)": [[51, "qat.core.gate_set.GateSet"]], "gatesignature (class in qat.core.gate_set)": [[51, "qat.core.gate_set.GateSignature"]], "gatesyntaxredefinition (class in qat.core.gate_set)": [[51, "qat.core.gate_set.GateSyntaxRedefinition"]], "hardwarespecs (class in qat.core)": [[51, "qat.core.HardwareSpecs"]], "intermediatemeasurement (class in qat.comm.shared.ttypes)": [[51, "qat.comm.shared.ttypes.IntermediateMeasurement"]], "job (class in qat.core)": [[51, "qat.core.Job"]], "junction (class in qat.plugins)": [[51, "qat.plugins.Junction"]], "observable (class in qat.core)": [[51, "qat.core.Observable"]], "optimizer (class in qat.plugins)": [[51, "qat.plugins.Optimizer"]], "processingtype (class in qat.comm.shared.ttypes)": [[51, "qat.comm.shared.ttypes.ProcessingType"]], "qpuhandler (class in qat.core.qpu)": [[51, "qat.core.qpu.QPUHandler"]], "remoteapplication (class in qat.core.application)": [[51, "qat.core.application.RemoteApplication"]], "remotebatchgenerator (class in qat.core.generator)": [[51, "qat.core.generator.RemoteBatchGenerator"]], "remoteplugin (class in qat.core.plugins)": [[51, "qat.core.plugins.RemotePlugin"]], "remoteqpu (class in qat.core.qpu)": [[51, "qat.core.qpu.RemoteQPU"]], "result (class in qat.core)": [[51, "qat.core.Result"]], "sample (class in qat.core.wrappers.result)": [[51, "qat.core.wrappers.result.Sample"]], "schedule (class in qat.core)": [[51, "qat.core.Schedule"]], "state (class in qat.core.wrappers.result)": [[51, "qat.core.wrappers.result.State"]], "symbol (class in qat.core.variables)": [[51, "qat.core.variables.Symbol"]], "term (class in qat.core)": [[51, "qat.core.Term"]], "topology (class in qat.core)": [[51, "qat.core.Topology"]], "topologytype (class in qat.core)": [[51, "qat.core.TopologyType"]], "variable (class in qat.core)": [[51, "qat.core.Variable"]], "add_edge() (qat.core.topology method)": [[51, "qat.core.Topology.add_edge"]], "add_sample() (qat.core.result method)": [[51, "qat.core.Result.add_sample"]], "add_signature() (qat.core.gate_set.gateset method)": [[51, "qat.core.gate_set.GateSet.add_signature"]], "amplitude (qat.core.wrappers.result.sample property)": [[51, "qat.core.wrappers.result.Sample.amplitude"]], "append() (qat.core.batchresult method)": [[51, "qat.core.BatchResult.append"]], "as_graph() (qat.core.hardwarespecs method)": [[51, "qat.core.HardwareSpecs.as_graph"]], "as_quameleon() (qat.core.hardwarespecs method)": [[51, "qat.core.HardwareSpecs.as_quameleon"]], "bind_variable() (qat.core.circuit method)": [[51, "qat.core.Circuit.bind_variable"]], "bind_variables() (qat.core.circuit method)": [[51, "qat.core.Circuit.bind_variables"]], "bitstring (qat.core.wrappers.result.state property)": [[51, "qat.core.wrappers.result.State.bitstring"]], "coeff (qat.core.term attribute)": [[51, "qat.core.Term.coeff"]], "compile() (qat.plugins.abstractplugin method)": [[51, "qat.plugins.AbstractPlugin.compile"]], "constant_coeff (qat.core.observable attribute)": [[51, "qat.core.Observable.constant_coeff"]], "count() (qat.core.circuit method)": [[51, "qat.core.Circuit.count"]], "dag() (qat.core.circuit method)": [[51, "qat.core.Circuit.dag"]], "default_gate_set() (in module qat.core.circuit_builder.matrix_util)": [[51, "qat.core.circuit_builder.matrix_util.default_gate_set"]], "differentiate() (qat.core.job method)": [[51, "qat.core.Job.differentiate"]], "differentiate() (qat.core.variable method)": [[51, "qat.core.Variable.differentiate"]], "differentiate() (qat.core.variables.arithexpression method)": [[51, "qat.core.variables.ArithExpression.differentiate"]], "display() (in module qat.core.console)": [[51, "qat.core.console.display"]], "display() (qat.core.circuit method)": [[51, "qat.core.Circuit.display"]], "do_post_processing() (qat.plugins.abstractplugin method)": [[51, "qat.plugins.AbstractPlugin.do_post_processing"]], "dump() (qat.core.batch method)": [[51, "qat.core.Batch.dump"]], "dump() (qat.core.batchresult method)": [[51, "qat.core.BatchResult.dump"]], "dump() (qat.core.circuit method)": [[51, "qat.core.Circuit.dump"]], "dump() (qat.core.hardwarespecs method)": [[51, "qat.core.HardwareSpecs.dump"]], "dump() (qat.core.job method)": [[51, "qat.core.Job.dump"]], "dump() (qat.core.result method)": [[51, "qat.core.Result.dump"]], "dump() (qat.core.schedule method)": [[51, "qat.core.Schedule.dump"]], "dump() (qat.core.topology method)": [[51, "qat.core.Topology.dump"]], "empty() (qat.core.circuit static method)": [[51, "qat.core.Circuit.empty"]], "evaluate() (in module qat.core.formula_eval)": [[51, "qat.core.formula_eval.evaluate"]], "evaluate() (qat.plugins.optimizer method)": [[51, "qat.plugins.Optimizer.evaluate"]], "execute() (qat.core.application.application method)": [[51, "qat.core.application.Application.execute"]], "execute() (qat.plugins.junction method)": [[51, "qat.plugins.Junction.execute"]], "extend() (qat.core.batchresult method)": [[51, "qat.core.BatchResult.extend"]], "fill_matrices() (qat.core.circuit method)": [[51, "qat.core.Circuit.fill_matrices"]], "from_bytes() (qat.core.batch class method)": [[51, "qat.core.Batch.from_bytes"]], "from_bytes() (qat.core.circuit class method)": [[51, "qat.core.Circuit.from_bytes"]], "from_bytes() (qat.core.job class method)": [[51, "qat.core.Job.from_bytes"]], "from_bytes() (qat.core.result class method)": [[51, "qat.core.Result.from_bytes"]], "from_bytes() (qat.core.topology class method)": [[51, "qat.core.Topology.from_bytes"]], "from_bytes() (qat.core.wrappers.result.sample class method)": [[51, "qat.core.wrappers.result.Sample.from_bytes"]], "from_nx() (qat.core.topology static method)": [[51, "qat.core.Topology.from_nx"]], "from_string() (qat.core.variables.arithexpression static method)": [[51, "qat.core.variables.ArithExpression.from_string"]], "from_thrift() (qat.core.batch class method)": [[51, "qat.core.Batch.from_thrift"]], "from_thrift() (qat.core.batchresult class method)": [[51, "qat.core.BatchResult.from_thrift"]], "from_thrift() (qat.core.circuit class method)": [[51, "qat.core.Circuit.from_thrift"]], "from_thrift() (qat.core.hardwarespecs class method)": [[51, "qat.core.HardwareSpecs.from_thrift"]], "from_thrift() (qat.core.job class method)": [[51, "qat.core.Job.from_thrift"]], "from_thrift() (qat.core.result class method)": [[51, "qat.core.Result.from_thrift"]], "from_thrift() (qat.core.topology class method)": [[51, "qat.core.Topology.from_thrift"]], "from_thrift() (qat.core.wrappers.result.sample class method)": [[51, "qat.core.wrappers.result.Sample.from_thrift"]], "gate_set (qat.core.circuit property)": [[51, "qat.core.Circuit.gate_set"]], "generate() (qat.core.generator.abstractgenerator method)": [[51, "qat.core.generator.AbstractGenerator.generate"]], "get_circuit() (qat.core.gate_set.gatesignature method)": [[51, "qat.core.gate_set.GateSignature.get_circuit"]], "get_matrix() (qat.core.gate_set.gatesignature method)": [[51, "qat.core.gate_set.GateSignature.get_matrix"]], "get_param_generator() (in module qat.core.circuit_builder.matrix_util)": [[51, "qat.core.circuit_builder.matrix_util.get_param_generator"]], "get_predef_generator() (in module qat.core.circuit_builder.matrix_util)": [[51, "qat.core.circuit_builder.matrix_util.get_predef_generator"]], "get_variables() (qat.core.batch method)": [[51, "qat.core.Batch.get_variables"]], "get_variables() (qat.core.circuit method)": [[51, "qat.core.Circuit.get_variables"]], "get_variables() (qat.core.job method)": [[51, "qat.core.Job.get_variables"]], "get_variables() (qat.core.schedule method)": [[51, "qat.core.Schedule.get_variables"]], "get_variables() (qat.core.variable method)": [[51, "qat.core.Variable.get_variables"]], "get_variables() (qat.core.variables.arithexpression method)": [[51, "qat.core.variables.ArithExpression.get_variables"]], "gradient() (qat.core.job method)": [[51, "qat.core.Job.gradient"]], "insert_gate() (qat.core.circuit method)": [[51, "qat.core.Circuit.insert_gate"]], "int (qat.core.wrappers.result.state property)": [[51, "qat.core.wrappers.result.State.int"]], "ising (qat.core.observable attribute)": [[51, "qat.core.Observable.ising"]], "iterate_simple() (qat.core.circuit method)": [[51, "qat.core.Circuit.iterate_simple"]], "load() (qat.core.batch static method)": [[51, "qat.core.Batch.load"]], "load() (qat.core.batchresult static method)": [[51, "qat.core.BatchResult.load"]], "load() (qat.core.circuit class method)": [[51, "qat.core.Circuit.load"]], "load() (qat.core.hardwarespecs static method)": [[51, "qat.core.HardwareSpecs.load"]], "load() (qat.core.job class method)": [[51, "qat.core.Job.load"]], "load() (qat.core.result static method)": [[51, "qat.core.Result.load"]], "load() (qat.core.schedule class method)": [[51, "qat.core.Schedule.load"]], "load() (qat.core.topology static method)": [[51, "qat.core.Topology.load"]], "lsb_int (qat.core.wrappers.result.state property)": [[51, "qat.core.wrappers.result.State.lsb_int"]], "nbqbits (qat.core.hardwarespecs property)": [[51, "qat.core.HardwareSpecs.nbqbits"]], "nbqbits (qat.core.observable attribute)": [[51, "qat.core.Observable.nbqbits"]], "nbqbits (qat.core.topology property)": [[51, "qat.core.Topology.nbqbits"]], "op (qat.core.term attribute)": [[51, "qat.core.Term.op"]], "optimize() (qat.plugins.optimizer method)": [[51, "qat.plugins.Optimizer.optimize"]], "parameter_map (qat.core.job property)": [[51, "qat.core.Job.parameter_map"]], "parameter_map (qat.core.result property)": [[51, "qat.core.Result.parameter_map"]], "plot_in_notebook() (in module qat.core.printer)": [[51, "qat.core.printer.plot_in_notebook"]], "pretty_print() (qat.core.variables.arithexpression method)": [[51, "qat.core.variables.ArithExpression.pretty_print"]], "psi_0 (qat.core.job property)": [[51, "qat.core.Job.psi_0"]], "qat.core": [[51, "module-qat.core"]], "qat.core.wrappers.observable": [[51, "module-qat.core.wrappers.observable"]], "qbits (qat.core.term attribute)": [[51, "qat.core.Term.qbits"]], "remove_locks() (qat.core.circuit method)": [[51, "qat.core.Circuit.remove_locks"]], "run() (qat.plugins.junction method)": [[51, "qat.plugins.Junction.run"]], "serve() (qat.core.application.application method)": [[51, "qat.core.application.Application.serve"]], "serve() (qat.core.generator.abstractgenerator method)": [[51, "qat.core.generator.AbstractGenerator.serve"]], "serve() (qat.core.qpu.qpuhandler method)": [[51, "qat.core.qpu.QPUHandler.serve"]], "serve() (qat.plugins.abstractplugin method)": [[51, "qat.plugins.AbstractPlugin.serve"]], "set_circuit_generator() (qat.core.gate_set.gatesignature method)": [[51, "qat.core.gate_set.GateSignature.set_circuit_generator"]], "set_matrix_generator() (qat.core.gate_set.gatesignature method)": [[51, "qat.core.gate_set.GateSignature.set_matrix_generator"]], "set_nbqbits() (qat.core.topology method)": [[51, "qat.core.Topology.set_nbqbits"]], "set_qreg() (qat.core.wrappers.result.sample method)": [[51, "qat.core.wrappers.result.Sample.set_qreg"]], "shift_qbits() (qat.core.circuit method)": [[51, "qat.core.Circuit.shift_qbits"]], "shift_qbits() (qat.core.job method)": [[51, "qat.core.Job.shift_qbits"]], "state (qat.core.wrappers.result.sample property)": [[51, "qat.core.wrappers.result.Sample.state"]], "statistics() (qat.core.circuit method)": [[51, "qat.core.Circuit.statistics"]], "submit() (qat.core.qpu.qpuhandler method)": [[51, "qat.core.qpu.QPUHandler.submit"]], "submit_job() (qat.core.qpu.qpuhandler method)": [[51, "qat.core.qpu.QPUHandler.submit_job"]], "terms (qat.core.observable attribute)": [[51, "qat.core.Observable.terms"]], "to_job() (qat.core.circuit method)": [[51, "qat.core.Circuit.to_job"]], "to_job() (qat.core.schedule method)": [[51, "qat.core.Schedule.to_job"]], "to_nx() (qat.core.topology method)": [[51, "qat.core.Topology.to_nx"]], "to_thrift() (qat.core.batch method)": [[51, "qat.core.Batch.to_thrift"]], "to_thrift() (qat.core.job method)": [[51, "qat.core.Job.to_thrift"]], "to_thrift() (qat.core.variable method)": [[51, "qat.core.Variable.to_thrift"]], "to_thrift() (qat.core.variables.arithexpression method)": [[51, "qat.core.variables.ArithExpression.to_thrift"]], "union() (qat.core.gate_set.gateset method)": [[51, "qat.core.gate_set.GateSet.union"]], "value (qat.core.result property)": [[51, "qat.core.Result.value"]], "value (qat.core.wrappers.result.state property)": [[51, "qat.core.wrappers.result.State.value"]], "values (qat.core.result property)": [[51, "qat.core.Result.values"]], "wrap_samples() (qat.core.result method)": [[51, "qat.core.Result.wrap_samples"]], "wrapper_post_process() (qat.plugins.abstractplugin method)": [[51, "qat.plugins.AbstractPlugin.wrapper_post_process"]], "alltoall (class in qat.devices)": [[52, "qat.devices.AllToAll"]], "griddevice (class in qat.devices)": [[52, "qat.devices.GridDevice"]], "linedevice (class in qat.devices)": [[52, "qat.devices.LineDevice"]], "squaregriddevice (class in qat.devices)": [[52, "qat.devices.SquareGridDevice"]], "qat.devices": [[52, "module-qat.devices"]], "qat.fermion": [[53, "module-qat.fermion"]], "electronicstructurehamiltonian (class in qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian"]], "fermionhamiltonian (class in qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian"]], "molecularhamiltonian (class in qat.fermion.chemistry.wrapper)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian"]], "moleculeinfo (class in qat.fermion.chemistry.wrapper)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo"]], "spinhamiltonian (class in qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian"]], "apply_quantum_subspace_expansion() (in module qat.fermion.chemistry.qse)": [[58, "qat.fermion.chemistry.qse.apply_quantum_subspace_expansion"]], "compute_active_space_integrals() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.compute_active_space_integrals"]], "constant_coeff (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.constant_coeff"]], "constant_coeff (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.constant_coeff"]], "construct_ucc_ansatz() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.construct_ucc_ansatz"]], "convert_to_h_integrals() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.convert_to_h_integrals"]], "copy() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.copy"]], "copy() (qat.fermion.hamiltonians.spinhamiltonian method)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.copy"]], "dag() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.dag"]], "dag() (qat.fermion.hamiltonians.spinhamiltonian method)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.dag"]], "get_cluster_ops() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.get_cluster_ops"]], "get_electronic_hamiltonian() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.get_electronic_hamiltonian"]], "get_hf_ket() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.get_hf_ket"]], "get_matrix() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.get_matrix"]], "get_matrix() (qat.fermion.hamiltonians.spinhamiltonian method)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.get_matrix"]], "guess_init_params() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.guess_init_params"]], "hamiltonian (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.hamiltonian"]], "hpq (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpq"]], "hpqrs (qat.fermion.hamiltonians.electronicstructurehamiltonian attribute)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.hpqrs"]], "make_anderson_model() (in module qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.make_anderson_model"]], "make_compressed_ldca_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_compressed_ldca_circ"]], "make_embedded_model() (in module qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.make_embedded_model"]], "make_general_hwe_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_general_hwe_circ"]], "make_hubbard_model() (in module qat.fermion.hamiltonians)": [[58, "qat.fermion.hamiltonians.make_hubbard_model"]], "make_ldca_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_ldca_circ"]], "make_mr_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_mr_circ"]], "make_mrep_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_mrep_circ"]], "make_shallow_circ() (in module qat.fermion.circuits)": [[58, "qat.fermion.circuits.make_shallow_circ"]], "make_trotterisation_routine() (in module qat.fermion.trotterisation)": [[58, "qat.fermion.trotterisation.make_trotterisation_routine"]], "matrix (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.matrix"]], "matrix (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.matrix"]], "n_electrons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.n_electrons"]], "nbqbits (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.nbqbits"]], "nbqbits (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.nbqbits"]], "noons (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.noons"]], "normal_order (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.normal_order"]], "nqbits (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.nqbits"]], "nqbits (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.nqbits"]], "one_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.one_body_integrals"]], "one_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.one_body_integrals"]], "orbital_energies (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.orbital_energies"]], "perform_phase_estimation() (in module qat.fermion.phase_estimation)": [[58, "qat.fermion.phase_estimation.perform_phase_estimation"]], "perform_pyscf_computation() (in module qat.fermion.chemistry.pyscf_tools)": [[58, "qat.fermion.chemistry.pyscf_tools.perform_pyscf_computation"]], "restrict_active_space() (qat.fermion.chemistry.wrapper.moleculeinfo method)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.restrict_active_space"]], "select_active_orbitals() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.select_active_orbitals"]], "select_active_space() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.select_active_space"]], "terms (qat.fermion.hamiltonians.fermionhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.terms"]], "terms (qat.fermion.hamiltonians.spinhamiltonian attribute)": [[58, "qat.fermion.hamiltonians.SpinHamiltonian.terms"]], "to_electronic() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.to_electronic"]], "to_fermion() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_fermion"]], "to_spin() (qat.fermion.hamiltonians.electronicstructurehamiltonian method)": [[58, "qat.fermion.hamiltonians.ElectronicStructureHamiltonian.to_spin"]], "to_spin() (qat.fermion.hamiltonians.fermionhamiltonian method)": [[58, "qat.fermion.hamiltonians.FermionHamiltonian.to_spin"]], "transform_basis() (qat.fermion.chemistry.wrapper.molecularhamiltonian method)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.transform_basis"]], "transform_integrals_to_new_basis() (in module qat.fermion.chemistry.ucc)": [[58, "qat.fermion.chemistry.ucc.transform_integrals_to_new_basis"]], "transform_to_bk_basis() (in module qat.fermion.transforms)": [[58, "qat.fermion.transforms.transform_to_bk_basis"]], "transform_to_jw_basis() (in module qat.fermion.transforms)": [[58, "qat.fermion.transforms.transform_to_jw_basis"]], "transform_to_parity_basis() (in module qat.fermion.transforms)": [[58, "qat.fermion.transforms.transform_to_parity_basis"]], "two_body_integrals (qat.fermion.chemistry.wrapper.molecularhamiltonian attribute)": [[58, "qat.fermion.chemistry.wrapper.MolecularHamiltonian.two_body_integrals"]], "two_body_integrals (qat.fermion.chemistry.wrapper.moleculeinfo attribute)": [[58, "qat.fermion.chemistry.wrapper.MoleculeInfo.two_body_integrals"]], "abstractgate (class in qat.lang.aqasm.gates)": [[59, "qat.lang.AQASM.gates.AbstractGate"]], "boolformula (class in qat.lang.aqasm.bits)": [[59, "qat.lang.AQASM.bits.BoolFormula"]], "cregister (class in qat.lang.aqasm.bits)": [[59, "qat.lang.AQASM.bits.CRegister"]], "cbit (class in qat.lang.aqasm.bits)": [[59, "qat.lang.AQASM.bits.Cbit"]], "gate (class in qat.lang.aqasm.gates)": [[59, "qat.lang.AQASM.gates.Gate"]], "linker (class in qat.lang.linking.linker)": [[59, "qat.lang.linking.linker.Linker"]], "paramgate (class in qat.lang.aqasm.gates)": [[59, "qat.lang.AQASM.gates.ParamGate"]], "program (class in qat.lang.aqasm)": [[59, "qat.lang.AQASM.Program"]], "qarithexp (class in qat.lang.aqasm.qint)": [[59, "qat.lang.AQASM.qint.QArithExp"]], "qbool (class in qat.lang.aqasm.qbool)": [[59, "qat.lang.AQASM.qbool.QBool"]], "qboolarray (class in qat.lang.aqasm.qbool)": [[59, "qat.lang.AQASM.qbool.QBoolArray"]], "qclause (class in qat.lang.aqasm.qbool)": [[59, "qat.lang.AQASM.qbool.QClause"]], "qcompexp (class in qat.lang.aqasm.qint)": [[59, "qat.lang.AQASM.qint.QCompExp"]], "qint (class in qat.lang.aqasm.qint)": [[59, "qat.lang.AQASM.qint.QInt"]], "qregister (class in qat.lang.aqasm.bits)": [[59, "qat.lang.AQASM.bits.QRegister"]], "qroutine (class in qat.lang.aqasm.routines)": [[59, "qat.lang.AQASM.routines.QRoutine"]], "qbit (class in qat.lang.aqasm.bits)": [[59, "qat.lang.AQASM.bits.Qbit"]], "variablenamenotavailable (class in qat.core.circuit_builder.builder)": [[59, "qat.core.circuit_builder.builder.VariableNameNotAvailable"]], "add_signature() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.add_signature"]], "amplification_step() (in module qat.lang.algorithms)": [[59, "qat.lang.algorithms.amplification_step"]], "apply() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.apply"]], "apply() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.apply"]], "build_gate (class in qat.lang.aqasm.misc)": [[59, "qat.lang.AQASM.misc.build_gate"]], "calloc() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.calloc"]], "cast() (qat.lang.aqasm.qbool.qbool method)": [[59, "qat.lang.AQASM.qbool.QBool.cast"]], "cast() (qat.lang.aqasm.qbool.qboolarray method)": [[59, "qat.lang.AQASM.qbool.QBoolArray.cast"]], "cast() (qat.lang.aqasm.qint.qint method)": [[59, "qat.lang.AQASM.qint.QInt.cast"]], "cast_to() (qat.lang.aqasm.qbool.qbool method)": [[59, "qat.lang.AQASM.qbool.QBool.cast_to"]], "cbits_list() (qat.lang.aqasm.bits.boolformula method)": [[59, "qat.lang.AQASM.bits.BoolFormula.cbits_list"]], "cbreak() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.cbreak"]], "cc_apply() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.cc_apply"]], "clear_gate_set() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.clear_gate_set"]], "comment() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.comment"]], "compute() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.compute"]], "conj() (qat.lang.aqasm.gates.gate method)": [[59, "qat.lang.AQASM.gates.Gate.conj"]], "conjugate() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.conjugate"]], "ctrl() (qat.lang.aqasm.gates.gate method)": [[59, "qat.lang.AQASM.gates.Gate.ctrl"]], "dag() (qat.lang.aqasm.gates.gate method)": [[59, "qat.lang.AQASM.gates.Gate.dag"]], "dag() (qat.lang.aqasm.gates.paramgate method)": [[59, "qat.lang.AQASM.gates.ParamGate.dag"]], "display() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.display"]], "display() (qat.lang.aqasm.gates.paramgate method)": [[59, "qat.lang.AQASM.gates.ParamGate.display"]], "evaluate() (qat.lang.aqasm.qbool.qbool method)": [[59, "qat.lang.AQASM.qbool.QBool.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qboolarray method)": [[59, "qat.lang.AQASM.qbool.QBoolArray.evaluate"]], "evaluate() (qat.lang.aqasm.qbool.qclause method)": [[59, "qat.lang.AQASM.qbool.QClause.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qarithexp method)": [[59, "qat.lang.AQASM.qint.QArithExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qcompexp method)": [[59, "qat.lang.AQASM.qint.QCompExp.evaluate"]], "evaluate() (qat.lang.aqasm.qint.qint method)": [[59, "qat.lang.AQASM.qint.QInt.evaluate"]], "export() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.export"]], "free_ancillae() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.free_ancillae"]], "free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.free_ancillae"]], "generate_gate_set() (in module qat.lang.aqasm.misc)": [[59, "qat.lang.AQASM.misc.generate_gate_set"]], "get_free_ancillae() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.get_free_ancillae"]], "get_free_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.get_free_ancillae"]], "grover_diffusion() (in module qat.lang.algorithms.amplification)": [[59, "qat.lang.algorithms.amplification.grover_diffusion"]], "householder() (in module qat.lang.algorithms.amplification)": [[59, "qat.lang.algorithms.amplification.householder"]], "link() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.link"]], "link_gates() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.link_gates"]], "link_matrices() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.link_matrices"]], "logic() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.logic"]], "measure() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.measure"]], "new_var() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.new_var"]], "new_wires() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.new_wires"]], "phase() (qat.lang.aqasm.qbool.qbool method)": [[59, "qat.lang.AQASM.qbool.QBool.phase"]], "phase() (qat.lang.aqasm.qbool.qclause method)": [[59, "qat.lang.AQASM.qbool.QClause.phase"]], "phase() (qat.lang.aqasm.qint.qcompexp method)": [[59, "qat.lang.AQASM.qint.QCompExp.phase"]], "phase_estimation() (in module qat.lang.algorithms)": [[59, "qat.lang.algorithms.phase_estimation"]], "qalloc() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.qalloc"]], "qat.lang": [[59, "module-qat.lang"]], "qat.lang.aqasm.misc": [[59, "module-qat.lang.AQASM.misc"]], "qat.lang.aqasm.util": [[59, "module-qat.lang.AQASM.util"]], "qbits_list() (qat.lang.aqasm.qbool.qbool method)": [[59, "qat.lang.AQASM.qbool.QBool.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qboolarray method)": [[59, "qat.lang.AQASM.qbool.QBoolArray.qbits_list"]], "qbits_list() (qat.lang.aqasm.qbool.qclause method)": [[59, "qat.lang.AQASM.qbool.QClause.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qcompexp method)": [[59, "qat.lang.AQASM.qint.QCompExp.qbits_list"]], "qbits_list() (qat.lang.aqasm.qint.qint method)": [[59, "qat.lang.AQASM.qint.QInt.qbits_list"]], "quantum_counting() (in module qat.lang.algorithms)": [[59, "qat.lang.algorithms.quantum_counting"]], "reset() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.reset"]], "set_ancillae() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.set_ancillae"]], "set_dag() (qat.lang.aqasm.gates.abstractgate method)": [[59, "qat.lang.AQASM.gates.AbstractGate.set_dag"]], "set_gate_set() (qat.lang.linking.linker.linker method)": [[59, "qat.lang.linking.linker.Linker.set_gate_set"]], "set_value() (qat.lang.aqasm.qint.qint method)": [[59, "qat.lang.AQASM.qint.QInt.set_value"]], "suppr_ctrl() (in module qat.lang.aqasm.util)": [[59, "qat.lang.AQASM.util.suppr_ctrl"]], "to_circ() (qat.lang.aqasm.program method)": [[59, "qat.lang.AQASM.Program.to_circ"]], "to_thrift() (qat.lang.aqasm.bits.boolformula method)": [[59, "qat.lang.AQASM.bits.BoolFormula.to_thrift"]], "toffoli_fold() (in module qat.lang.aqasm.util)": [[59, "qat.lang.AQASM.util.toffoli_fold"]], "trans() (qat.lang.aqasm.gates.gate method)": [[59, "qat.lang.AQASM.gates.Gate.trans"]], "uncompute() (qat.lang.aqasm.routines.qroutine method)": [[59, "qat.lang.AQASM.routines.QRoutine.uncompute"]], "uniform_distribution() (in module qat.lang.algorithms.amplification)": [[59, "qat.lang.algorithms.amplification.uniform_distribution"]], "qft() (in module qat.lang.aqasm.qftarith)": [[60, "qat.lang.AQASM.qftarith.QFT"]], "add() (in module qat.lang.aqasm.classarith)": [[60, "qat.lang.AQASM.classarith.add"]], "add() (in module qat.lang.aqasm.qftarith)": [[60, "qat.lang.AQASM.qftarith.add"]], "add_const() (in module qat.lang.aqasm.classarith)": [[60, "qat.lang.AQASM.classarith.add_const"]], "add_const() (in module qat.lang.aqasm.qftarith)": [[60, "qat.lang.AQASM.qftarith.add_const"]], "add_const_mod() (in module qat.lang.aqasm.arithmetic)": [[60, "qat.lang.AQASM.arithmetic.add_const_mod"]], "add_mod() (in module qat.lang.aqasm.arithmetic)": [[60, "qat.lang.AQASM.arithmetic.add_mod"]], "cuccaro_add() (in module qat.lang.aqasm.classarith)": [[60, "qat.lang.AQASM.classarith.cuccaro_add"]], "modular_exp() (in module qat.lang.aqasm.arithmetic)": [[60, "qat.lang.AQASM.arithmetic.modular_exp"]], "mult() (in module qat.lang.aqasm.qftarith)": [[60, "qat.lang.AQASM.qftarith.mult"]], "mult_const() (in module qat.lang.aqasm.arithmetic)": [[60, "qat.lang.AQASM.arithmetic.mult_const"]], "mult_const() (in module qat.lang.aqasm.qftarith)": [[60, "qat.lang.AQASM.qftarith.mult_const"]], "mult_const_mod() (in module qat.lang.aqasm.arithmetic)": [[60, "qat.lang.AQASM.arithmetic.mult_const_mod"]], "qat.lang.aqasm": [[60, "module-qat.lang.AQASM"]], "qat.lang.aqasm.arithmetic": [[60, "module-qat.lang.AQASM.arithmetic"]], "qat.lang.aqasm.classarith": [[60, "module-qat.lang.AQASM.classarith"]], "qat.lang.aqasm.qftarith": [[60, "module-qat.lang.AQASM.qftarith"]], "kptree (class in qat.lang.models)": [[61, "qat.lang.models.KPTree"]], "get_routine() (qat.lang.models.kptree method)": [[61, "qat.lang.models.KPTree.get_routine"]], "ansatzfactory (class in qat.vsolve.ansatz)": [[62, "qat.vsolve.ansatz.AnsatzFactory"]], "bilp (class in qat.opt.binary_linear_integer_programming)": [[62, "qat.opt.binary_linear_integer_programming.BILP"]], "circuitgenerator (class in qat.opt.circuit_generator)": [[62, "qat.opt.circuit_generator.CircuitGenerator"]], "clause (class in qat.opt.boolexpr)": [[62, "qat.opt.boolexpr.Clause"]], "combinatorialproblem (class in qat.opt)": [[62, "qat.opt.CombinatorialProblem"]], "graphcolouring (class in qat.opt.graph_colouring)": [[62, "qat.opt.graph_colouring.GraphColouring"]], "graphpartitioning (class in qat.opt.graph_partitioning)": [[62, "qat.opt.graph_partitioning.GraphPartitioning"]], "independentannealing (class in qat.opt.mixing_factory)": [[62, "qat.opt.mixing_factory.IndependentAnnealing"]], "initialstatebuilder (class in qat.opt.mixing_factory)": [[62, "qat.opt.mixing_factory.InitialStateBuilder"]], "ising (class in qat.opt)": [[62, "qat.opt.Ising"]], "kclique (class in qat.opt.k_clique)": [[62, "qat.opt.k_clique.KClique"]], "maxcut (class in qat.opt.max_cut)": [[62, "qat.opt.max_cut.MaxCut"]], "mixingfactory (class in qat.opt)": [[62, "qat.opt.MixingFactory"]], "numberpartitioning (class in qat.opt.number_partitioning)": [[62, "qat.opt.number_partitioning.NumberPartitioning"]], "qubo (class in qat.opt)": [[62, "qat.opt.QUBO"]], "schedulegenerator (class in qat.opt.schedule_generator)": [[62, "qat.opt.schedule_generator.ScheduleGenerator"]], "simpleinitialstate (class in qat.opt.mixing_factory)": [[62, "qat.opt.mixing_factory.SimpleInitialState"]], "var (class in qat.opt.boolexpr)": [[62, "qat.opt.boolexpr.Var"]], "vertexcover (class in qat.opt.vertex_cover)": [[62, "qat.opt.vertex_cover.VertexCover"]], "add_clause() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.add_clause"]], "annealing_job() (qat.opt.schedule_generator.schedulegenerator method)": [[62, "qat.opt.schedule_generator.ScheduleGenerator.annealing_job"]], "bit_flip() (qat.opt.mixingfactory static method)": [[62, "qat.opt.MixingFactory.bit_flip"]], "bit_move() (qat.opt.mixingfactory static method)": [[62, "qat.opt.MixingFactory.bit_move"]], "evaluate() (qat.opt.boolexpr.var method)": [[62, "qat.opt.boolexpr.Var.evaluate"]], "get_best_parameters() (qat.opt.ising method)": [[62, "qat.opt.Ising.get_best_parameters"]], "get_best_parameters() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.get_best_parameters"]], "get_best_parameters() (qat.opt.binary_linear_integer_programming.bilp method)": [[62, "qat.opt.binary_linear_integer_programming.BILP.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_colouring.graphcolouring method)": [[62, "qat.opt.graph_colouring.GraphColouring.get_best_parameters"]], "get_best_parameters() (qat.opt.graph_partitioning.graphpartitioning method)": [[62, "qat.opt.graph_partitioning.GraphPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.k_clique.kclique method)": [[62, "qat.opt.k_clique.KClique.get_best_parameters"]], "get_best_parameters() (qat.opt.max_cut.maxcut method)": [[62, "qat.opt.max_cut.MaxCut.get_best_parameters"]], "get_best_parameters() (qat.opt.number_partitioning.numberpartitioning method)": [[62, "qat.opt.number_partitioning.NumberPartitioning.get_best_parameters"]], "get_best_parameters() (qat.opt.vertex_cover.vertexcover method)": [[62, "qat.opt.vertex_cover.VertexCover.get_best_parameters"]], "get_j_h_and_offset() (qat.opt.ising method)": [[62, "qat.opt.Ising.get_j_h_and_offset"]], "get_observable() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.get_observable"]], "get_observable() (qat.opt.ising method)": [[62, "qat.opt.Ising.get_observable"]], "get_observable() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.get_observable"]], "get_observable() (qat.opt.boolexpr.clause method)": [[62, "qat.opt.boolexpr.Clause.get_observable"]], "get_observable() (qat.opt.boolexpr.var method)": [[62, "qat.opt.boolexpr.Var.get_observable"]], "get_q_and_offset() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.get_q_and_offset"]], "get_variables() (qat.opt.boolexpr.var method)": [[62, "qat.opt.boolexpr.Var.get_variables"]], "index (qat.opt.boolexpr.var attribute)": [[62, "qat.opt.boolexpr.Var.index"]], "inject_initial_state() (qat.opt.mixing_factory.independentannealing method)": [[62, "qat.opt.mixing_factory.IndependentAnnealing.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.initialstatebuilder method)": [[62, "qat.opt.mixing_factory.InitialStateBuilder.inject_initial_state"]], "inject_initial_state() (qat.opt.mixing_factory.simpleinitialstate method)": [[62, "qat.opt.mixing_factory.SimpleInitialState.inject_initial_state"]], "new_var() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.new_var"]], "new_vars() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.new_vars"]], "parse_result() (qat.opt.graph_colouring.graphcolouring method)": [[62, "qat.opt.graph_colouring.GraphColouring.parse_result"]], "parse_result() (qat.opt.graph_partitioning.graphpartitioning method)": [[62, "qat.opt.graph_partitioning.GraphPartitioning.parse_result"]], "parse_result() (qat.opt.k_clique.kclique method)": [[62, "qat.opt.k_clique.KClique.parse_result"]], "parse_result() (qat.opt.max_cut.maxcut method)": [[62, "qat.opt.max_cut.MaxCut.parse_result"]], "parse_result() (qat.opt.vertex_cover.vertexcover method)": [[62, "qat.opt.vertex_cover.VertexCover.parse_result"]], "produce_j_h_and_offset() (in module qat.opt.graph_partitioning)": [[62, "qat.opt.graph_partitioning.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.max_cut)": [[62, "qat.opt.max_cut.produce_j_h_and_offset"]], "produce_j_h_and_offset() (in module qat.opt.number_partitioning)": [[62, "qat.opt.number_partitioning.produce_j_h_and_offset"]], "produce_q_and_offset() (in module qat.opt.binary_linear_integer_programming)": [[62, "qat.opt.binary_linear_integer_programming.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.graph_colouring)": [[62, "qat.opt.graph_colouring.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.k_clique)": [[62, "qat.opt.k_clique.produce_q_and_offset"]], "produce_q_and_offset() (in module qat.opt.vertex_cover)": [[62, "qat.opt.vertex_cover.produce_q_and_offset"]], "qaoa_ansatz() (qat.opt.circuit_generator.circuitgenerator method)": [[62, "qat.opt.circuit_generator.CircuitGenerator.qaoa_ansatz"]], "qaoa_circuit() (qat.vsolve.ansatz.ansatzfactory static method)": [[62, "qat.vsolve.ansatz.AnsatzFactory.qaoa_circuit"]], "to_combinatorial_problem() (qat.opt.ising method)": [[62, "qat.opt.Ising.to_combinatorial_problem"]], "to_combinatorial_problem() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.to_combinatorial_problem"]], "to_ising() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.to_ising"]], "to_ising() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.to_ising"]], "to_job() (qat.opt.ising method)": [[62, "qat.opt.Ising.to_job"]], "to_job() (qat.opt.qubo method)": [[62, "qat.opt.QUBO.to_job"]], "to_qubo() (qat.opt.combinatorialproblem method)": [[62, "qat.opt.CombinatorialProblem.to_qubo"]], "to_qubo() (qat.opt.ising method)": [[62, "qat.opt.Ising.to_qubo"]], "quameleonplugin (class in qat.core.quameleon)": [[63, "qat.core.quameleon.QuameleonPlugin"]], "qat.core.quameleon": [[63, "module-qat.core.quameleon"]], "remap (class in qat.plugins)": [[64, "qat.plugins.Remap"]], "qat": [[67, "module-qat"]], "psominimizeplugin (class in qat.plugins)": [[68, "qat.plugins.PSOMinimizePlugin"]], "spsaminimizeplugin (class in qat.plugins)": [[68, "qat.plugins.SPSAMinimizePlugin"]], "scipyminimizeplugin (class in qat.plugins)": [[68, "qat.plugins.ScipyMinimizePlugin"]], "seqoptim (class in qat.plugins)": [[68, "qat.plugins.SeqOptim"]], "set_options() (qat.plugins.scipyminimizeplugin method)": [[68, "qat.plugins.ScipyMinimizePlugin.set_options"]], "vertexcovergenerator (class in qat.opt.generators)": [[69, "qat.opt.generators.VertexCoverGenerator"]], "generate() (qat.opt.generators.vertexcovergenerator method)": [[69, "qat.opt.generators.VertexCoverGenerator.generate"]]}})
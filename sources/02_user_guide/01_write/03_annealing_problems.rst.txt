.. _annealing_programming:

Annealing programming
=====================

Many real life problems are combinatorial and can be formulated as minimization or maximization problems, i.e. with a cost function. At the same time finding the lowest energy of a physical system, represented by a cost Hamiltonian, is also a minimization problem. Due to this intimate relation, problems described with a cost function (:ref:`QUBO <qubo_description>`) or a cost Hamiltonian (:ref:`Ising <ising_description>`) could be solved by simulating the process of finding their minimum energy. This process is called *annealing* and the lowest energy found should contain the solution to our problem.

.. only:: qlm

    The following sections present the definitions of :ref:`Ising Hamiltonians <ising_description>`, :ref:`QUBO <qubo_description>` cost functions and general :ref:`Combinatorial problems <comb_prob_description>`, how to encode them, along with our conventions regarding their precise formulation (see also this :notebook:`(introductory notebook)[introduction_combinatorial_optimization.ipynb]`).
    Once encoded, the problems can be sent to a :ref:`Simulated Quantum Annealer<simulated_quantum_annealing>` for execution.

.. only:: myqlm

    The following sections present the definitions of :ref:`Ising Hamiltonians <ising_description>`, :ref:`QUBO <qubo_description>` cost functions and general :ref:`Combinatorial problems <comb_prob_description>`, how to encode them, along with our conventions regarding their precise formulation  (see also this :notebook:`(introductory notebook)[introduction_combinatorial_optimization_myqlm.ipynb]`).
    Once encoded, the problems can be sent to a :ref:`Simulated Annealer<simulated_annealing>` for execution.

.. autocard::
    :columns: 3

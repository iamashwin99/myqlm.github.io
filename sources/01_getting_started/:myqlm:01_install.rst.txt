.. _install:

Installing myQLM
================

.. toctree::
    :hidden:

    :myqlm:license
    :myqlm:macos.rst


Please read the :ref:`Atos myQLM End-User Licence Agreement (Atos myQLM EULA) <license>`
carefully before using myQLM. You are only permitted to use myQLM pursuant to the terms
and conditions of this agreement. This agreement is between you and
(as an individual or legal entity) and Bull SAS.

By downloading of installing myQLM or otherwise rendering it available for your use,
you are agreeing to be bound by the terms of :ref:`this license <license>`. If you do
not agree with the terms, do not download, install, copy or otherwise use myQLM.
If you have downloaded or installed myQLM and do not agree to the terms, promptly delete myQLM.

Prerequisites
-------------

myQLM is installed using the *Package Installer for Python* (a.k.a. pip - `download pip here <https://pip.pypa.io/en/stable/installation/>`_) or *conda*.
Please check the compatibility matrix displayed bellow to see if your installation is supported.

.. _install-matrix:

Compatibility Matrix
********************

.. include:: compatibility_matrix.inc


Install
-------

Install myQLM package
*********************

Please install myQLM by typing the following command in a Windows, :ref:`MacOS <macos>` or Linux prompt:

.. tab-set::

    .. tab-item:: CPython

        .. code-block::

            pip install myqlm

            # For python < 3.11
            pip install dill==0.3.5.1

    .. tab-item:: Conda

        .. code-block::

            conda install -c myqlm myqlm

            # For python < 3.11
            conda install -c conda-forge dill=0.3.5.1

For CPython, the commands above install all dependency packages needed for myqlm to work, but not under Conda.
The Conda environment resolver can take an infinite time to complete, and will likely fail because it does not have all myqlm requirements.
Consequently, all dependency packages have not been included in the bz2 files.
Instead, it is expected to install them manually before using myqlm. Some of them will need to be installed using pip from from pypi.org
because conda-forge does not have all required packages (such as thrift 0.16).
Finally, make sure that you keep a clean base environment to avoid packages conflict, and use `conda clean --all` as needed.

.. tab-set::

    .. tab-item:: Conda supplementary packages common to all platforms

        .. code-block::

            conda install -c conda-forge bitstring qutip cvxpy anytree pydoe svgwrite
            pip install thrift==0.16.0 jax[cpu] pyOpenSSL wand

    .. tab-item:: Conda supplementary packages on Windows

        .. code-block::

            pip install windows-curses

.. _install-magics:

.. dropdown:: myQLM with Jupyter for CPython and Conda
    :icon: repo

    myQLM comes with interactive tutorials (or notebooks). Your environment needs to be configured
    to use all advanced features provided by myQLM:

     - **Install Jupyter:** myQLM notebooks are designed to work with jupyter. You can install
       jupyter by typing the following command:

        .. code-block::

           pip install jupyter

     - **Install Ghostscript for PDF:** myQLM can display circuit in PDF format. If Ghostscript is not already
       installed, please follow `the Ghostscript download page <https://www.ghostscript.com/releases/gsdnld.html>`_
       to install this program

     - **Install myQLM magics:** myQLM provides a magic :code:`%qatdisplay` to display circuit inside a jupyter
       notebook. These magics can be installed using the following command:

       .. code-block::

           python -m qat.magics.install

    myQLM is now configured for jupyter. Please download :ref:`myQLM notebooks here <download-notebooks>`
    and start the notebook :code:`overview.ipynb`, this notebook contains a table of
    content of all our tutorials.

.. _install-interop:

Interoperability
****************

.. warning::

    Interoperability packages are deprecated for Python versions 3.6 and 3.7

This package enables access to other quantum programming environments such as
Qiskit, ProjectQ, PyQuil, Cirq ...
This package will not automatically install dependency packages because someone who
want to interface with Qiskit may not want to interface with Cirq... The desired
quantum environment can be cherry-picked using the pip command:

.. tab-set::

    .. tab-item:: Qiskit

        .. code-block::

            pip install myqlm-interop[qiskit_binder]

    .. tab-item:: ProjectQ

        .. code-block::

            pip install myqlm-interop[projectq_binder]

    .. tab-item:: Cirq

        .. code-block::

            pip install myqlm-interop[cirq_binder]

    .. tab-item:: PyQuil

        .. code-block::

            pip install myqlm-interop[pyquil_binder]

    .. tab-item:: All frameworks

        .. warning::

            Dependencies of these frameworks could conflict. Installing myQLM-interop for all these framework
            can fail

        .. code-block::

            pip install myqlm-interop[all]
